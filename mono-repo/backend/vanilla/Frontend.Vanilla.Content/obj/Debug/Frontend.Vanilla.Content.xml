<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Frontend.Vanilla.Content</name>
    </assembly>
    <members>
        <member name="T:Frontend.Vanilla.Content.Client.IClientContentService">
            <summary>
            A service that provides content that is processed to be easily serializable for the client.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.IClientContentService.GetAsync(Frontend.Vanilla.Content.DocumentId,System.Threading.CancellationToken,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets a content document and converts it to client side POCO class.
            Uses <see cref="M:Frontend.Vanilla.Content.IContentService.Get``1(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions)" /> method to get the base content.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.IClientContentService.GetChildrenAsync(Frontend.Vanilla.Content.DocumentId,System.Threading.CancellationToken,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets a collection of child content documents and converts them to client side POCO classes.
            Uses <see cref="M:Frontend.Vanilla.Content.IContentService.GetChildren``1(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions)" /> method to get the base content.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.IClientContentService.GetAsync(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.DocumentId},System.Threading.CancellationToken,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets a collection of content documents and converts them to client side POCO classes.
            Uses <see cref="M:Frontend.Vanilla.Content.IContentService.Get``1(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.DocumentId},Frontend.Vanilla.Content.ContentLoadOptions)" /> method to get the base content.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.IClientContentService.ConvertAsync(Frontend.Vanilla.Content.IDocument,System.Threading.CancellationToken,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Executes conversion to a client POCO class on an existing <see cref="T:Frontend.Vanilla.Content.IDocument"/>.
            In case of an error it either throws exception or logs it and returns null.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientFolder">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IFolder"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientLinkTemplate">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.ILinkTemplate"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCCarousel">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPCCarousel"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCComponentFolder">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPCComponentFolder"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCContainer">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPCContainer"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCImage">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPCImage"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCImageText">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPCImageText"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCMenu">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IFolder"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCRegionalComponent">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPCRegionalComponent"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCScrollMenu">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPCScrollMenu"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCTeaser">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPCTeaser"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCText">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPCText"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPCVideo">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPCVideo"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPM1Col">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPM1ColPage"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPM2Col">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPM12ColPage"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientPMNav1Col">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IPMNav1ColPage"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientProxy">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IProxy"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientStaticFileTemplate">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IStaticFileTemplate"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientViewTemplate">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IViewTemplate"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Documents.ClientGenericListItem">
            <summary>
            A client representation of <see cref="T:Frontend.Vanilla.Content.Model.IGenericListItem"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext">
            <summary>
            Contains helpers for mapping content to client content classes.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext.CancellationToken">
            <summary>Gets the current cancellation token. It's automatically passed to all async methods of this context.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext.LoadMenuAsync(Frontend.Vanilla.Content.DocumentId)">
            <summary>Loads content for specified <c>ids</c> and converts them to client classes.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext.LoadAsync(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.DocumentId})">
            <summary>Loads content for specified <c>ids</c> and converts them to client classes.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext.LoadAsync(Frontend.Vanilla.Content.DocumentId)">
            <summary>Loads content for specified <c>id</c> and converts it to client class.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext.ConvertAsync(Frontend.Vanilla.Content.IDocument)">
            <summary>Converts content to client class.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext.CreateOptionalCollection(Frontend.Vanilla.Content.Model.ContentParameters)">
            <summary>
            Creates a client serializable representation of <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/>.
            Returns null if the <c>collection</c> itself is null or empty.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext.CreateCollection(Frontend.Vanilla.Content.Model.ContentParameters)">
            <summary>
            Creates a client serializable representation of <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/>.
            Returns empty collection if the <c>collection</c> itself is null or empty.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext.CreateText(System.String)">
            <summary>Normalizes text. Returns null if the <c>text</c> is null or white space.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext.CreateListItemCollection(System.Collections.Generic.IReadOnlyList{Frontend.Vanilla.Content.Model.ListItem})">
            <summary>Creates optional list item collection.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Infrastructure.ClientContentMapping">
            <summary>
            Wraps strongly-type <see cref="T:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentMapper`2" /> to non-generic class easier to handle all together.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Client.Infrastructure.ClientContentMapping.SourceType">
            <summary>
            Gets the source type of the mapper.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Client.Infrastructure.ClientContentMapping.TargetType">
            <summary>
            Gets the target type of the mapper.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.ClientContentMapping.Create``2(Frontend.Vanilla.Content.Client.Infrastructure.IClientContentMapper{``0,``1},System.Boolean)">
            <summary>Creates the mapping.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentServiceFactory">
            <summary>
            A factory that helps with creation of <see cref="T:Frontend.Vanilla.Content.Client.IClientContentService"/>.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentServiceFactory.CreateService``1(Frontend.Vanilla.Content.Client.Infrastructure.ClientContentServiceOptions)">
            <summary>
            Creates an instance of <see cref="T:Frontend.Vanilla.Content.Client.ClientContentService"/> that also implements <typeparamref name="TInterface"/>.
            </summary>
            <typeparam name="TInterface">The interface under which the service will be registered in DI.</typeparam>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentServiceFactory.CreateBaseMappings">
            <summary>
            Creates a collection of vanilla mappers that you can then customize and pass to <see cref="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentServiceFactory.CreateService``1(Frontend.Vanilla.Content.Client.Infrastructure.ClientContentServiceOptions)"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Infrastructure.ClientContentServiceOptions">
            <summary>
            Options for creating an instance of <see cref="T:Frontend.Vanilla.Content.Client.ClientContentService"/> with <see cref="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentServiceFactory.CreateService``1(Frontend.Vanilla.Content.Client.Infrastructure.ClientContentServiceOptions)"/>.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Client.Infrastructure.ClientContentServiceOptions.Mappings">
            <summary>
            The mappers the instance should use.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Infrastructure.ClientDocument">
            <summary>
            Base class for client content POCO classes.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Infrastructure.ClientFilteredDocument">
            <summary>
            A base class for templates that have DSL condition (they derive from <see cref="T:Frontend.Vanilla.Content.Model.IFilterTemplate"/>).
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Infrastructure.ClientPCBaseComponent">
            <summary>
            A base class for page matrix components (they derive from <see cref="T:Frontend.Vanilla.Content.Model.IPCBaseComponent"/>).
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Infrastructure.ClientPMBasePage">
            <summary>
            A base class for page matrix pages (they derive from <see cref="T:Frontend.Vanilla.Content.Model.IPMBasePage"/>).
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentMapper`2">
            <summary>
            Interface for mapper that converts content to client POCO classes.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Client.Infrastructure.IClientContentMapper`2.MapAsync(`0,`1,Frontend.Vanilla.Content.Client.Infrastructure.IClientContentContext)">
            <summary>Maps properties from source content to target client POCO class.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.CodeGeneration.CSharpCodeWriter">
            <summary>
            Generates strongly typed documents in C#.
            </summary>
            <remarks>
            After having some problems with both NVelocity, and StringTemplate, I decided to go for the manual
            approach, don't hit me.
            </remarks>
        </member>
        <member name="M:Frontend.Vanilla.Content.CodeGeneration.CSharpCodeWriter.#ctor(System.IO.Stream,System.Boolean,System.String)">
            <summary>
            Generates strongly typed documents in C#.
            </summary>
            <remarks>
            After having some problems with both NVelocity, and StringTemplate, I decided to go for the manual
            approach, don't hit me.
            </remarks>
        </member>
        <member name="M:Frontend.Vanilla.Content.CodeGeneration.IndentedTextWriter.Indent">
            <summary>
            Increment the indentation level.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.CodeGeneration.IndentedTextWriter.Unindent">
            <summary>
            Decrement the indentation level.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.CodeGeneration.IndentedTextWriter.Write(System.String)">
            <summary>
            Writes the specified text.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Frontend.Vanilla.Content.CodeGeneration.IndentedTextWriter.WriteLine">
            <summary>
            Writes the line.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.CodeGeneration.IndentedTextWriter.WriteLine(System.String)">
            <summary>
            Writes the line.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Frontend.Vanilla.Content.CodeGeneration.IndentedTextWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Writes the line.
            </summary>
            <param name="text">The text to write.</param>
            <param name="parameters">The parameters to be substituted in the text.</param>
        </member>
        <member name="M:Frontend.Vanilla.Content.CodeGeneration.IndentedTextWriter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.CodeGeneration.IndentedTextWriter.#ctor(System.IO.Stream,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Frontend.Vanilla.Content.CodeGeneration.IndentedTextWriter"/> class.
            </summary>
            <param name="targetStream">The target stream.</param>
            <param name="ownsStream">if set to <see langword="true"/> uses its own stream.</param>
            <param name="indentation">The indentation.</param>
        </member>
        <member name="T:Frontend.Vanilla.Content.ContentLoadOptions">
            <summary>
            Configures behavior of the content infrastructure when loading the content.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.ContentLoadOptions.PrefetchDepth">
            <summary>
            Indicates how many levels below the current item should be prefetched so that they are cached usually for subsequent retrieval.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.ContentLoadOptions.RequireTranslation">
            <summary>
            Indicates if language translation is required. Then untranslated content is treated as an <see cref="F:Frontend.Vanilla.Content.DocumentStatus.Invalid" />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.ContentLoadOptions.IncludeTranslation">
            <summary>
            Indicates if language translation should be included. Then untranslated content is treated as an <see cref="F:Frontend.Vanilla.Content.DocumentStatus.NotFound" />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.ContentLoadOptions.DslEvaluation">
            <summary>
            Specifies how Vanilla DSL should be evaluated when content is loaded. Currently this applies to filter condition and placeholders.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.ContentLoadOptions.BypassCache">
            <summary>
            Indicates if heckaton cache will be skipped and content will be directly served from CMS system. />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.ContentLoadOptions.Revision">
            <summary>
            Add revision value to the request. This will force skipping network level caches as creates new url. />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.ContentLoadOptions.BypassChildrenCache">
            <summary>
            Indicates if caching of children retrieved from parent when using PrefetchDepth should be skipped. If children are retrieved only from parent request it's better to set this to true as children cached requests would never be used.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.ContentLoadOptions.BypassPrefetchedProcessing">
            <summary>
            Used only for GetChildrenAsync.
            Indicates if Prefetched content retrieved with PrefetchDepth should be processed by any <see cref="T:Frontend.Vanilla.Content.Loading.IJustInTimeContentProcessor" />. If set to true no processor will run on the prefetched items.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.ContentLoadOptions.ToString">
            <summary>See <see cref="M:System.Object.ToString" />.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.ContentLoadOptions.op_Implicit(Frontend.Vanilla.Content.DslEvaluation)~Frontend.Vanilla.Content.ContentLoadOptions">
            <summary>
            Creates a <see cref="T:Frontend.Vanilla.Content.ContentLoadOptions" /> from given <paramref name="dslEvaluation" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.DslEvaluation">
            <summary>
            Specifies how Vanilla DSL should be evaluated when content is loaded.
            Currently this applies to filter condition and placeholders.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.DslEvaluation.FullOnServer">
            <summary>
            DSL is fully evaluated on the server.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.DslEvaluation.PartialForClient">
            <summary>
            DSL is partially evaluated on the server and additional expression is returned in corresponding fields to be evaluated on the client.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.ContentRequest">
            <summary>
            All details needed to make a REST request to fetch content from Sitecore service.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.IContentRequestFactory">
            <summary>
            Resolves <see cref="T:Frontend.Vanilla.Content.ContentRequest" /> for requested content.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.ContentServiceImpl.IGetChildrenCommand">
            <summary>
            Methods of <see cref="T:Frontend.Vanilla.Content.IContentService" /> for loading child documents by parent.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.ContentServiceImpl.IGetContentCommand">
            <summary>
            Implementation of <see cref="M:Frontend.Vanilla.Content.IContentService.GetContent``1(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions)" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.ContentServiceImpl.IGetDocumentCommand">
            <summary>
            Implementation of <see cref="M:Frontend.Vanilla.Content.IContentService.Get``1(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions)" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.ContentServiceImpl.IGetDocumentsCommand">
            <summary>
            Methods of <see cref="T:Frontend.Vanilla.Content.IContentService" /> for loading multiple documents by ids.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.ContentServiceImpl.IGetPrefetchedContentCommand">
            <summary>
            Implementation of <see cref="M:Frontend.Vanilla.Content.IContentService.GetContent``1(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions)" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.ContentServiceImpl.IGetPrefetchedDocumentCommand">
            <summary>
            Implementation of <see cref="M:Frontend.Vanilla.Content.IContentService.Get``1(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions)" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.ContentServiceImpl.IGetRequiredStringCommand">
            <summary>
            Gets the value of a content string field. It can't be null nor white-space. In case of an error it either throws an exception.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Content`1">
            <summary>
            Provides all information collected during a content retrieval operation.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Content`1.Status">
            <summary>Gets the document status.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Content`1.Id">
            <summary>Gets the id of the document.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Content`1.Metadata">
            <summary>Gets the document's metadata. It is null in case of <see cref="F:Frontend.Vanilla.Content.DocumentStatus.NotFound" /> and can be null in case of <see cref="F:Frontend.Vanilla.Content.DocumentStatus.Invalid" />.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Content`1.ToString">
            <summary>Gets string describing the content and it's status details.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.DocumentStatus">
            <summary>Represents status of the document of particular content item.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.DocumentStatus.Success">
            <summary>The content is <see cref="T:Frontend.Vanilla.Content.SuccessContent`1" />.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.DocumentStatus.Invalid">
            <summary>Document contains some <see cref="P:Frontend.Vanilla.Content.InvalidContent`1.Errors" /> thus is null.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.DocumentStatus.NotFound">
            <summary>The content is <see cref="T:Frontend.Vanilla.Content.NotFoundContent`1" />.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.DocumentStatus.Filtered">
            <summary>The content is <see cref="T:Frontend.Vanilla.Content.FilteredContent`1" />.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.SuccessContent`1">
            <summary>Successfully loaded content with a <see cref="P:Frontend.Vanilla.Content.SuccessContent`1.Document" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.SuccessContent`1.Status">
            <summary>Gets <see cref="F:Frontend.Vanilla.Content.DocumentStatus.Success" /> status.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.SuccessContent`1.Document">
            <summary>Gets the retrieved document.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.SuccessContent`1.ConditionResultType">
            <summary>Gets the <see cref="T:Frontend.Vanilla.Content.DslEvaluation" /> type, after the condition was evaluated. Null if there was no condition specified in the document.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.SuccessContent`1.Metadata">
            <summary>Gets the metadata from <see cref="P:Frontend.Vanilla.Content.SuccessContent`1.Document" />.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.SuccessContent`1.#ctor(`0,System.Nullable{Frontend.Vanilla.Content.DslEvaluation})">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.SuccessContent`1.ToString">
            <inheritdoc />
        </member>
        <member name="T:Frontend.Vanilla.Content.FilteredContent`1">
            <summary>Content was filtered out because DSL expression in its <see cref="P:Frontend.Vanilla.Content.Model.IFilterTemplate.Condition" /> field didn't pass.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FilteredContent`1.Status">
            <summary>Gets <see cref="F:Frontend.Vanilla.Content.DocumentStatus.Filtered" /> status.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FilteredContent`1.Metadata">
            <summary>Gets the metadata of document which is filtered out.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.FilteredContent`1.#ctor(Frontend.Vanilla.Content.IDocumentMetadata)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.NotFoundContent`1">
            <summary>Content was not found in Sitecore.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.NotFoundContent`1.Status">
            <summary>Gets <see cref="F:Frontend.Vanilla.Content.DocumentStatus.NotFound" /> status.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.NotFoundContent`1.Metadata">
            <summary>Gets <c>null</c> because nothing was found.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.NotFoundContent`1.#ctor(Frontend.Vanilla.Content.DocumentId)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.InvalidContent`1">
            <summary>Content which wasn't loaded because there were errors when fetching it from Sitecore, deserializing, evaluating for this request etc.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.InvalidContent`1.Status">
            <summary>Gets <see cref="F:Frontend.Vanilla.Content.DocumentStatus.Invalid" /> status.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.InvalidContent`1.Metadata">
            <summary>Gets the metadata of invalid document or <c>null</c> if failed to load any document.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.InvalidContent`1.Errors">
            <summary>Gets the errors describing why the content is invalid.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.InvalidContent`1.#ctor(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.IDocumentMetadata,Frontend.Vanilla.Core.System.Text.TrimmedRequiredString[])">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.InvalidContent`1.#ctor(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.IDocumentMetadata,System.Collections.Generic.IEnumerable{Frontend.Vanilla.Core.System.Text.TrimmedRequiredString})">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.InvalidContent`1.ToString">
            <inheritdoc />
        </member>
        <member name="T:Frontend.Vanilla.Content.DataSources.ISitecoreLanguageResolver">
            <summary>
            Resolves language parameters for requests to Sitecore REST service.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.DataSources.DefaultSitecoreLanguageResolver">
            <summary>
            Resolves Sitecore language parameters from given culture in a simple way.
            See WebSitecoreLanguageResolver which is the main implementation.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.DataSources.DefaultSitecoreLanguageResolver.GetBaseCultureName(System.Globalization.CultureInfo)">
            <summary>en-US => en, en-GB => en, de-AT => de, nb-NO => nb, nn-NO => nn.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Diagnostics.IContentTemplatesComparer">
            <summary>
            Compares templates from Sitecore service against those from the code of this app.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Diagnostics.ContentTemplatesHealthCheck">
            <summary>
            Checks that templates from Sitecore service correspond to compiled code of this app.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Diagnostics.ContentTemplatesHealthCheck.#ctor(Frontend.Vanilla.Content.Templates.DataSources.IReflectionTemplatesSource,Frontend.Vanilla.Content.Templates.DataSources.ISitecoreServiceTemplatesSource,Frontend.Vanilla.Content.Diagnostics.IContentTemplatesComparer)">
            <summary>
            Checks that templates from Sitecore service correspond to compiled code of this app.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Diagnostics.SitecoreContentHealthCheck">
            <summary>
            Checks health of Sitecore REST service. If failed then exception already contains all necessary details.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Diagnostics.SitecoreContentHealthCheck.#ctor(Frontend.Vanilla.Content.IContentRequestFactory,Frontend.Vanilla.Content.Loading.XmlSources.IContentXmlSource)">
            <summary>
            Checks health of Sitecore REST service. If failed then exception already contains all necessary details.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.IDocument">
            <summary>
            The interface that represents a document from an underlying CMS.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.IDocument.Metadata">
            <summary>Gets the document's <see cref="T:Frontend.Vanilla.Content.IDocumentMetadata" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.IDocument.Data">
            <summary>Gets the underlying document data.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Document">
            <summary>
            An abstract class that represents a document in an underlying CMS.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.Document.Comparer">
            <summary>Gets comparer used in content API for names of templates, fields etc.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Document.Data">
            <summary>Gets the underlying document data.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Document.Metadata">
            <summary>Gets the document's <see cref="T:Frontend.Vanilla.Content.IDocumentMetadata" />.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Document.#ctor(Frontend.Vanilla.Content.DocumentData)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Document.GetValue``1(System.String)">
            <summary>
            Gets value from the documents collection of values.
            </summary>
            <typeparam name="TValue">The type to convert the value to.</typeparam>
            <param name="name">The name of the value to retrieve.</param>
            <returns>The value converted to the type specified in <typeparamref name="TValue"/>.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Content.Document.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.DocumentData">
            <summary>
            Holds the values retrieved from a document source (e.g. Sitecore file, Sitecore web request, etc.).
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.DocumentData.Metadata">
            <summary>Gets the metadata.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.DocumentData.Fields">
            <summary>Gets field values (i.e. the actual data).</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.DocumentData.#ctor(Frontend.Vanilla.Content.IDocumentMetadata,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Initializes a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.DocumentId">
            <summary>
            Identifier for a Document that represents an item in the underlying CMS.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.DocumentId.Id">
            <summary>Gets the ID of the document.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.DocumentId.Path">
            <summary>Gets the relative URI of the document. Always starts with a slash and has no trailing slash.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.DocumentId.Culture">
            <summary>Gets the culture of the document.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.DocumentId.PathRelativity">
            <summary>Gets a flag indicating relativity of <see cref="P:Frontend.Vanilla.Content.DocumentId.Path" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.DocumentId.ItemName">
            <summary>Gets last part of the document path (e.g. App-v1.0/Folder/<c>ItemName</c>). Note: Item name is always lower case.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.DocumentId.Parent">
            <summary>Gets <see cref="T:Frontend.Vanilla.Content.DocumentId" /> without the last path segment. Gets <see langword="null" /> if <see cref="P:Frontend.Vanilla.Content.DocumentId.Path" /> is root.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.DocumentId.ToString">
            <summary>See <see cref="M:System.Object.ToString" />.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.DocumentId.#ctor(System.String,Frontend.Vanilla.Content.DocumentPathRelativity,System.Globalization.CultureInfo,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Frontend.Vanilla.Content.DocumentId"/> class.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.DocumentId.op_Implicit(System.String)~Frontend.Vanilla.Content.DocumentId">
            <summary>Creates a <see cref="T:Frontend.Vanilla.Content.DocumentId"/> from given relative URI.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.DocumentPathRelativity">
            <summary>
            Specifies type of base path to which the content path is relative.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.DocumentPathRelativity.ConfiguredRootNode">
            <summary>Path is relative to <see cref="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.RootNodePath" />.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.DocumentPathRelativity.AbsoluteRoot">
            <summary>Path is relative to absolute content root.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.IDocumentIdFactory">
            <summary>
            Creates <see cref="T:Frontend.Vanilla.Content.DocumentId" /> obtained from underlying CMS.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IDocumentIdFactory.Create(Frontend.Vanilla.Core.System.Text.RequiredString,System.Globalization.CultureInfo,System.String)">
            <summary>
            Creates <see cref="T:Frontend.Vanilla.Content.DocumentId" /> from id and path obtained from underlying CMS.
            Path is converted according to <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.RootNodePath" />.
            </summary>
            <param name="pathFromCms">The document path obtained from underlying CMS.</param>
            <param name="culture">The culture.</param>
            <param name="idFromCms">The document id obtained from underlying CMS.</param>
            <returns>New instance of <see cref="T:Frontend.Vanilla.Content.DocumentId" />.</returns>
        </member>
        <member name="T:Frontend.Vanilla.Content.IDocumentMetadata">
            <summary>
            The metadata attached to a specific <see cref="T:Frontend.Vanilla.Content.IDocument" />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.IDocumentMetadata.Id">
            <summary>Gets the id of the document.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.IDocumentMetadata.TemplateName">
            <summary>Gets the name of the template the document is based on.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.IDocumentMetadata.Version">
            <summary>Gets the version of the content from the underlying CMS.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.IDocumentMetadata.ChildIds">
            <summary>Gets the ids of the child documents.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.IDocumentMetadata.HasFilterCondition">
            <summary>Gets if the document has a filter condition set.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.DocumentSourceData">
            <summary>
            Holds the values retrieved from a document source (e.g. Sitecore file, Sitecore web request, etc.).
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.DocumentSourceData.#ctor(Frontend.Vanilla.Content.IDocumentMetadata,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Holds the values retrieved from a document source (e.g. Sitecore file, Sitecore web request, etc.).
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.EditorOverrides">
            <summary>
            Overrides of content loading for current request. Usually used by content editors to view content according to their needs.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.IEditorOverridesResolver">
            <summary>
            Resolves current <see cref="T:Frontend.Vanilla.Content.EditorOverrides" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.BoolConverter">
            <summary>
            Represents a converter producing <see langword="bool"/> as a result of the conversion.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.BwinNameValueCollectionConverter">
            <summary>
            Represents a base class converter producing <see cref="T:System.Collections.Specialized.NameValueCollection"/> as a result of the conversion.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.FieldConversion.Converters.BwinNameValueCollectionConverter.#ctor(Frontend.Vanilla.Content.FieldConversion.Converters.IBwinNameValueCollectionParser)">
            <summary>
            Represents a base class converter producing <see cref="T:System.Collections.Specialized.NameValueCollection"/> as a result of the conversion.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.IBwinNameValueCollectionParser">
            <summary>
            Parser of bwin name value collection.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.FieldConversion.Converters.IBwinNameValueCollectionParser.Parse(System.String)">
            <summary>
            Parses a string representing a collection of name-value pairs from bwin format.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.BwinNameValueCollectionParser">
            <summary>
            Parses a string reprsenting a collection of name-value pairs from Bwin format.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.FieldConversion.Converters.BwinNameValueCollectionParser.Parse(System.String)">
            <summary>
            Parses the provided Bwin-formatted string and extracts the name-value pairs.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.ContentImageConverter">
            <summary>
            Represents a converter producing <see cref="T:Frontend.Vanilla.Content.Model.ContentImage" /> as a result of the conversion.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.ContentVideoConverter">
            <summary>
            Represents a converter producing <see cref="T:Frontend.Vanilla.Content.Model.ContentVideo" /> as a result of the conversion.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.DateTimeConverter">
            <summary>
            Represents a converter producing <see cref="T:System.DateTime"/> as a result of the conversion.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.DocumentIdCollectionConverter">
            <summary>
            Represents a converter producing a list of <see cref="T:Frontend.Vanilla.Content.DocumentId"/> as a result of
            the conversion from a content field of type <c>Treelist</c>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.DocumentIdConverter">
            <summary>
            Represents a converter producing <see cref="T:Frontend.Vanilla.Content.DocumentId" /> as a result of the conversion.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.IntConverter">
            <summary>
            Represents a converter producing <see langword="int"/> as a result of the conversion.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.LinkTemplateUrlConverter">
            <summary>
            Special handling for parsing out a URL for <see cref="T:Frontend.Vanilla.Content.Model.ILinkTemplate" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.ListItemConverter">
            <summary>
            Represents a converter producing a collection of <see cref="T:Frontend.Vanilla.Content.Model.ListItem"/> as a result of the conversion.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.FieldConversion.Converters.ListItemConverter.#ctor(Frontend.Vanilla.Content.FieldConversion.Converters.IBwinNameValueCollectionParser)">
            <summary>
            Represents a converter producing a collection of <see cref="T:Frontend.Vanilla.Content.Model.ListItem"/> as a result of the conversion.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.QueryStringNameValueCollectionConverter">
            <summary>
            Represents a converter producing <see cref="T:System.Collections.Specialized.NameValueCollection"/> as a result of the conversion.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.Converters.RegionItemsConverter">
            <summary>
            Represents a converter producing a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.Collections.Generic.KeyValuePair`2"/> as a result of the conversion
            with TKey being a string and TValue being a <see cref="T:Frontend.Vanilla.Content.DocumentId"/>.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.FieldConversion.Converters.RegionItemsConverter.#ctor(Frontend.Vanilla.Content.FieldConversion.Converters.IBwinNameValueCollectionParser)">
            <summary>
            Represents a converter producing a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.Collections.Generic.KeyValuePair`2"/> as a result of the conversion
            with TKey being a string and TValue being a <see cref="T:Frontend.Vanilla.Content.DocumentId"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters">
            <summary>
            Default converters for <see cref="T:Frontend.Vanilla.Content.Templates.Mapping.DefaultTemplateMappingProfile" />.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.BwinCollectionParser">
            <summary>Represents the default parser for Bwin name-value collections. </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.String">
            <summary>Gets the default converter for fields of type <see cref="T:System.String" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.Bool">
            <summary>Gets the default converter for fields of type <see cref="T:System.Boolean" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.Int">
            <summary>Gets the default converter for fields of type <see cref="T:System.Int32" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.DateTime">
            <summary>Gets the default converter for fields of type <see cref="T:Frontend.Vanilla.Core.System.UtcDateTime" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.DocumentId">
            <summary>Gets the default converter for fields of type <see cref="T:Frontend.Vanilla.Content.DocumentId" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.ContentImage">
            <summary>Gets the default converter for fields of type <see cref="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.ContentImage" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.ContentVideo">
            <summary>Gets the default converter for fields of type <see cref="T:Frontend.Vanilla.Content.Model.ContentVideo" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.ContentLink">
            <summary>Gets the default converter for fields of type <see cref="T:Frontend.Vanilla.Content.Model.ContentLink" />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.BwinNameValueCollection">
            <summary>Gets the default converter for fields of type <see cref="T:System.Collections.Specialized.NameValueCollection" /> serialized using custom BWIN XML format.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.DefaultFieldConverters.DocumentIdList">
            <summary>Gets the default converter for fields of type <see cref="T:System.Collections.Generic.IReadOnlyList`1" />.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.IFieldConversionContext">
            <summary>
            Context for converting field value.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.IFieldConversionContext.FieldValue">
            <summary>Gets the field value. It's null if there is no response for this field from Sitecore to save amount of transferred data.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.IFieldConversionContext.SourcePath">
            <summary>Gets the path of the source item.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.IFieldConversionContext.Culture">
            <summary>Gets the culture.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.IFieldConversionContext.AllFields">
            <summary>Gets all field values.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.FieldConversion.IFieldConversionContext.DocumentIdFactory">
            <summary>Gets the factory for creating new instances of <seealso cref="T:Frontend.Vanilla.Content.DocumentId" />.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.FieldMapping">
            <summary>
            Converts CMS items based on a specific template to the specified type and applies all registered pre- and post-processors.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.FieldConversion.FieldMapping.#ctor(System.Type,System.Boolean,Frontend.Vanilla.Core.System.Text.TrimmedRequiredString)">
            <summary>
            Converts CMS items based on a specific template to the specified type and applies all registered pre- and post-processors.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.FieldConversion.IFieldConverter`1">
            <summary>
            Converts the raw value of Sitecore field to strongly-typed CLR object.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.FieldConversion.IFieldConverter`1.Convert(Frontend.Vanilla.Content.FieldConversion.IFieldConversionContext)">
            <summary>
            Converts the value of the given <see cref="P:Frontend.Vanilla.Content.FieldConversion.IFieldConversionContext.FieldValue" /> field conversion context.
            It should throw an exception in case of an error e.g. invalid value. Calling code records all field details.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.IContentService">
            <summary>
            Central service for loading the content in a convenient way.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetContent``1(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets strongly-typed content. It never throws, doesn't log any error. Everything is up to the consumer.
            We strongly recommend to at least log <see cref="P:Frontend.Vanilla.Content.InvalidContent`1.Errors" /> if the content is <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetContentAsync``1(Frontend.Vanilla.Content.DocumentId,System.Threading.CancellationToken,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets strongly-typed content. It never throws, doesn't log any error. Everything is up to the consumer.
            We strongly recommend to at least log <see cref="P:Frontend.Vanilla.Content.InvalidContent`1.Errors" /> if the content is <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.Get``1(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets the document of successfully loaded content item. It never throws.
            It logs <see cref="P:Frontend.Vanilla.Content.InvalidContent`1.Errors" /> if the content is <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" />.
            It just returns null if the content is <see cref="T:Frontend.Vanilla.Content.NotFoundContent`1" /> or <see cref="T:Frontend.Vanilla.Content.FilteredContent`1" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetAsync``1(Frontend.Vanilla.Content.DocumentId,System.Threading.CancellationToken,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets the document of successfully loaded content item. It never throws.
            It logs <see cref="P:Frontend.Vanilla.Content.InvalidContent`1.Errors" /> if the content is <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" />.
            It just returns null if the content is <see cref="T:Frontend.Vanilla.Content.NotFoundContent`1" /> or <see cref="T:Frontend.Vanilla.Content.FilteredContent`1" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetRequired``1(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets the document of successfully loaded content item. It throws an exception if the content is
            <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" />, <see cref="T:Frontend.Vanilla.Content.NotFoundContent`1" /> or <see cref="T:Frontend.Vanilla.Content.FilteredContent`1" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetRequiredAsync``1(Frontend.Vanilla.Content.DocumentId,System.Threading.CancellationToken,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets the document of successfully loaded content item. It throws an exception if the content is
            <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" />, <see cref="T:Frontend.Vanilla.Content.NotFoundContent`1" /> or <see cref="T:Frontend.Vanilla.Content.FilteredContent`1" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.Get``1(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.DocumentId},Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets the documents of successfully loaded content items of specified IDs. No nulls are returned.
            Only documents of requested type are returned, others are treated as <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" />.
            If a content is <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" /> or <see cref="T:Frontend.Vanilla.Content.NotFoundContent`1" /> then an error is logged and it's skipped.
            <see cref="T:Frontend.Vanilla.Content.FilteredContent`1" /> is just skipped.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetAsync``1(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.DocumentId},System.Threading.CancellationToken,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets the documents of successfully loaded content items of specified IDs.
            No nulls are returned. This method never throws, errors are written to the log.
            Only documents of requested type are returned, others are treated as <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" />.
            If a content is <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" /> or <see cref="T:Frontend.Vanilla.Content.NotFoundContent`1" /> then an error is logged and it's skipped.
            <see cref="T:Frontend.Vanilla.Content.FilteredContent`1" /> is just skipped.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetChildren``1(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets children of specified parent content item using <see cref="M:Frontend.Vanilla.Content.IContentService.Get``1(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.DocumentId},Frontend.Vanilla.Content.ContentLoadOptions)" /> method.
            No nulls are returned. This method never throws, errors are written to the log.
            <see cref="T:Frontend.Vanilla.Content.NotFoundContent`1" /> parent is considered to be an error because we can't load any children.
            <see cref="T:Frontend.Vanilla.Content.FilteredContent`1" /> parent means that all children are automatically filtered.
            <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" /> parent is treated same as <see cref="T:Frontend.Vanilla.Content.SuccessContent`1" /> because children were requested, not parent with its errors.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetChildrenAsync``1(Frontend.Vanilla.Content.DocumentId,System.Threading.CancellationToken,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets children of specified parent content item using <see cref="M:Frontend.Vanilla.Content.IContentService.Get``1(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.DocumentId},Frontend.Vanilla.Content.ContentLoadOptions)" /> method.
            No nulls are returned. This method never throws, errors are written to the log.
            <see cref="T:Frontend.Vanilla.Content.NotFoundContent`1" /> parent is considered to be an error because we can't load any children.
            <see cref="T:Frontend.Vanilla.Content.FilteredContent`1" /> parent means that all children are automatically filtered.
            <see cref="T:Frontend.Vanilla.Content.InvalidContent`1" /> parent is treated same as <see cref="T:Frontend.Vanilla.Content.SuccessContent`1" /> because children were requested, not parent with its errors.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetChildren``1(Frontend.Vanilla.Content.IDocument,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets the documents specified by <see cref="P:Frontend.Vanilla.Content.IDocumentMetadata.ChildIds" /> of given <paramref name="parent" />
            using <see cref="M:Frontend.Vanilla.Content.IContentService.Get``1(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.DocumentId},Frontend.Vanilla.Content.ContentLoadOptions)" /> method.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetChildrenAsync``1(Frontend.Vanilla.Content.IDocument,System.Threading.CancellationToken,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>
            Gets the documents specified by <see cref="P:Frontend.Vanilla.Content.IDocumentMetadata.ChildIds" /> of given <paramref name="parent" />
            using <see cref="M:Frontend.Vanilla.Content.IContentService.Get``1(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.DocumentId},Frontend.Vanilla.Content.ContentLoadOptions)" /> method.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetRequiredString``1(Frontend.Vanilla.Content.DocumentId,System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>Gets the value of a content string field. It can't be null nor white-space. In case of an error it throws an exception.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.IContentService.GetRequiredStringAsync``1(Frontend.Vanilla.Content.DocumentId,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Threading.CancellationToken)">
            <summary>Gets the value of a content string field. It can't be null nor white-space. In case of an error it throws an exception.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Caching.CachedContent">
            <summary>
            Cached user-agnostic content to be evaluated just-in-time.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.Caching.CachedContent.#ctor(Frontend.Vanilla.Content.Content{Frontend.Vanilla.Content.IDocument},System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.Loading.IJustInTimeContentProcessor},System.Collections.Generic.IReadOnlyList{Frontend.Vanilla.Content.Loading.Caching.CachedContent})">
            <summary>
            Cached user-agnostic content to be evaluated just-in-time.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Caching.ICachedContentLoader">
            <summary>
            Returns processors to be executed just-in-time.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Caching.CachedContentLoader">
            <summary>
            Adds caching of content items to <see cref="T:Frontend.Vanilla.Content.Loading.IContentLoader" />.
            Items are cached globally so all user-specific logic (e.g. filtering) should be applied afterwards.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.Caching.CachedContentLoader.#ctor(Frontend.Vanilla.Content.Loading.Caching.IPreCachingContentLoader,Microsoft.Extensions.Caching.Memory.IMemoryCache,Frontend.Vanilla.Content.IContentRequestFactory,Frontend.Vanilla.Core.Time.Background.IBackgroundWorker,Frontend.Vanilla.Core.Ioc.ICurrentContextAccessor,Frontend.Vanilla.Core.Time.IClock)">
            <summary>
            Adds caching of content items to <see cref="T:Frontend.Vanilla.Content.Loading.IContentLoader" />.
            Items are cached globally so all user-specific logic (e.g. filtering) should be applied afterwards.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Caching.IPreCachingContentLoader">
            <summary>
            Processes success content using all <see cref="T:Frontend.Vanilla.Content.Loading.IPreCachingContentProcessor" />-s before is is cached.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.ContentBuildingExtensions">
            <summary>
            Extensions used during content loading and building process.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.ContentBuildingExtensions.ToInvalid(Frontend.Vanilla.Content.SuccessContent{Frontend.Vanilla.Content.IDocument},System.String)">
            <summary>Creates a new invalid content with specified error and based on metadata from specified content.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.ContentBuildingExtensions.ToNotFound(Frontend.Vanilla.Content.SuccessContent{Frontend.Vanilla.Content.IDocument})">
            <summary>Creates a new invalid content with specified error and based on metadata from specified content.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.ContentBuildingExtensions.ToFiltered(Frontend.Vanilla.Content.SuccessContent{Frontend.Vanilla.Content.IDocument})">
            <summary>Creates a new filtered content based on metadata from specified content.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.ContentBuildingExtensions.WithFieldsOverwritten(Frontend.Vanilla.Content.SuccessContent{Frontend.Vanilla.Content.IDocument},System.ValueTuple{System.String,System.Object}[])">
            <summary>Creates a new success content with given fields overwritten.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.ContentBuildingExtensions.WithFieldsOverwritten(Frontend.Vanilla.Content.SuccessContent{Frontend.Vanilla.Content.IDocument},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Object}})">
            <summary>Creates a new success content with given fields overwritten.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Deserialization.IDeserializationContentLoader">
            <summary>
            Deserializes (loading, parsing, mapping) content items according to particular request.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Deserialization.IDocumentDeserializer">
            <summary>
            Deserializes strongly-typed document from raw string values according to mappings defined in <see cref="T:Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingProfile" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.DslExtensions.EvaluateAllAsync``1(System.Collections.Generic.IEnumerable{Frontend.Vanilla.DomainSpecificLanguage.IDslExpression{``0}},Frontend.Vanilla.Core.System.ExecutionMode,Frontend.Vanilla.Content.ContentLoadOptions)">
            <summary>Evaluates given DSL expressions in optimal way - in parallel.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.FilterCondition.FilterConditionJustInTimeProcessor">
            <summary>
            Filters the content based on compiled DSL expression in <see cref="P:Frontend.Vanilla.Content.Model.IFilterTemplate.Condition" /> field.
            As far as DSL expression is user specific, result can't be cached.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.FilterCondition.FilterConditionJustInTimeProcessor.#ctor(Frontend.Vanilla.DomainSpecificLanguage.IDslExpression{System.Boolean})">
            <summary>
            Filters the content based on compiled DSL expression in <see cref="P:Frontend.Vanilla.Content.Model.IFilterTemplate.Condition" /> field.
            As far as DSL expression is user specific, result can't be cached.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.FilterCondition.FilterConditionPreCachingProcessor">
            <summary>
            Compiles DSL filter expression in <see cref="P:Frontend.Vanilla.Content.Model.IFilterTemplate.Condition" /> field.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.FilterCondition.FilterConditionPreCachingProcessor.#ctor(Frontend.Vanilla.DomainSpecificLanguage.IDslCompiler,Microsoft.Extensions.Logging.ILogger{Frontend.Vanilla.Content.Loading.FilterCondition.FilterConditionPreCachingProcessor})">
            <summary>
            Compiles DSL filter expression in <see cref="P:Frontend.Vanilla.Content.Model.IFilterTemplate.Condition" /> field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.IContentLoader">
            <summary>
            Central low-level component for loading content items from Sitecore.
            Usually you should use more convenient <see cref="T:Frontend.Vanilla.Content.IContentService" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.IContentLoader.GetContentAsync(Frontend.Vanilla.Core.System.ExecutionMode,Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions,System.Action{System.Object})">
            <summary>Loads the content from Sitecore.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.IJustInTimeContentProcessor">
            <summary>
            Processes a content just-in-time when it's being loaded for particular context (user, HTTP context etc).
            It's added to particular content by <see cref="T:Frontend.Vanilla.Content.Loading.IPreCachingContentProcessor" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.IJustInTimeContentProcessor.ProcessAsync(Frontend.Vanilla.Core.System.ExecutionMode,Frontend.Vanilla.Content.SuccessContent{Frontend.Vanilla.Content.IDocument},Frontend.Vanilla.Content.ContentLoadOptions,Frontend.Vanilla.Content.Loading.IContentLoader,System.Action{System.Object})">
            <summary>Processes the content - see interface description.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.InlinedFilters.InlinedFiltersJustInTimeProcessor">
            <summary>
            Evaluates filters inlined in content fields and manipulates their HTML accordingly - removing it or setting client expression for later evaluation in browser.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.InlinedFilters.InlinedFiltersJustInTimeProcessor.#ctor(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Core.System.Text.TrimmedRequiredString},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Frontend.Vanilla.Core.System.Text.RequiredString,Frontend.Vanilla.DomainSpecificLanguage.IDslExpression{System.Boolean}}})">
            <summary>
            Evaluates filters inlined in content fields and manipulates their HTML accordingly - removing it or setting client expression for later evaluation in browser.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.InlinedFilters.InlinedFiltersPreCachingProcessor">
            <summary>
            Discovers and compiles all filters inlined in HTML using 'data-content-filter' attribute in all fields.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.InlinedFilters.InlinedFiltersPreCachingProcessor.#ctor(Frontend.Vanilla.DomainSpecificLanguage.IDslCompiler,Microsoft.Extensions.Logging.ILogger{Frontend.Vanilla.Content.Loading.InlinedFilters.InlinedFiltersPreCachingProcessor})">
            <summary>
            Discovers and compiles all filters inlined in HTML using 'data-content-filter' attribute in all fields.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.IPreCachingContentProcessor">
            <summary>
            Processes a content before it's cached.
            Therefore the processing must use only passed parameters. It can't be related to context (user, HTTP context etc).
            If some further processing with actual context after cache retrieval is needed then <see cref="T:Frontend.Vanilla.Content.Loading.IJustInTimeContentProcessor" /> should be added.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.IPreCachingContentProcessor.ProcessAsync(Frontend.Vanilla.Core.System.ExecutionMode,Frontend.Vanilla.Content.SuccessContent{Frontend.Vanilla.Content.IDocument},System.Collections.Generic.ICollection{Frontend.Vanilla.Content.Loading.IJustInTimeContentProcessor},System.Action{System.Object})">
            <summary>Processes the content - see interface description.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.IPrefetchedContentLoader">
            <summary>
            Central low-level component for loading content items from Sitecore.
            Usually you should use more convenient <see cref="T:Frontend.Vanilla.Content.IContentService" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.IPrefetchedContentLoader.GetContentAsync(Frontend.Vanilla.Core.System.ExecutionMode,Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.ContentLoadOptions,System.Action{System.Object})">
            <summary>Loads the content from Sitecore.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.JustInTime.ExceptionHandlingDecorator">
            <summary>
            Handles runtime exceptions during content loading e.g. Sitecore outage.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.JustInTime.ExceptionHandlingDecorator.#ctor(Frontend.Vanilla.Content.Loading.IContentLoader)">
            <summary>
            Handles runtime exceptions during content loading e.g. Sitecore outage.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Placeholders.IPlaceholderReplacer">
            <summary>
            Replaces all (client and server-side) placeholders in given string.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Placeholders.PlaceholdersJustInTimeProcessor">
            <summary>
            Replaces placeholders in the content document according to current context when loading them.
            As far as DSL placeholders are user specific, result can't be cached.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.Placeholders.PlaceholdersJustInTimeProcessor.#ctor(Frontend.Vanilla.Content.Loading.Placeholders.IPlaceholderReplacer,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Frontend.Vanilla.Core.System.Text.TrimmedRequiredString,Frontend.Vanilla.DomainSpecificLanguage.IDslExpression{System.Object}}})">
            <summary>
            Replaces placeholders in the content document according to current context when loading them.
            As far as DSL placeholders are user specific, result can't be cached.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Placeholders.PlaceholdersPreCachingProcessor">
            <summary>
            Compiles placeholders found in fields of of the content document.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.Placeholders.PlaceholdersPreCachingProcessor.#ctor(Frontend.Vanilla.DomainSpecificLanguage.IPlaceholderCompiler,System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer},Frontend.Vanilla.Content.Loading.Placeholders.IPlaceholderReplacer,Microsoft.Extensions.Logging.ILogger{Frontend.Vanilla.Content.Loading.Placeholders.PlaceholdersPreCachingProcessor})">
            <summary>
            Compiles placeholders found in fields of of the content document.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.ProxyFolder.ProxyFolderJustInTimeContentProcessor">
            <summary>
            If content item is proxy folder, redirects result to first child according to its DSL rules.
            As far as DSL expressions are user specific, result can't be cached.
            See <see cref="T:Frontend.Vanilla.Content.Loading.ProxyFolder.ProxyFolderPreCachingContentProcessor" /> which must be executed before.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.ProxyFolder.ProxyFolderPreCachingContentProcessor">
            <summary>
            Performs basic sanity related to proxy folders.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.ProxyFolder.IVanillaProxyFolder">
            <summary>
            Represents custom vanilla proxy folder which holds additional data.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Loading.ProxyFolder.IVanillaProxyFolder.Target">
            <summary>
            Holds target data when used with client side DSL evaluation.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.ProxyFolder.ProxyFolderChildItem">
            <summary>
            Represents a proxy folder child item.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Loading.ProxyFolder.ProxyFolderChildItem.Condition">
            <summary>Gets the condition.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Loading.ProxyFolder.ProxyFolderChildItem.Document">
            <summary>Gets the child content which should be returned if <see cref="P:Frontend.Vanilla.Content.Loading.ProxyFolder.ProxyFolderChildItem.Condition" /> is matched.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.ProxyFolder.ProxyFolderChildItem.#ctor(System.String,Frontend.Vanilla.Content.IDocument)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Proxy.ProxyJustInTimeContentProcessor">
            <summary>
            If content item is proxy, redirects result to target according to its DSL rules.
            As far as DSL expressions are user specific, result can't be cached.
            See <see cref="T:Frontend.Vanilla.Content.Loading.Proxy.ProxyPreCachingContentProcessor" /> which must be executed before.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.Proxy.ProxyJustInTimeContentProcessor.#ctor(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.Loading.Proxy.CompiledProxyRule})">
            <summary>
            If content item is proxy, redirects result to target according to its DSL rules.
            As far as DSL expressions are user specific, result can't be cached.
            See <see cref="T:Frontend.Vanilla.Content.Loading.Proxy.ProxyPreCachingContentProcessor" /> which must be executed before.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.Proxy.ProxyPreCachingContentProcessor">
            <summary>
            Compiles DSL expressions in proxy item rules.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.Proxy.ProxyPreCachingContentProcessor.#ctor(Frontend.Vanilla.DomainSpecificLanguage.IDslCompiler,Microsoft.Extensions.Logging.ILogger{Frontend.Vanilla.Content.Loading.Proxy.ProxyPreCachingContentProcessor})">
            <summary>
            Compiles DSL expressions in proxy item rules.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.RequireTranslation.RequireTranslationJustInTimeProcessor">
            <summary>
            Applies check specified by <see cref="P:Frontend.Vanilla.Content.ContentLoadOptions.RequireTranslation" />.
            As far as the flag is specified in options, result can't be cached.
            See <see cref="T:Frontend.Vanilla.Content.Loading.RequireTranslation.RequireTranslationPreCachingProcessor" /> which must be executed before.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.RequireTranslation.RequireTranslationPreCachingProcessor">
            <summary>
            Determines whether it makes sense to check using <see cref="T:Frontend.Vanilla.Content.Loading.RequireTranslation.RequireTranslationJustInTimeProcessor" /> that particular content is translated if requested by developer.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.WithPrefetched`1">
            <summary>
            Explicitly stores main content from Sitecore with prefetched ones.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.WithPrefetched`1.#ctor(`0,System.Collections.Generic.IEnumerable{`0},System.TimeSpan)">
            <summary>
            Explicitly stores main content from Sitecore with prefetched ones.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.XmlSources.DistributedCacheContentXmlDecorator">
            <summary>
            Decorates <see cref="T:Frontend.Vanilla.Content.Loading.XmlSources.IContentXmlSource" />. Stores content XML in <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" />.
            Therefore, it offloads traffic to Sitecore service and in case of its outage it acts as a fallback even if cached content is stale.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.XmlSources.DistributedCacheContentXmlDecorator.#ctor(Frontend.Vanilla.Content.Loading.XmlSources.IContentXmlSource,Microsoft.Extensions.Caching.Distributed.IDistributedCache,Frontend.Vanilla.Content.Model.IContentConfiguration,Frontend.Vanilla.Core.Time.IClock,Microsoft.Extensions.Logging.ILogger{Frontend.Vanilla.Content.Loading.XmlSources.DistributedCacheContentXmlDecorator})">
            <summary>
            Decorates <see cref="T:Frontend.Vanilla.Content.Loading.XmlSources.IContentXmlSource" />. Stores content XML in <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" />.
            Therefore, it offloads traffic to Sitecore service and in case of its outage it acts as a fallback even if cached content is stale.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.XmlSources.IContentXmlSource">
            <summary>
            Retrieves raw content XML.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Loading.XmlSources.SitecoreServiceContentXmlSource">
            <summary>
            Retrieves raw content XML directly from Sitecore service.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Loading.XmlSources.SitecoreServiceContentXmlSource.#ctor(Frontend.Vanilla.Core.Rest.IRestClient,Frontend.Vanilla.Content.Model.IContentConfiguration,Frontend.Vanilla.Core.Time.IClock)">
            <summary>
            Retrieves raw content XML directly from Sitecore service.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Menus.IMenuFactory">
            <summary>
            Flat menu structure factory for generating data for menus that are easily convertible to JSON.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Menus.IMenuFactory.GetSectionsAsync(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.DslEvaluation,System.Threading.CancellationToken)">
             <summary>
             Gets sections for a menu.
            
             Expected content structure:
             - path
               - Section1
                 - Item1
                 - Item2
               - Section2
                 - Item3
             </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Menus.IMenuFactory.GetSectionAsync(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.DslEvaluation,System.Threading.CancellationToken)">
            <summary>
            Gets a single section of a menu.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Menus.IMenuFactory.GetOptionalSectionAsync(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.DslEvaluation,System.Threading.CancellationToken)">
            <summary>
            Gets a single section of a menu.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Menus.IMenuFactory.GetItemAsync(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.DslEvaluation,System.Threading.CancellationToken)">
            <summary>
            Gets tree of menu items.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Menus.IMenuFactory.GetOptionalItemAsync(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.DslEvaluation,System.Threading.CancellationToken)">
            <summary>
            Gets tree of optional menu items. Won't log error in case not found.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Menus.MenuFactory.GetOptionalItemAsync(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Content.DslEvaluation,System.Threading.CancellationToken)">
            <summary>
            This method won't log error to Kibana in case item does not exist.
            </summary>
            <param name="path"></param>
            <param name="dslEvaluation"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Frontend.Vanilla.Content.Menus.MenuItem">
            <summary>
            Represents a single menu item.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Text">
            <summary>
            Text of the menu item.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Url">
            <summary>
            Url that the menu item will link to.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Class">
            <summary>
            CSS class to add to the menu item.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Target">
            <summary>
            The target for the link.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Rel">
            <summary>
            The rel for the link.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.ClickAction">
            <summary>
            Name of the menu action to invoke when the menu item is clicked.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Authstate">
            <summary>
            Authstate to use for *vnAuthstate.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Image">
            <summary>
            Image to be used for image link (optional, only used in some templates).
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Name">
            <summary>
            Name of the menu item. Can be used to access the section programatically.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Type">
            <summary>
            Type of the menu item. Determines which template will be used for rendering.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Layout">
            <summary>
            Type of the menu item. Determines which template will be used for rendering when this item is the root item.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.MenuRoute">
            <summary>
            Multilayer menu route.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.MenuRouteParent">
            <summary>
            Multilayer menu route to parent item.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Condition">
            <summary>
            DSL condition.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.TrackEvent">
            <summary>
            Track event data. Used as input to trackingService.triggerEvent(name, data).
            </summary>
            <remarks>Extracted from html attribute keys starting with "tracking.*".</remarks>
            <example>
            <code>
            tracking.eventName: name
            tracking.data.page.referringAction: action
            ==>
            { "eventName": "name", "data": { "page.referringAction": "action" } }
            </code>
            </example>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.WebAnalytics">
            <summary>
            Track event data. Used as input to trackingService.triggerEvent(name, data).
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Parameters">
            <summary>
            Additional parameters.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Resources">
            <summary>
            Additional resources.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Children">
            <summary>
            Child items.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.SubNavigationContainer">
            <summary>
            SubNavigationContainer.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.ToolTip">
            <summary>
            ToolTip.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.SvgImage">
            <summary>
            Image Source.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.ViewBox">
            <summary>
            View box.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.Size">
            <summary>
            Svg Image size.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.IconType">
            <summary>
            Svg Icon type.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.DefaultAnimation">
            <summary>
            Animated.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.CustomAnimation">
            <summary>
            Custom animation.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.CssClass">
            <summary>
            Css Class.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuItem.IconName">
            <summary>
            Icon Name.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Menus.MenuSection">
            <summary>
            Represents a section of a menu.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuSection.Name">
            <summary>
            Name of the section. Can be used to access the section programatically.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuSection.Title">
            <summary>
            Title of the section.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuSection.Class">
            <summary>
            CSS class to add to the section.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuSection.Authstate">
            <summary>
            Authstate to use for *vnAuthstate.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuSection.Condition">
            <summary>
            DSL condition.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Menus.MenuSection.Items">
            <summary>
            Child menu items.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IContentConfiguration">
            <summary>
            Content system configuration.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.RequestTimeout">
            <summary>
            Gets the timespan that indicates the network timeout for the service HTTP requests.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.RootNodePath">
            <summary>
            Gets the path of the root node (usually label-specific) used as a base for relative paths specified in the code.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.StrippedPaths">
            <summary>
            Gets the stripped paths.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.TemplatePaths">
            <summary>
            Gets the paths within Sitecore template repository to load template metadata corresponding to current generated template classes.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.Host">
            <summary>
            Gets the host URL of Sitecore REST service.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.PreviewHost">
            <summary>
            Gets the CMS preview host.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.EditorUrlTemplate">
            <summary>
            Gets the template for EditorUrl that points back to the Sitecore Content Editor.
            </summary>
            <value>A valid editor url template.</value>
            <remarks>
            Makes only sense if connected to the CMS via source "Service" and if the application runs in debug mode.
            </remarks>
            <example>
            The template must contain format placeholders as follows
            e.g. http://CMSServerHost/sitecore/shell/Applications/Content%20Editor.aspx?fo={0}&#38;la={1}&#38;vs={2}.
            <list type="table">
            <listheader>
            <term>Placeholder</term>
            <description>Replaced By</description>
            </listheader>
            <item>
            <term>{0}</term>
            <description>CMS item id</description>
            </item>
            <item>
            <term>{1}</term>
            <description>Current culture two letter iso code</description>
            </item>
            <item>
            <term>{2}</term>
            <description>Version of the content item</description>
            </item>
            </list>
            </example>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.Version">
            <summary>
            Gets the version of the Content Service to use. It's appended to the Host URL when making a request.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.ForcePreview">
            <summary>
            Indicates whether content preview should be always enabled hence the content will be fetched from Sitecore even if it's not in final workflow state.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.Environment">
            <summary>
            The value specifying which environment will be targeted when fetching content from Sitecore.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentConfiguration.CacheTimes">
            <summary>
            Gets content cache times for different retrieval scenarios.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IContentCacheTimes">
            <summary>
            Configures content cache times for different retrieval scenarios.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentCacheTimes.Default">
            <summary>
            Gets default cache time.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentCacheTimes.NotFoundContent">
            <summary>
            Gets the cache time for not-found content.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IContentCacheTimes.SitecoreOutage">
            <summary>
            Gets the time for caching stale content which is served in case of outage of Sitecore service.
            After it expires then access to the service is retried.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder">
            <summary>
            The builder of <see cref="T:Frontend.Vanilla.Content.Model.IContentConfiguration" />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.RequestTimeout">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.RequestTimeout" />.
            Default: 100 seconds.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.RootNodePath">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.RootNodePath" />.
            Default: /.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.StrippedPaths">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.StrippedPaths" />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.TemplatePaths">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.TemplatePaths" />.
            Default: ["/Vanilla"].
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.Host">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.Host" />.
            Default: http://rest.cms.prod.env.works.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.KnownEnvironmentHostPrefixes">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.ContentConfiguration.KnownEnvironmentHostPrefixes" />.
            Default: ["qa", "preview"].
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.EditorUrlTemplate">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.EditorUrlTemplate" />.
            Default: http://cms.bwin.prod/sitecore/shell/Applications/Content Editor.aspx?fo={0}&amp;la={1}&amp;vs={2}.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.Version">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.Version" />.
            Default: V5.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.ForcePreview">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.ForcePreview" />.
            Default: false.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.Environment">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.Environment" />.
            Default: prod.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.CacheTimes">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentConfiguration.CacheTimes" />.
            Default: a new instance.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.ItemPathDisplayModeEnabled">
            <summary>
            Indicates if item's path value will be used instead original field value. Actual template and field mappings are specified in ItemPathDisplayModeMapping.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentConfigurationBuilder.ItemPathDisplayModeMapping">
            <summary>
            Indicates configured templates and it's fields which values will be replaced with item's path when ItemPathDisplayModeEnabled is set.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ContentCacheTimes">
            <summary>
            See <see cref="T:Frontend.Vanilla.Content.Model.IContentCacheTimes" />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentCacheTimes.Default">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentCacheTimes.Default" />.
            Default: 15 minutes.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentCacheTimes.NotFoundContent">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentCacheTimes.NotFoundContent" />.
            Default: 2 minutes.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentCacheTimes.SitecoreOutage">
            <summary>
            See <see cref="P:Frontend.Vanilla.Content.Model.IContentCacheTimes.SitecoreOutage" />.
            Default: 2 minutes.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ContentImage">
            <summary>Represents a generic content image.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentImage.Src">
            <summary>Gets image source URL.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentImage.Alt">
            <summary>Gets image alternate text. Can be null.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentImage.Width">
            <summary>Gets image width.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentImage.Height">
            <summary>Gets image height.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Model.ContentImage.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ContentLink">
            <summary>Represents a generic content-defined link.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentLink.Url">
            <summary>Gets the link URL.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentLink.Text">
            <summary>Gets the link text.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentLink.Attributes">
            <summary>Gets the link attributes.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Model.ContentLink.#ctor(System.Uri,System.String,Frontend.Vanilla.Content.Model.ContentParameters)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ContentParameters">
            <summary>
            A dictionary of sitecore messages/parameters list.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Model.ContentParameters.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Content.Model.ContentParameters.Empty">
            <summary>Represents empty <see cref="T:Frontend.Vanilla.Content.Model.ContentParameters"/>.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ContentParametersExtensions">
            <summary>Extensions for <see cref="T:Frontend.Vanilla.Content.Model.ContentParameters"/>.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Model.ContentParametersExtensions.AsContentParameters(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Converts any <see cref="T:System.Collections.Generic.IDictionary`2"/> or <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> of string, string to <see cref="T:Frontend.Vanilla.Content.Model.ContentParameters"/>.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IBaseTemplate">
            <summary>
            Interface that maps to the <c>Base Template</c> content template.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ICampaignAssets">
            <summary>
            Interface that maps to the <c>CampaignAssets</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignAssets.CommonCTA">
            <summary> 
            Property that maps to the <c>CommonCTA</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignAssets.CommonCTAPreview">
            <summary> 
            Property that maps to the <c>CommonCTAPreview</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignAssets.CommonDescription">
            <summary> 
            Property that maps to the <c>CommonDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignAssets.CommonDescriptionPreview">
            <summary> 
            Property that maps to the <c>CommonDescriptionPreview</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignAssets.CommonImageLandscape">
            <summary> 
            Property that maps to the <c>CommonImageLandscape</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignAssets.CommonImageSquare">
            <summary> 
            Property that maps to the <c>CommonImageSquare</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignAssets.CommonTermsAndConditions">
            <summary> 
            Property that maps to the <c>CommonTermsAndConditions</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignAssets.CommonTitle">
            <summary> 
            Property that maps to the <c>CommonTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignAssets.CommonTitlePreview">
            <summary> 
            Property that maps to the <c>CommonTitlePreview</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignAssets.MarketTypes">
            <summary> 
            Property that maps to the <c>MarketTypes</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ICampaignPromoEmail">
            <summary>
            Interface that maps to the <c>CampaignPromoEmail</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignPromoEmail.CtaPosition1">
            <summary> 
            Property that maps to the <c>ctaPosition1</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignPromoEmail.EmailCTA">
            <summary> 
            Property that maps to the <c>EmailCTA</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignPromoEmail.EmailImage">
            <summary> 
            Property that maps to the <c>EmailImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignPromoEmail.EmailSubject">
            <summary> 
            Property that maps to the <c>EmailSubject</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignPromoEmail.EmailText">
            <summary> 
            Property that maps to the <c>EmailText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignPromoEmail.EmailTitle">
            <summary> 
            Property that maps to the <c>EmailTitle</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ICampaignSMS">
            <summary>
            Interface that maps to the <c>CampaignSMS</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICampaignSMS.SMSText">
            <summary> 
            Property that maps to the <c>SMSText</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ICommonDetails">
            <summary>
            Interface that maps to the <c>CommonDetails</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICommonDetails.Description">
            <summary> 
            Property that maps to the <c>Description</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ICommonDetails.Title">
            <summary> 
            Property that maps to the <c>Title</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IEligibiltyCriteria">
            <summary>
            Interface that maps to the <c>EligibiltyCriteria</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IEligibiltyCriteria.EligibilityCriteriaInfo">
            <summary> 
            Property that maps to the <c>EligibilityCriteriaInfo</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IFilterTemplate">
            <summary>
            Interface that maps to the <c>Filter Template</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IFilterTemplate.Condition">
            <summary> 
            Property that maps to the <c>Condition</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IFolder">
            <summary>
            Interface that maps to the <c>Folder</c> content template.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IFormElementTemplate">
            <summary>
            Interface that maps to the <c>Form Element Template</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IFormElementTemplate.HtmlAttributes">
            <summary> 
            Property that maps to the <c>HtmlAttributes</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IFormElementTemplate.Label">
            <summary> 
            Property that maps to the <c>Label</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IFormElementTemplate.ToolTip">
            <summary> 
            Property that maps to the <c>ToolTip</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IFormElementTemplate.Validation">
            <summary> 
            Property that maps to the <c>Validation</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IFormElementTemplate.Values">
            <summary> 
            Property that maps to the <c>Values</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IFormElementTemplate.Watermark">
            <summary> 
            Property that maps to the <c>Watermark</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IGenericListItem">
            <summary>
            Interface that maps to the <c>GenericListItem</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IGenericListItem.SharedList">
            <summary> 
            Property that maps to the <c>SharedList</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IGenericListItem.VersionedList">
            <summary> 
            Property that maps to the <c>VersionedList</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IInboxOffer">
            <summary>
            Interface that maps to the <c>InboxOffer</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.DetailCallToAction">
            <summary> 
            Property that maps to the <c>DetailCallToAction</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.DetailDescription">
            <summary> 
            Property that maps to the <c>DetailDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.DetailImage">
            <summary> 
            Property that maps to the <c>DetailImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.DetailTitle">
            <summary> 
            Property that maps to the <c>DetailTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.ExpandTermsAndConditionsByDefault">
            <summary> 
            Property that maps to the <c>ExpandTermsAndConditionsByDefault</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.HeaderTermsAndConditionsInbox">
            <summary> 
            Property that maps to the <c>HeaderTermsAndConditionsInbox</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.ImageLink">
            <summary> 
            Property that maps to the <c>ImageLink</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.InboxImageIntroductoryText">
            <summary> 
            Property that maps to the <c>InboxImageIntroductoryText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.InboxImageSubtitleText">
            <summary> 
            Property that maps to the <c>InboxImageSubtitleText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.InboxImageTextAlignment">
            <summary> 
            Property that maps to the <c>InboxImageTextAlignment</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.InboxImageTitleFontSize">
            <summary> 
            Property that maps to the <c>InboxImageTitleFontSize</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.InboxImageTitleText">
            <summary> 
            Property that maps to the <c>InboxImageTitleText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.InboxLayout">
            <summary> 
            Property that maps to the <c>InboxLayout</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.ManualTermsAndConditions">
            <summary> 
            Property that maps to the <c>ManualTermsAndConditions</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.ShortImage">
            <summary> 
            Property that maps to the <c>ShortImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.ShowManualTermsAndConditions">
            <summary> 
            Property that maps to the <c>ShowManualTermsAndConditions</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.SnippetCallToAction">
            <summary> 
            Property that maps to the <c>SnippetCallToAction</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.SnippetDescription">
            <summary> 
            Property that maps to the <c>SnippetDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IInboxOffer.SnippetTitle">
            <summary> 
            Property that maps to the <c>SnippetTitle</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IJson">
            <summary>
            Interface that maps to the <c>Json</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IJson.Json">
            <summary> 
            Property that maps to the <c>Json</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ILinkTemplate">
            <summary>
            Interface that maps to the <c>LinkTemplate</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ILinkTemplate.FrameTarget">
            <summary> 
            Property that maps to the <c>FrameTarget</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ILinkTemplate.HtmlAttributes">
            <summary> 
            Property that maps to the <c>HtmlAttributes</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ILinkTemplate.Link">
            <summary> 
            Property that maps to the <c>Link</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ILinkTemplate.LinkText">
            <summary> 
            Property that maps to the <c>LinkText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ILinkTemplate.Name">
            <summary> 
            Property that maps to the <c>Name</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ILinkTemplate.NoFollow">
            <summary> 
            Property that maps to the <c>NoFollow</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ILinkTemplate.ToolTip">
            <summary> 
            Property that maps to the <c>ToolTip</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ILinkTemplate.Url">
            <summary> 
            Property that maps to the <c>Url</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IMenuItemTemplate">
            <summary>
            Interface that maps to the <c>Menu Item Template</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItemTemplate.HtmlAttributes">
            <summary> 
            Property that maps to the <c>HtmlAttributes</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItemTemplate.Image">
            <summary> 
            Property that maps to the <c>Image</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItemTemplate.LinkReference">
            <summary> 
            Property that maps to the <c>LinkReference</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItemTemplate.LinkText">
            <summary> 
            Property that maps to the <c>LinkText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItemTemplate.SubNavigationContainer">
            <summary> 
            Property that maps to the <c>SubNavigationContainer</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItemTemplate.ToolTip">
            <summary> 
            Property that maps to the <c>ToolTip</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItemTemplate.WebAnalytics">
            <summary> 
            Property that maps to the <c>WebAnalytics</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IMenuItem">
            <summary>
            Interface that maps to the <c>MenuItem</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItem.Image">
            <summary> 
            Property that maps to the <c>Image</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItem.Link">
            <summary> 
            Property that maps to the <c>Link</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItem.Parameters">
            <summary> 
            Property that maps to the <c>Parameters</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItem.Resources">
            <summary> 
            Property that maps to the <c>Resources</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItem.Text">
            <summary> 
            Property that maps to the <c>Text</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItem.ToolTip">
            <summary> 
            Property that maps to the <c>ToolTip</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IMenuItem.WebAnalytics">
            <summary> 
            Property that maps to the <c>WebAnalytics</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IMenuItemStatic">
            <summary>
            Interface that maps to the <c>MenuItemStatic</c> content template.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.INotification">
            <summary>
            Interface that maps to the <c>Notification</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.CTANativeLink">
            <summary> 
            Property that maps to the <c>CTANativeLink</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.HeaderTermsAndConditionsOverlay">
            <summary> 
            Property that maps to the <c>HeaderTermsAndConditionsOverlay</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.HeaderTermsAndConditionsRewardsOverlay">
            <summary> 
            Property that maps to the <c>HeaderTermsAndConditionsRewardsOverlay</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.HeaderTermsAndConditionsToaster">
            <summary> 
            Property that maps to the <c>HeaderTermsAndConditionsToaster</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayCTA">
            <summary> 
            Property that maps to the <c>OverlayCTA</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverLayDescription">
            <summary> 
            Property that maps to the <c>OverLayDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayHeaderType">
            <summary> 
            Property that maps to the <c>OverlayHeaderType</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayImage">
            <summary> 
            Property that maps to the <c>OverlayImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayImageIntroductoryText">
            <summary> 
            Property that maps to the <c>OverlayImageIntroductoryText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayImageSubtitleText">
            <summary> 
            Property that maps to the <c>OverlayImageSubtitleText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayImageTextAlignment">
            <summary> 
            Property that maps to the <c>OverlayImageTextAlignment</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayImageTitleFontSize">
            <summary> 
            Property that maps to the <c>OverlayImageTitleFontSize</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayImageTitleText">
            <summary> 
            Property that maps to the <c>OverlayImageTitleText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayLayout">
            <summary> 
            Property that maps to the <c>OverlayLayout</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayManualTermsAndConditions">
            <summary> 
            Property that maps to the <c>OverlayManualTermsAndConditions</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.OverlayTitle">
            <summary> 
            Property that maps to the <c>OverlayTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PostAcceptanceCTA">
            <summary> 
            Property that maps to the <c>PostAcceptanceCTA</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PostAcceptanceDescription">
            <summary> 
            Property that maps to the <c>PostAcceptanceDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PostAcceptanceHeaderTitle">
            <summary> 
            Property that maps to the <c>PostAcceptanceHeaderTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PostAcceptanceImage">
            <summary> 
            Property that maps to the <c>PostAcceptanceImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PostAcceptanceImageIntroductoryText">
            <summary> 
            Property that maps to the <c>PostAcceptanceImageIntroductoryText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PostAcceptanceImageSubtitleText">
            <summary> 
            Property that maps to the <c>PostAcceptanceImageSubtitleText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PostAcceptanceImageTextAlignment">
            <summary> 
            Property that maps to the <c>PostAcceptanceImageTextAlignment</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PostAcceptanceImageTitleFontSize">
            <summary> 
            Property that maps to the <c>PostAcceptanceImageTitleFontSize</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PostAcceptanceImageTitleText">
            <summary> 
            Property that maps to the <c>PostAcceptanceImageTitleText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PostAcceptanceTitle">
            <summary> 
            Property that maps to the <c>PostAcceptanceTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceCTA1">
            <summary> 
            Property that maps to the <c>PreAcceptanceCTA1</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceCTA2">
            <summary> 
            Property that maps to the <c>PreAcceptanceCTA2</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceDescription">
            <summary> 
            Property that maps to the <c>PreAcceptanceDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceHeaderTitle">
            <summary> 
            Property that maps to the <c>PreAcceptanceHeaderTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceImage">
            <summary> 
            Property that maps to the <c>PreAcceptanceImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceImageIntroductoryText">
            <summary> 
            Property that maps to the <c>PreAcceptanceImageIntroductoryText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceImageSubtitleText">
            <summary> 
            Property that maps to the <c>PreAcceptanceImageSubtitleText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceImageTextAlignment">
            <summary> 
            Property that maps to the <c>PreAcceptanceImageTextAlignment</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceImageTitleFontSize">
            <summary> 
            Property that maps to the <c>PreAcceptanceImageTitleFontSize</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceImageTitleText">
            <summary> 
            Property that maps to the <c>PreAcceptanceImageTitleText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceKeyTerms">
            <summary> 
            Property that maps to the <c>PreAcceptanceKeyTerms</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.PreAcceptanceTitle">
            <summary> 
            Property that maps to the <c>PreAcceptanceTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.RestrictedOverlay">
            <summary> 
            Property that maps to the <c>RestrictedOverlay</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.RewardsOverlayLayout">
            <summary> 
            Property that maps to the <c>RewardsOverlayLayout</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.ShowManualTermsAndConditionsOnOverlay">
            <summary> 
            Property that maps to the <c>ShowManualTermsAndConditionsOnOverlay</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.ToasterCloseCTALabel">
            <summary> 
            Property that maps to the <c>ToasterCloseCTALabel</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.ToasterCloseWithTimer">
            <summary> 
            Property that maps to the <c>ToasterCloseWithTimer</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.ToasterCTA">
            <summary> 
            Property that maps to the <c>ToasterCTA</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.ToasterDescription">
            <summary> 
            Property that maps to the <c>ToasterDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.ToasterLayout">
            <summary> 
            Property that maps to the <c>ToasterLayout</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.ToasterPrimaryGhostCTA">
            <summary> 
            Property that maps to the <c>ToasterPrimaryGhostCTA</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.ToasterTitle">
            <summary> 
            Property that maps to the <c>ToasterTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.TosterImage">
            <summary> 
            Property that maps to the <c>TosterImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.INotification.UseRewardsOverlay">
            <summary> 
            Property that maps to the <c>UseRewardsOverlay</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IOptimoveIntegration">
            <summary>
            Interface that maps to the <c>OptimoveIntegration</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IOptimoveIntegration.OptimoveInstance">
            <summary> 
            Property that maps to the <c>OptimoveInstance</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCMenu">
            <summary>
            Interface that maps to the <c>PC Menu</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCMenu.Depth">
            <summary> 
            Property that maps to the <c>Depth</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCMenu.HighlightParents">
            <summary> 
            Property that maps to the <c>HighlightParents</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCMenu.MenuNode">
            <summary> 
            Property that maps to the <c>MenuNode</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCSandbox">
            <summary>
            Interface that maps to the <c>PC Sandbox</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCSandbox.FallbackContent">
            <summary> 
            Property that maps to the <c>FallbackContent</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCSandbox.MaxResponseTime">
            <summary> 
            Property that maps to the <c>MaxResponseTime</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCSandbox.WidgetUrl">
            <summary> 
            Property that maps to the <c>WidgetUrl</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCTeaser">
            <summary>
            Interface that maps to the <c>PC Teaser</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCTeaser.Image">
            <summary> 
            Property that maps to the <c>Image</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCTeaser.ImageLink">
            <summary> 
            Property that maps to the <c>ImageLink</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCTeaser.ImageOverlay">
            <summary> 
            Property that maps to the <c>ImageOverlay</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCTeaser.ImageOverlayClass">
            <summary> 
            Property that maps to the <c>ImageOverlayClass</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCTeaser.OptionalText">
            <summary> 
            Property that maps to the <c>OptionalText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCTeaser.Subtitle">
            <summary> 
            Property that maps to the <c>Subtitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCTeaser.Summary">
            <summary> 
            Property that maps to the <c>Summary</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCTeaser.Text">
            <summary> 
            Property that maps to the <c>Text</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCBaseComponent">
            <summary>
            Interface that maps to the <c>PCBaseComponent</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCBaseComponent.Class">
            <summary> 
            Property that maps to the <c>Class</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCBaseComponent.Parameters">
            <summary> 
            Property that maps to the <c>Parameters</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCBaseComponent.Title">
            <summary> 
            Property that maps to the <c>Title</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCBaseComponent.TitleLink">
            <summary> 
            Property that maps to the <c>TitleLink</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCBaseComponent.TridZone">
            <summary> 
            Property that maps to the <c>TridZone</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCCarousel">
            <summary>
            Interface that maps to the <c>PCCarousel</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCCarousel.MaxItems">
            <summary> 
            Property that maps to the <c>MaxItems</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCComponentFolder">
            <summary>
            Interface that maps to the <c>PCComponentFolder</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCComponentFolder.MaxItems">
            <summary> 
            Property that maps to the <c>MaxItems</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCContainer">
            <summary>
            Interface that maps to the <c>PCContainer</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCContainer.Items">
            <summary> 
            Property that maps to the <c>Items</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCFlash">
            <summary>
            Interface that maps to the <c>PCFlash</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCFlash.BGColor">
            <summary> 
            Property that maps to the <c>BGColor</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCFlash.Flash">
            <summary> 
            Property that maps to the <c>Flash</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCFlash.FlashVariables">
            <summary> 
            Property that maps to the <c>FlashVariables</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCFlash.Height">
            <summary> 
            Property that maps to the <c>Height</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCFlash.ReplacementImage">
            <summary> 
            Property that maps to the <c>ReplacementImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCFlash.ReplacementText">
            <summary> 
            Property that maps to the <c>ReplacementText</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCFlash.Width">
            <summary> 
            Property that maps to the <c>Width</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCIFrame">
            <summary>
            Interface that maps to the <c>PCIFrame</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCIFrame.Height">
            <summary> 
            Property that maps to the <c>Height</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCIFrame.Src">
            <summary> 
            Property that maps to the <c>Src</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCIFrame.Width">
            <summary> 
            Property that maps to the <c>Width</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCImage">
            <summary>
            Interface that maps to the <c>PCImage</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCImage.IconName">
            <summary> 
            Property that maps to the <c>IconName</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCImage.Image">
            <summary> 
            Property that maps to the <c>Image</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCImage.ImageLink">
            <summary> 
            Property that maps to the <c>ImageLink</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCImage.ToolTip">
            <summary> 
            Property that maps to the <c>ToolTip</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCImageText">
            <summary>
            Interface that maps to the <c>PCImageText</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCImageText.Image">
            <summary> 
            Property that maps to the <c>Image</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCImageText.ImageLink">
            <summary> 
            Property that maps to the <c>ImageLink</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCImageText.Text">
            <summary> 
            Property that maps to the <c>Text</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCRawHtml">
            <summary>
            Interface that maps to the <c>PCRawHtml</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCRawHtml.Html">
            <summary> 
            Property that maps to the <c>Html</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCRegionalComponent">
            <summary>
            Interface that maps to the <c>PCRegionalComponent</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCRegionalComponent.RegionItems">
            <summary> 
            Property that maps to the <c>RegionItems</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCScript">
            <summary>
            Interface that maps to the <c>PCScript</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCScript.Code">
            <summary> 
            Property that maps to the <c>Code</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCScript.IsFooter">
            <summary> 
            Property that maps to the <c>IsFooter</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCScript.Reference">
            <summary> 
            Property that maps to the <c>Reference</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCScrollMenu">
            <summary>
            Interface that maps to the <c>PCScrollMenu</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCScrollMenu.MenuItems">
            <summary> 
            Property that maps to the <c>MenuItems</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCStyle">
            <summary>
            Interface that maps to the <c>PCStyle</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCStyle.CSS">
            <summary> 
            Property that maps to the <c>CSS</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCText">
            <summary>
            Interface that maps to the <c>PCText</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCText.Text">
            <summary> 
            Property that maps to the <c>Text</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCVideo">
            <summary>
            Interface that maps to the <c>PCVideo</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCVideo.Controls">
            <summary> 
            Property that maps to the <c>Controls</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCVideo.Video">
            <summary> 
            Property that maps to the <c>Video</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPCWidget">
            <summary>
            Interface that maps to the <c>PCWidget</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPCWidget.RouteValues">
            <summary> 
            Property that maps to the <c>RouteValues</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPluginRoot">
            <summary>
            Interface that maps to the <c>Plugin Root</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPluginRoot.DependentTo">
            <summary> 
            Property that maps to the <c>DependentTo</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPluginRoot.Messages">
            <summary> 
            Property that maps to the <c>Messages</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPluginRoot.Product">
            <summary> 
            Property that maps to the <c>Product</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPluginRoot.ProductContact">
            <summary> 
            Property that maps to the <c>ProductContact</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPluginRoot.TechnicalContact">
            <summary> 
            Property that maps to the <c>TechnicalContact</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPM12ColPage">
            <summary>
            Interface that maps to the <c>PM12ColPage</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPM12ColPage.Banner">
            <summary> 
            Property that maps to the <c>Banner</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPM12ColPage.ContentLeft">
            <summary> 
            Property that maps to the <c>ContentLeft</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPM12ColPage.ContentRight">
            <summary> 
            Property that maps to the <c>ContentRight</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPM1ColPage">
            <summary>
            Interface that maps to the <c>PM1ColPage</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPM1ColPage.Content">
            <summary> 
            Property that maps to the <c>Content</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPM2ColPage">
            <summary>
            Interface that maps to the <c>PM2ColPage</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPM2ColPage.ContentLeft">
            <summary> 
            Property that maps to the <c>ContentLeft</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPM2ColPage.ContentRight">
            <summary> 
            Property that maps to the <c>ContentRight</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPMBasePage">
            <summary>
            Interface that maps to the <c>PMBasePage</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMBasePage.PageAlternateLinks">
            <summary> 
            Property that maps to the <c>PageAlternateLinks</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMBasePage.PageAssets">
            <summary> 
            Property that maps to the <c>PageAssets</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMBasePage.PageClass">
            <summary> 
            Property that maps to the <c>PageClass</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMBasePage.PageDescription">
            <summary> 
            Property that maps to the <c>PageDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMBasePage.PageId">
            <summary> 
            Property that maps to the <c>PageId</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMBasePage.PageMetaTags">
            <summary> 
            Property that maps to the <c>PageMetaTags</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMBasePage.PageTitle">
            <summary> 
            Property that maps to the <c>PageTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMBasePage.Parameters">
            <summary> 
            Property that maps to the <c>Parameters</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPMNav12ColPage">
            <summary>
            Interface that maps to the <c>PMNav12ColPage</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav12ColPage.Banner">
            <summary> 
            Property that maps to the <c>Banner</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav12ColPage.ContentLeft">
            <summary> 
            Property that maps to the <c>ContentLeft</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav12ColPage.ContentRight">
            <summary> 
            Property that maps to the <c>ContentRight</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav12ColPage.Navigation">
            <summary> 
            Property that maps to the <c>Navigation</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPMNav13ColPage">
            <summary>
            Interface that maps to the <c>PMNav13ColPage</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav13ColPage.Banner">
            <summary> 
            Property that maps to the <c>Banner</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav13ColPage.ContentCenter">
            <summary> 
            Property that maps to the <c>ContentCenter</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav13ColPage.ContentLeft">
            <summary> 
            Property that maps to the <c>ContentLeft</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav13ColPage.ContentRight">
            <summary> 
            Property that maps to the <c>ContentRight</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav13ColPage.Navigation">
            <summary> 
            Property that maps to the <c>Navigation</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPMNav1ColPage">
            <summary>
            Interface that maps to the <c>PMNav1ColPage</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav1ColPage.Content">
            <summary> 
            Property that maps to the <c>Content</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMNav1ColPage.Navigation">
            <summary> 
            Property that maps to the <c>Navigation</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IPMSignpost12ColPage">
            <summary>
            Interface that maps to the <c>PMSignpost12ColPage</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMSignpost12ColPage.Banner">
            <summary> 
            Property that maps to the <c>Banner</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMSignpost12ColPage.ContentLeft">
            <summary> 
            Property that maps to the <c>ContentLeft</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMSignpost12ColPage.ContentRight">
            <summary> 
            Property that maps to the <c>ContentRight</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IPMSignpost12ColPage.Signpost">
            <summary> 
            Property that maps to the <c>Signpost</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IProxy">
            <summary>
            Interface that maps to the <c>Proxy</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IProxy.Target">
            <summary> 
            Property that maps to the <c>Target</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IProxyFolder">
            <summary>
            Interface that maps to the <c>ProxyFolder</c> content template.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IRetention">
            <summary>
            Interface that maps to the <c>Retention</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IRetention.ValidUpTo">
            <summary> 
            Property that maps to the <c>ValidUpTo</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ISignposting">
            <summary>
            Interface that maps to the <c>Signposting</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.BackgroundBannerImage">
            <summary> 
            Property that maps to the <c>BackgroundBannerImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.BannerDescription">
            <summary> 
            Property that maps to the <c>BannerDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.BannerKeyTerms">
            <summary> 
            Property that maps to the <c>BannerKeyTerms</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.BannerTitle">
            <summary> 
            Property that maps to the <c>BannerTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.DetailsTermsAndConditions">
            <summary> 
            Property that maps to the <c>DetailsTermsAndConditions</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.HeroBannerImage">
            <summary> 
            Property that maps to the <c>HeroBannerImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.MoreinfoCTA">
            <summary> 
            Property that maps to the <c>MoreinfoCTA</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.OptinCTATitle">
            <summary> 
            Property that maps to the <c>OptinCTATitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.OptionalCTA">
            <summary> 
            Property that maps to the <c>OptionalCTA</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.PromoDetailsBackgroundImage">
            <summary> 
            Property that maps to the <c>PromoDetailsBackgroundImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.PromoDetailsDescription">
            <summary> 
            Property that maps to the <c>PromoDetailsDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.PromoDetailsHeroImage">
            <summary> 
            Property that maps to the <c>PromoDetailsHeroImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISignposting.PromoDetailsTitle">
            <summary> 
            Property that maps to the <c>PromoDetailsTitle</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ISiteRoot">
            <summary>
            Interface that maps to the <c>Site Root</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISiteRoot.CanonicalDomains">
            <summary> 
            Property that maps to the <c>CanonicalDomains</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISiteRoot.DefaultPageTitle">
            <summary> 
            Property that maps to the <c>DefaultPageTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISiteRoot.ReplacementValues">
            <summary> 
            Property that maps to the <c>ReplacementValues</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IStaticFileTemplate">
            <summary>
            Interface that maps to the <c>StaticFileTemplate</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IStaticFileTemplate.ClientCacheTime">
            <summary> 
            Property that maps to the <c>ClientCacheTime</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IStaticFileTemplate.Content">
            <summary> 
            Property that maps to the <c>Content</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IStaticFileTemplate.MimeType">
            <summary> 
            Property that maps to the <c>MimeType</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ISvgImage">
            <summary>
            Interface that maps to the <c>SvgImage</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISvgImage.CssClass">
            <summary> 
            Property that maps to the <c>CssClass</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISvgImage.CustomAnimation">
            <summary> 
            Property that maps to the <c>CustomAnimation</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISvgImage.DefaultAnimation">
            <summary> 
            Property that maps to the <c>DefaultAnimation</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISvgImage.Size">
            <summary> 
            Property that maps to the <c>Size</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISvgImage.SvgImage">
            <summary> 
            Property that maps to the <c>SvgImage</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISvgImage.Type">
            <summary> 
            Property that maps to the <c>Type</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ISvgImage.ViewBox">
            <summary> 
            Property that maps to the <c>ViewBox</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IViewTemplate">
            <summary>
            Interface that maps to the <c>View Template</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IViewTemplate.Messages">
            <summary> 
            Property that maps to the <c>Messages</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IViewTemplate.PageDescription">
            <summary> 
            Property that maps to the <c>PageDescription</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IViewTemplate.PageTitle">
            <summary> 
            Property that maps to the <c>PageTitle</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IViewTemplate.Text">
            <summary> 
            Property that maps to the <c>Text</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IViewTemplate.Title">
            <summary> 
            Property that maps to the <c>Title</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IViewTemplate.Validation">
            <summary> 
            Property that maps to the <c>Validation</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.IVnIcon">
            <summary>
            Interface that maps to the <c>VnIcon</c> content template.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IVnIcon.ExtraClass">
            <summary> 
            Property that maps to the <c>ExtraClass</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IVnIcon.FillColor">
            <summary> 
            Property that maps to the <c>FillColor</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IVnIcon.Image">
            <summary> 
            Property that maps to the <c>Image</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IVnIcon.Size">
            <summary> 
            Property that maps to the <c>Size</c> content field.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.IVnIcon.Title">
            <summary> 
            Property that maps to the <c>Title</c> content field.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ContentVideo">
            <summary>Represents a custom content video.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentVideo.Id">
            <summary>Gets video source ID.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentVideo.Src">
            <summary>Gets video source URI.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentVideo.Width">
            <summary>Gets video width.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ContentVideo.Height">
            <summary>Gets video height.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Model.ContentVideo.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ListItem">
            <summary>
            Represents a list item entry (e.g. in an HTML <c>select</c> element).
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ListItem.Value">
            <summary>Gets the value.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ListItem.Text">
            <summary>Gets the text.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Model.ListItem.#ctor(System.String,System.String)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Model.ProxyRule">
            <summary>
            Rule defined in proxy content item.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ProxyRule.Condition">
            <summary>Gets the condition.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Model.ProxyRule.TargetId">
            <summary>Gets the ID of target content which should be returned if <see cref="P:Frontend.Vanilla.Content.Model.ProxyRule.Condition" /> is matched.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Model.ProxyRule.#ctor(System.String,Frontend.Vanilla.Content.DocumentId)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.VnIcon">
            <summary>
            Represents a single vn icon item.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.VnIcon.IconName">
            <summary>
            Name of the icon item.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.VnIcon.ExtraClass">
            <summary>
            Additional css class.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.VnIcon.FillColor">
            <summary>
            Color to fill the icon.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.VnIcon.Image">
            <summary>
            Content image selected for icon.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.VnIcon.Size">
            <summary>
            Size of icon.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.VnIcon.Title">
            <summary>
            Size of icon.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.VnIcon.ImageUrl">
            <summary>
            Image url in case added as parameter.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer">
            <summary>
            Replaces content placeholders in fields of particular type.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer.FieldType">
            <summary>
            Gets the field type. Only field value that are its instance will be replaced using this replacer.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer.GetReplaceableStrings(System.Object)">
            <summary>
            Collects all strings of field value that can potentially contain placeholders.
            Then they are replaced when needed and passed to <see cref="M:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer.Recreate(System.Object,Frontend.Vanilla.Content.Placeholders.ReplacedStringMapping)" /> method.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer.Recreate(System.Object,Frontend.Vanilla.Content.Placeholders.ReplacedStringMapping)">
            <summary>
            Recreates field value using given strings with replaced placeholders.
            Note that <c>null</c> can't be used as a dictionary key.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer`1">
            <summary>
            Placeholder replacer meant to be reused in other composite replacers.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer`1.GetReplaceableStrings(`0)">
            <summary>See <see cref="M:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer.GetReplaceableStrings(System.Object)" />.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer`1.Recreate(`0,Frontend.Vanilla.Content.Placeholders.ReplacedStringMapping)">
            <summary>See <see cref="M:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer.Recreate(System.Object,Frontend.Vanilla.Content.Placeholders.ReplacedStringMapping)" />.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Placeholders.FieldPlaceholderReplacer`1">
            <summary>
            Strongly-typed implementation of <see cref="T:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Placeholders.FieldPlaceholderReplacer`1.GetReplaceableStrings(`0)">
            <summary>Inner implementation of <see cref="M:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer`1.GetReplaceableStrings(`0)" />.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Placeholders.FieldPlaceholderReplacer`1.Recreate(`0,Frontend.Vanilla.Content.Placeholders.ReplacedStringMapping)">
            <summary>Inner implementation of <see cref="M:Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer`1.Recreate(`0,Frontend.Vanilla.Content.Placeholders.ReplacedStringMapping)" />.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Placeholders.ReplacedStringMapping">
            <summary>
            Collection of replaced strings. Supports null keys (original strings) in addition to regular <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Placeholders.ReplacedStringMapping.Strings">
            <summary>Gets underlying dictionary.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Placeholders.ReplacedStringMapping.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Placeholders.ReplacedStringMapping.Get(System.String)">
            <summary>Gets replaced string for original one.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Placeholders.Replacers.ContentImagePlaceholderReplacer">
            <summary>
            Replaces content placeholders in fields of type <see cref="T:Frontend.Vanilla.Content.Model.ContentImage" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Placeholders.Replacers.ContentLinkPlaceholderReplacer">
            <summary>
            Replaces content placeholders in fields of type <see cref="T:Frontend.Vanilla.Content.Model.ContentImage" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Placeholders.Replacers.ContentLinkPlaceholderReplacer.#ctor(Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer{Frontend.Vanilla.Content.Model.ContentParameters},Frontend.Vanilla.Content.Placeholders.IFieldPlaceholderReplacer{System.Uri})">
            <summary>
            Replaces content placeholders in fields of type <see cref="T:Frontend.Vanilla.Content.Model.ContentImage" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Placeholders.Replacers.ContentParametersPlaceholderReplacer">
            <summary>
            Replaces content placeholders in fields of type <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> of string, string.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Placeholders.Replacers.SelectListItemPlaceholderReplacer">
            <summary>
            Replaces content placeholders in fields of type <see cref="T:System.Collections.Generic.IReadOnlyList`1" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Placeholders.Replacers.StringPlaceholderReplacer">
            <summary>
            Replaces content placeholders in fields of type <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Placeholders.Replacers.UriPlaceholderReplacer">
            <summary>
            Replaces content placeholders in fields of type <see cref="T:System.Uri" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.ISitecoreLinkUrlProvider">
            <summary>
            Logic for resolving URLs from links in Sitecore.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.ISitecoreLinkUrlProvider.GetUrl(Frontend.Vanilla.Content.DocumentId)">
            <summary>Resolves the URL of a link at given path in Sitecore.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.ISitecoreLinkUrlProvider.GetUrlAsync(Frontend.Vanilla.Content.DocumentId,System.Threading.CancellationToken)">
            <summary>Resolves the URL of a link at given path in Sitecore.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.ISitecoreLinkUrlProvider.GetUrlAsync(Frontend.Vanilla.Core.System.ExecutionMode,Frontend.Vanilla.Content.DocumentId)">
            <summary>Resolves the URL of a link at given path in Sitecore.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.DataSources.FolderHackTemplatesXmlParser">
            <summary>
            Adds folder template because Sitecore returns folders in content response but in a request for templates it's missing.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.DataSources.FolderHackTemplatesXmlParser.#ctor(Frontend.Vanilla.Content.Templates.DataSources.ISitecoreServiceTemplatesXmlParser)">
            <summary>
            Adds folder template because Sitecore returns folders in content response but in a request for templates it's missing.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.DataSources.IReflectionTemplatesResolver">
            <summary>
            Loads Sitecore template definitions from already compiled template code.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.DataSources.IReflectionTemplatesSource">
            <summary>
            Loads all Sitecore templates from already compiled template code and maps them.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.DataSources.ISitecoreServiceTemplatesSource">
            <summary>
            Loads XML with content templates from Sitecore service.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.DataSources.ISitecoreServiceTemplatesXmlParser">
            <summary>
            Parses XML from Sitecore with content templates to metadata classes.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.Mapping.DefaultTemplateMappingProfile">
             <summary>
             Defines mappings for base vanilla templates. Mappings can be customized by overriding <see cref="M:Frontend.Vanilla.Content.Templates.Mapping.DefaultTemplateMappingProfile.OnMap" /> method.
             See <see cref="T:Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingProfile" /> for more details.
             </summary>
             <remarks>
             <code>
             <![CDATA[
             // Avoid doing this in your mapping profile class, because the code below maps all fields called "fieldName",
             // regardless of the template they're defined in.
             MapField<TField>("fieldName");
            
             // Instead, do this, configuring fields only for templates you own or control.
             MapTemplate("My Template Name", template => {
                 template.MapField<TField>("myFieldName");
             });
             ]]>
             </code>
             </remarks>
        </member>
        <member name="P:Frontend.Vanilla.Content.Templates.Mapping.DefaultTemplateMappingProfile.Converters">
            <summary>Gets injected dependencies.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.DefaultTemplateMappingProfile.#ctor">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.DefaultTemplateMappingProfile.OnMap">
            <summary>Defines the actual mapping.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.Mapping.SitecoreFieldAttribute">
            <summary>
            Declares mapping and properties of the template field at Sitecore side.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Templates.Mapping.SitecoreFieldAttribute.Name">
            <summary>Gets the name of template field.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Templates.Mapping.SitecoreFieldAttribute.Type">
            <summary>Gets the type of template field.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Templates.Mapping.SitecoreFieldAttribute.Shared">
            <summary>Indicates if the field is shared between all language hence doesn't need translation.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.SitecoreFieldAttribute.#ctor(System.String,System.String,System.Boolean)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.Mapping.SitecoreTemplateAttribute">
            <summary>
            Declares mapping and properties of the template at Sitecore side.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Templates.Mapping.SitecoreTemplateAttribute.Name">
            <summary>Gets the name of the template.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Templates.Mapping.SitecoreTemplateAttribute.MappingProfile">
            <summary>Gets the mapping profile type associated with this template.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.SitecoreTemplateAttribute.#ctor(System.String,System.Type)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.Mapping.TemplateAssemblySource">
            <summary>
            Represents an association of templates with their assembly.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Templates.Mapping.TemplateAssemblySource.Assembly">
            <summary>Gets the assembly that contain content templates.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Content.Templates.Mapping.TemplateAssemblySource.MappingProfile">
            <summary>Gets the mapping profile to be used for templates defined in the <see cref="P:Frontend.Vanilla.Content.Templates.Mapping.TemplateAssemblySource.Assembly" />.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.TemplateAssemblySource.#ctor(System.Reflection.Assembly,Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingProfile)">
            <summary>Initializes a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingBuilder">
            <summary>
            Used to build mappings for a specific template.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingBuilder.IgnoreField(Frontend.Vanilla.Core.System.Text.TrimmedRequiredString)">
            <summary>Ignores own field of this template when generating corresponding template class.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingBuilder.MapField``1(Frontend.Vanilla.Core.System.Text.TrimmedRequiredString,Frontend.Vanilla.Content.FieldConversion.IFieldConverter{``0},Frontend.Vanilla.Core.System.Text.TrimmedRequiredString)">
            <summary>Maps own field of this template to particular type deserialized using given converter.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingProfile">
            <summary>
            Represents a mapping for raw template and field definitions of the underlying CMS to CLR types. This class is abstract.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingProfile.MapFieldsOfType``1(Frontend.Vanilla.Core.System.Text.TrimmedRequiredString,Frontend.Vanilla.Content.FieldConversion.IFieldConverter{``0},Frontend.Vanilla.Core.System.Text.TrimmedRequiredString)">
            <summary>Defines generic mapping for fields of the specified type.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingProfile.MapTemplate(Frontend.Vanilla.Core.System.Text.TrimmedRequiredString,System.Action{Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingBuilder})">
            <summary>Customizes mapping of fields of particular template.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingProfile.IgnoreTemplate(Frontend.Vanilla.Core.System.Text.TrimmedRequiredString)">
            <summary>Ignores whole template when generating template classes.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.Mapping.TemplateMappingProfile.OnMap">
            <summary>Create custom mapping of templates and template fields.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.SitecoreTemplate">
            <summary>
            Information about a template on Sitecore side.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.Templates.SitecoreTemplateField">
            <summary>
            Information about a template field on Sitecore side.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.Templates.SitecoreTemplateField.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Information about a template field on Sitecore side.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Content.VanillaContentServices">
            <summary>
            Vanilla infrastructure for loading content from Sitecore CMS.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Content.VanillaContentServices.AddVanillaSitecoreContent(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds services related to Vanilla infrastructure for loading content from Sitecore CMS.
            Also adds dependencies: <see cref="M:Frontend.Vanilla.Core.VanillaCoreServices.AddVanillaCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />, <see cref="M:Frontend.Vanilla.DomainSpecificLanguage.VanillaDslServices.AddVanillaDomainSpecificLanguage(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />.
            </summary>
        </member>
    </members>
</doc>
