<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Frontend.Vanilla.Features</name>
    </assembly>
    <members>
        <member name="T:Frontend.Vanilla.Features.AntiForgeryProtection.BypassAntiForgeryTokenAttribute">
            <summary>
            Used to explicitly exclude an action method from anti forgery measures.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.API.BaseController">
            <summary>
            Abstraction class over .NET Core ControllerBase.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.API.BaseController.Ok">
            <summary>
            Override Ok action result in order to always use `OkObjectResult` and apply custom formatter
            <see cref="T:Frontend.Vanilla.Features.Json.VanillaJsonAndStringOutputFormatter"/>.
            </summary>
            <returns>OkObjectResult.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.API.BaseController.BadRequest">
            <summary>
            Override BadRequest action result in order to always use `BadRequestObjectResult` and apply custom formatter
            <see cref="T:Frontend.Vanilla.Features.Json.VanillaJsonAndStringOutputFormatter"/>.
            </summary>
            <returns>BadRequestObjectResult.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.API.BaseController.BadRequest(System.String)">
            <summary>
            Overload BadRequest action result in order to always use `BadRequestObjectResult` and apply custom formatter
            <see cref="T:Frontend.Vanilla.Features.Json.VanillaJsonAndStringOutputFormatter"/>.
            </summary>
            <returns>BadRequestObjectResult.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.API.BaseController.OkResult(System.Object)">
            <summary>
            Overload Ok action result in order to always use `OkObjectResult` and apply custom formatter
            <see cref="T:Frontend.Vanilla.Features.Json.VanillaJsonAndStringOutputFormatter"/>.
            </summary>
            <returns>OkObjectResult.</returns>
        </member>
        <member name="T:Frontend.Vanilla.Features.API.ClientConfigController">
            <summary>Serves client config.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.API.ClientConfigController.#ctor(System.IServiceProvider)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.API.ClientConfigController.Get(System.Threading.CancellationToken)">
            <summary>Gets full client config.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.API.ClientConfigController.GetPartial(System.String[],System.Threading.CancellationToken)">
            <summary>Gets partial client config.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.AppBuilder.ExceptionHandlingExtensions.UseExceptionHandling(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>Configures customized exception handling.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.AppBuilder.NotFoundIfNoEndpointMiddleware">
            <summary>
            If there is no associated endpoint (mapped route) then sets HTTP response to not-found and stops further execution
            which is performant and next middlewares in the pipeline can rely on an endpoint.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.AppBuilder.NotFoundIfNoEndpointMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Frontend.Vanilla.Core.Net.IInternalRequestEvaluator)">
            <summary>
            If there is no associated endpoint (mapped route) then sets HTTP response to not-found and stops further execution
            which is performant and next middlewares in the pipeline can rely on an endpoint.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.AppBuilder.WebHostEnvironmentExtensions">
            <summary>Provides utility methods over IWebHostEnvironment.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.AppBuilder.WebHostEnvironmentExtensions.IsProd(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Provides information if current environment is development environment (dev).
            </summary>
            <param name="webHostEnvironment"></param>
            <returns>Information if current environment is production environment (prod).</returns>
        </member>
        <member name="T:Frontend.Vanilla.Features.AppInfo.AppInfoClientConfigProvider">
            <summary>
            Outputs client-side config related to backend connection - info extracted from PosAPI access ID for direct connection to the platform.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.AppInfo.AppInfoClientConfigProvider.#ctor(Frontend.Vanilla.ServiceClients.Services.Common.IPosApiCommonService)">
            <summary>
            Outputs client-side config related to backend connection - info extracted from PosAPI access ID for direct connection to the platform.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.AppPlugin">
            <summary>
            Defines metadata for this plugin.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.AppPlugin.ContentRoot">
            <summary>
            The versioned content root path in the CMS that this plugin uses to get scoped content.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.App.IAppConfiguration">
            <summary>
            Configuration of application.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Authentication.AnonymousClaimsMiddleware">
            <summary>
            Initializes claims for anonymous user in the beginning of a request.
            For authenticated user see <see cref="T:Frontend.Vanilla.Features.Authentication.IAuthenticatedClaimsInitializer" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.AnonymousClaimsMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Frontend.Vanilla.ServiceClients.Services.Authentication.IPosApiAuthenticationServiceInternal)">
            <summary>
            Initializes claims for anonymous user in the beginning of a request.
            For authenticated user see <see cref="T:Frontend.Vanilla.Features.Authentication.IAuthenticatedClaimsInitializer" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Authentication.IAuthenticatedClaimsInitializer">
            <summary>
            Initializes claims for authenticated user in the beginning of a request.
            For anonymous user see <see cref="T:Frontend.Vanilla.Features.Authentication.AnonymousClaimsMiddleware" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Authentication.IAuthenticationConfiguration">
            <summary>
            Configures authentication on web tier.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Authentication.IAuthorizationConfiguration.IsAnonymousAccessRestricted">
            <summary>
            Gets the value indicating if access of anonymous users is restricted globally.
            Only pages with allowed anonymous access are accessible.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Authentication.ICookieAuthenticationOptionsService">
            <summary>
            Overrides cookie expiration and partitioned state during SignIn and partitioned state on SignOut.
            Based on sample from https://github.com/dotnet/aspnetcore/blob/17c8c864248473efa4e88ef283abbfd35a31142d/src/Security/Authentication/test/CookieTests.cs#L980.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Authentication.CurrentLabelDomainCookieManager">
            <summary>
            Dynamically sets cookie domain to the one corresponding to current label from <see cref="T:Frontend.Vanilla.Features.Cookies.ICookieConfiguration" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.CurrentLabelDomainCookieManager.#ctor(Microsoft.AspNetCore.Authentication.Cookies.ICookieManager,Frontend.Vanilla.Features.Cookies.ICookieConfiguration)">
            <summary>
            Dynamically sets cookie domain to the one corresponding to current label from <see cref="T:Frontend.Vanilla.Features.Cookies.ICookieConfiguration" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Authentication.AlwaysRenewAuthenticationAttribute">
            <summary>
            Authentication is renewed each time when a request comes to this controller/action.
            instead of default behavior (renewed when a request comes in the second half of authentication expiration).
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Authentication.NeverRenewAuthenticationAttribute">
            <summary>
            Authentication is never renewed when a request comes to this controller/action.
            instead of default behavior (renewed when a request comes in the second half of authentication expiration).
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService">
            <summary>
            Authentication service for logging in and out of Web applications,
            as well as refreshing a user's authentication token before it expires.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService.LoginAsync(Frontend.Vanilla.ServiceClients.Services.Authentication.Login.LoginParameters,System.Threading.CancellationToken)">
            <summary>
            Authenticates a given username/password combination.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService.LoginAsync(Frontend.Vanilla.ServiceClients.Services.Authentication.Login.AutoLoginParameters,System.Threading.CancellationToken)">
            <summary>
            Authenticates with the given SSO Token. (AutoLogin).
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService.LoginAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Authenticates the user with given tokens.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService.LoginAsync(Frontend.Vanilla.ServiceClients.Services.Authentication.Login.PidLoginParameters,System.Threading.CancellationToken)">
            <summary>
            Authenticates with the given PID. (Login/PID).
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService.LoginAsync(Frontend.Vanilla.ServiceClients.Services.Authentication.Login.OAuthIdLoginParameters,System.Threading.CancellationToken)">
            <summary>
            Authenticates with the given oAuthId. (OAuthLogin).
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService.LoginAsync(Frontend.Vanilla.ServiceClients.Services.Authentication.Login.RememberMeLoginParameters,System.Threading.CancellationToken)">
            <summary>
            Authenticates with remember-me token.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService.FinalizeWorkflowAsync(Frontend.Vanilla.ServiceClients.Services.Authentication.Login.WorkflowParameters,System.String,System.Threading.CancellationToken)">
            <summary>
            Authenticates the user in using a workflow id.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService.SkipWorkflowAsync(Frontend.Vanilla.ServiceClients.Services.Authentication.Login.WorkflowParameters,System.String,System.Threading.CancellationToken)">
            <summary>
            Skips the current workflow and logs the user in.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService.LogoutAsync(Frontend.Vanilla.Core.System.ExecutionMode)">
            <summary>
            Logs out the currently authenticated user.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.IWebAuthenticationService.CancelWorkflowAndLogoutAsync(System.Threading.CancellationToken)">
            <summary>
            Cancels the given workflow and logs the user out.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Authentication.WebAuthenticationService">
            <summary>
            Authentication service for login and logout operations.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Authentication.WebAuthenticationService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Frontend.Vanilla.ServiceClients.Services.IClaimsService,Frontend.Vanilla.Features.Login.ISuperCookie,Frontend.Vanilla.Core.Configuration.IEnvironmentProvider,Frontend.Vanilla.Core.Net.IClientIPResolver,Frontend.Vanilla.ServiceClients.Services.Manager.IPostLoginValuesManager,Frontend.Vanilla.Features.ContentMessages.IClosedContentMessagesCookie,Frontend.Vanilla.ServiceClients.Services.Authentication.IPosApiAuthenticationServiceInternal,Frontend.Vanilla.Features.Authentication.IAuthenticationHelper,Frontend.Vanilla.Features.WebUtilities.IEndpointMetadata,Frontend.Vanilla.Features.Cookies.ICookieConfiguration,Frontend.Vanilla.Features.Cookies.ICookieHandler,Microsoft.Extensions.Logging.ILogger{Frontend.Vanilla.Features.Authentication.WebAuthenticationService})">
            <summary>
            Authentication service for login and logout operations.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Base.ContentProviderBase`1.IsHtmlContentEmpty(System.String)">
            <summary>
            make replace all known html tags and check result on IsNullOrWhiteSpace.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ClientConfig.IClientConfigMergeExecutor">
            <summary>
            Unified execution and merging logic for <see cref="T:Frontend.Vanilla.Features.ClientConfig.IClientConfigProvider" />-s.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ClientConfig.IClientConfigMerger">
            <summary>
            Merges all given configurations into final one.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ClientConfig.IClientConfigMerger.GetMergedConfigAsync(System.Threading.CancellationToken)">
            <summary>
            Gets configuration from all client config providers.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ClientConfig.IClientConfigMerger.GetMergedConfigForAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets configuration from specified client config providers.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ClientConfig.IClientConfigProvider">
            <summary>Provides client-side app configuration.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ClientConfig.IClientConfigProvider.Name">
            <summary>Gets the name under which the configuration will be accessible on the client.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ClientConfig.IClientConfigProvider.Type">
            <summary>Gets the type of client configuration.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ClientConfig.IClientConfigProvider.GetClientConfigAsync(System.Threading.CancellationToken)">
            <summary>Returns the instance of client configuration.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ClientConfig.ClientConfigType">
            <summary>Specifies type of <see cref="T:Frontend.Vanilla.Features.ClientConfig.IClientConfigProvider" />.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ClientConfig.ClientConfigType.Eager">
            <summary>Client config that will be loaded before angular application is bootstrapped. Default behavior.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ClientConfig.ClientConfigType.Lazy">
            <summary>Client config that will be loaded on-demand when requested by name.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ClientConfig.LambdaClientConfigProvider">
            <summary>
            A helper class for client config providers.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ClientConfig.LambdaClientConfigProvider.Name">
            <inheritdoc />
        </member>
        <member name="P:Frontend.Vanilla.Features.ClientConfig.LambdaClientConfigProvider.Type">
            <inheritdoc />
        </member>
        <member name="M:Frontend.Vanilla.Features.ClientConfig.LambdaClientConfigProvider.#ctor(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Object}})">
            <summary>Create a provider that get the configuration asynchronously.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ClientConfig.LambdaClientConfigProvider.#ctor(System.String,System.Func{System.Object})">
            <summary>Create a provider that get the configuration synchronously.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ClientConfig.LambdaClientConfigProvider.GetClientConfigAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Frontend.Vanilla.Features.ClientConfig.RefreshClaimsClientConfigMergeExecutor">
            <summary>
            Refreshes user claims if needed before any provider is executed b/c more of them use claims so it's unclear which should refresh them.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ClientConfig.RefreshClaimsClientConfigMergeExecutor.#ctor(Frontend.Vanilla.Features.ClientConfig.IClientConfigMergeExecutor,Frontend.Vanilla.Features.ClientConfig.ICachedUserValuesFlag,Frontend.Vanilla.ServiceClients.Services.Authentication.IPosApiAuthenticationService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Refreshes user claims if needed before any provider is executed b/c more of them use claims so it's unclear which should refresh them.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Configuration.PlaceholderReplaceConfigurationProvider.GetPlaceholderValue(System.String,System.String)">
            <summary>Gets placeholder value using following priority:
            first searches in environment variables
            then in placeholders
            when no match is found, throws comprehensive exception.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Configuration.PlaceholderReplaceConfigurationProvider.PlaceholderRegex">
            <remarks>
            Pattern:<br/>
            <code>\\$\\{(.*?)\\}</code><br/>
            Explanation:<br/>
            <code>
            ○ Match the string "${".<br/>
            ○ 1st capture group.<br/>
                ○ Match a character other than '\n' lazily any number of times.<br/>
            ○ Match '}'.<br/>
            </code>
            </remarks>
        </member>
        <member name="T:Frontend.Vanilla.Features.ContentEndpoint.ContentController">
            <summary>
            Provides content API shared with all consumers. Allows consumers to implement additional mappers and provide their own <see cref="T:Frontend.Vanilla.Content.Client.IClientContentService"/> instance.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ContentEndpoint.ContentController.#ctor(System.IServiceProvider)">
            <summary>Creates the instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ContentEndpoint.ContentController.Get(System.String,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Get content from path.
            </summary>
            <param name="path"></param>
            <param name="cancellationToken"></param>
            <param name="filterOnClient"></param>
        </member>
        <member name="T:Frontend.Vanilla.Features.ContentEndpoint.ContentEndpointOptions">
            <summary>
            Options for content endpoint that fetches documents from cms.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ContentEndpoint.ContentEndpointOptions.AllowedPaths">
             <summary>
             List of allowed path patterns.
            
             For example: <c>App-v1.0/Partials/.*</c> will allow all paths under <c>Appv-1.0/Partials</c> (not the parent <c>Partials</c> folder).
             </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ContentEndpoint.ContentEndpointOptions.DisallowedPaths">
             <summary>
             List of disallowed path patterns.
            
             For example: <c>App-v1.0/Partials/Configuration.*</c> will disallow all paths under <c>Appv-1.0/Partials/Configuration</c> (including the parent <c>Configuration</c> folder - note the missing trailing slash).
             This is only needed if a child of an already allowed (<see cref="P:Frontend.Vanilla.Features.ContentEndpoint.ContentEndpointOptions.AllowedPaths"/>) path needs to be disallowed).
             </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ContentEndpoint.ContentEndpointOptions.AllowedAnonymousAccessRestrictedPaths">
             <summary>
             List of allowed path when user is not authenticated and IsAnonymousAccessRestricted is true patterns.
            
             For example: <c>App-v1.0/Partials/.*</c> will allow all paths under <c>Appv-1.0/Partials</c> (not the parent <c>Partials</c> folder).
             </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ContentEndpoint.ContentEndpointOptions.ClientContentService">
            <summary>
            The service instance to use to use to get the client side mapped content.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ContentMessages.IClosedContentMessagesCookie">
            <summary>
            Handles working with cookies that store information about closed content messages.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ContentMessages.ClosedMessageInfo">
            <summary>
            Represents metadata about closed content message.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ContentMessages.IContentMessagesLoader">
            <summary>
            Loads content messages and converts them to client format.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ContentMessages.IContentMessagesLoader.LoadAsync(Frontend.Vanilla.Content.DocumentId,Frontend.Vanilla.Core.System.Text.TrimmedRequiredString,Frontend.Vanilla.Content.DslEvaluation,System.Threading.CancellationToken)">
            <summary>
            Loads messages.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ContentMessages.IContentMessagesLoader.LoadDictionaryAsync(Frontend.Vanilla.Content.DocumentId,System.Threading.CancellationToken)">
            <summary>
            Loads a dictionary of content item groups.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Cookies.ICookieConfiguration">
            <summary>
            Configuration of the cookies for the apps in order to share them across the label.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.ICookieConfiguration.Secure">
            <summary>Indicates whether to transmit cookie only over secure channels (i.e. HTTPS).</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.ICookieConfiguration.CurrentLabelDomain">
            <summary>Gets the cookie domain dynamically resolved according to current label so it should be obtained just-in-time when processing HTTP request, not during app startup.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.ICookieConfiguration.DefaultSameSiteMode">
            <summary>Gets the default SameSite mode configured on Dynacon." />.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.ICookieConfiguration.AuthCookieSameSiteMode">
            <summary>Gets the SameSite mode configured on Dynacon for Auth cookie (vauth)." />.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Cookies.CookieConstants">
            <summary>
            Provides typed access to all cookie names.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.CurrentDomain">
            <summary>
            Specifies current application domain (NOT current label domain). />.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.TrackingAffiliate">
            <summary>
            Used to store a referer id for a limited time to disable tracking.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.TrackerId">
            <summary>
            Used to store a trackerId (aka WMId) passed via querystring "trackerId".
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.SuppressBonusRedirect">
            <summary>
            When bonus redirect suppressed we need to save trackerId in a cookie to be able show bonus notification afterwards.
            sbr goes for Suppress Bonus Redirects.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.Tdpeh">
            <summary>
            Stores the <c>tdpeh</c> value.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.AbTestGroup">
            <summary>
            Stores the AB test group.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.NativeApplication">
            <summary>
            Stores the information about what frontend is used on native application.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.NativeApp">
            <summary>
            Stores the information about which mobile native app the current request comes from.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.SuperCookie">
            <summary>
            Used to store the user name of the last visitor.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.SsoTokenCrossDomain">
            <summary>
            Used to store sso token, so it can be used to login user.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.Auth">
            <summary>
            Used to store the authentication ticket.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.AuthLegacy">
            <summary>
            Used to store the legacy Microsoft.Owin authentication ticket./>.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.DeviceId">
            <summary>
            Used to store DeviceId passed from device.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.PostLoginValues">
            <summary>
            Used to store PostLoginValues.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.DisableHtmlInjection">
            <summary>
            Used to store the authentication ticket.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.ProgressiveWebApp">
            <summary>
            Indicates if the application is opened as Progressive Web App.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.Lang">
            <summary>
            Language route value.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.UnsupportedBrowserLanguage">
            <summary>
            Indicates if the browser language is not supported.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.ShopId">
            <summary>
            Used to store the retail's Shop ID from the query string context.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.TerminalId">
            <summary>
            Used to store the retail's Terminal ID from the query string context.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.IsLanguageChanged">
            <summary>
            Indicates if the language is changed.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.LoginAttempts">
            <summary>
            Used to store the user's login attempts.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieConstants.OptanonGroups">
            <summary>
            The cookie banner that indicates the user has closed the alert box.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Cookies.CookieLocationOptions">
            <summary>Specifies location where browser should store the cookie.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.CookieLocationOptions.Domain">
            <summary>Gets or sets a domain of a cookie. Default: Label.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.CookieLocationOptions.Path">
            <summary>Gets or sets a path of a cookie. Default: '/'.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.CookieLocationOptions.SpecialDomainValue">
            <summary>Gets or sets a special domain when CookieDomain is Special.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Cookies.CookieLocationOptions.ToString">
            <summary>Gets a string with all options.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Cookies.CookieSetOptions">
            <summary>Specifies all details of a cookie when setting it.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.CookieSetOptions.Expires">
            <summary>Gets or sets an absolute expiration of a cookie. If no expiration is set then it's a session cookie.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.CookieSetOptions.MaxAge">
            <summary>Gets or sets a relative expiration of a cookie. It must be greater than zero. If no expiration is set then it's a session cookie.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.CookieSetOptions.HttpOnly">
            <summary>Gets or sets a flag to forbid JavaScript from accessing a cookie.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.CookieSetOptions.SameSite">
            <summary>Gets or sets a flag to indicate when a cookie should be sent with cross-origin requests. Default: None.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Cookies.CookieSetOptions.ToString">
            <summary>Gets a string with all options.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Cookies.CookieDomain">
            <summary>Indicates what domain should be used for a cookie. Other domains don't make sense because browser would discard such cookie as unrelated to current request URL.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieDomain.Label">
            <summary>Umbrella domain of current label e.g. '.bwin.com'.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieDomain.Full">
            <summary>Full domain of this app e.g. 'qa2.sports.bwin.com'.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.CookieDomain.Special">
            <summary> Special domain for extraordinary setups.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Cookies.SameSiteFlag">
            <summary>Used to set the SameSite field on response cookies to indicate if those cookie should be included by the client on future "same-site" or "cross-site" requests.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.SameSiteFlag.Unspecified">
            <summary>No SameSite field will be set, the client should follow its default cookie policy.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.SameSiteFlag.None">
            <summary>Indicates the client should disable same-site restrictions.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.SameSiteFlag.Lax">
            <summary>Indicates the client should send the cookie with "same-site" requests, and with "cross-site" top-level navigations.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Cookies.SameSiteFlag.Strict">
            <summary>Indicates the client should only send the cookie with "same-site" requests.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Cookies.IDynaConCookieConfiguration.DefaultSameSiteMode">
            <summary>
            Criticality: Security.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Cookies.ICookieHandler">
            <summary>
            Handler for working with cookies under common label domain and other options according to <see cref="T:Frontend.Vanilla.Features.Cookies.ICookieConfiguration" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Cookies.ICookieHandler.GetValue(System.String)">
            <summary>Gets the value of particular cookie from current HTTP request. <c>Null</c> if the cookie doesn't exist.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Cookies.ICookieHandler.Set(System.String,System.String,Frontend.Vanilla.Features.Cookies.CookieSetOptions)">
            <summary>Sets particular cookie to current HTTP response.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Cookies.ICookieHandler.Delete(System.String,Frontend.Vanilla.Features.Cookies.CookieLocationOptions)">
            <summary>Deletes particular cookie by setting it to current HTTP response to expire on the client.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DeviceAtlas.DeviceAtlasHealthCheck">
            <summary>
            Checks DeviceAtlas to be operational.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DeviceAtlas.DeviceAtlasHealthCheck.#ctor(Frontend.Vanilla.Features.DeviceAtlas.IDeviceAtlasService)">
            <summary>
            Checks DeviceAtlas to be operational.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DeviceAtlas.IDeviceAtlasService.Get">
            <summary>Temporary added until dynacon providers are async.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.DiagnosticsResponseHeaderMiddleware">
            <summary>
            Adds diagnostics response header.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Diagnostics.DiagnosticsResponseHeaderMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Frontend.Vanilla.Features.Diagnostics.SiteVersion.IDiagnosticsComponentProvider)">
            <summary>
            Adds diagnostics response header.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.IGlobalJavascriptErrorHandlerConfiguration">
            <summary>
            Configuration of the global Javascript error handler.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.HealthPages.Api.IDiagnosticApiControllerExecutor">
            <summary>
            Common logic for diagnostic API controllers.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Diagnostics.HealthPages.Api.DiagnosticApiRoutesProvider.MultiplyByOptionalParameters(System.String)">
            <summary>
            Optional parameters (trailing question mark) are not allowed on legacy ASP.NET.
            So instead of "/api/config/{feature?}/{key?}" this multiplies it to
            ["/api/config", "/api/config/{feature}", "/api/config/{feature}/{key}"].
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.HealthPages.Api.ServerUtils.ClearMemoryCacheDiagnosticController">
            <summary>
            Clears memory cache.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Diagnostics.HealthPages.Api.ServerUtils.ClearMemoryCacheDiagnosticController.#ctor(Frontend.Vanilla.Core.Configuration.IEnvironmentProvider,Microsoft.Extensions.Caching.Memory.MemoryCache)">
            <summary>
            Clears memory cache.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.HealthPages.Api.ServerUtils.IServerIPProvider">
            <summary>
            Retrieves server IP address for diagnostic purposes.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.HealthPages.Api.TracingUtils">
            <summary>
            Utilities used with open telemetry tracing.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Diagnostics.HealthPages.Api.TracingUtils.TraceServiceName">
            <summary>
            Tracing service name in jager will be mono-trace-{product}.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Diagnostics.HealthPages.Api.TracingUtils.TraceSpanActivity">
            <summary>
            Tracing span activity name for recording traces from refreshing health/log page that will be rec-{product}.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.HealthPages.AssetsHandling.IAssemblyFileProvider">
            <summary>
            Returns contents of file embedded in the assembly based on its original relative path.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.HealthPages.AssetsHandling.HealthAssetsMiddleware">
            <summary>
            Serves static assets of health SPA. They are embedded in an assembly.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.Health.IHealthCheckExecutor">
            <summary>
            Executes health checks and returns a summary report.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.Health.HealthCheckSummary">
            <summary>
            All summary information regarding health check execution.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.Health.HealthCheckValidationTask">
            <summary>
            Validates properties and dependencies of registered health checks.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Diagnostics.Health.HealthCheckValidationTask.#ctor(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Core.Diagnostics.Health.IHealthCheck},System.Collections.Generic.IEnumerable{Frontend.Vanilla.Core.Configuration.IConfigurationInfo})">
            <summary>
            Validates properties and dependencies of registered health checks.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.Health.IHealthReportConfiguration">
            <summary>
            Configuration of health checks execution.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.ServerTiming.ServerTimingMiddleware">
            <summary>
            Outputs total duration of the app itself.
            Useful to compare from client-side how much overhead is added by web server, CDN, network etc.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Diagnostics.ServerTiming.ServerTimingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Frontend.Vanilla.Core.Time.IClock)">
            <summary>
            Outputs total duration of the app itself.
            Useful to compare from client-side how much overhead is added by web server, CDN, network etc.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.SiteCheck.SiteCheckMiddleware">
            <summary>
            Returns static CHECK_OK to indicate that website is up and running.
            This is minimal check, for full operability there is /health.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Diagnostics.SiteCheck.SiteCheckMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Returns static CHECK_OK to indicate that website is up and running.
            This is minimal check, for full operability there is /health.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.SiteVersionXml.SiteVersionXmlMiddleware">
            <summary>
            Returns content of srvadm/version.xml file.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Diagnostics.SiteVersionXml.SiteVersionXmlMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Returns content of srvadm/version.xml file.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.SiteVersion.IDiagnosticsComponentProvider">
            <summary>
            Used to display component info on site/version and in kibana logs.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Diagnostics.SiteVersion.IDiagnosticsComponentProvider.Name">
            <summary>Returns name.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.Tracing.ITracingIdsProvider">
            <summary>
            Generates and provides tracing IDs according to Trace Context specification https://www.w3.org/TR/trace-context/.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.Tracing.WebRecordingTrace">
            <summary>
            Records trace information for Vanilla web apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Diagnostics.Tracing.WebRecordingTrace.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Records trace information for Vanilla web apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Diagnostics.Tracing.WebTraceRecorder">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.Core.Diagnostics.ITraceRecorder" /> for Vanilla web apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Diagnostics.Tracing.WebTraceRecorder.#ctor(Microsoft.Extensions.Logging.ILogger{Frontend.Vanilla.Features.Diagnostics.Tracing.WebTraceRecorder},Microsoft.AspNetCore.Http.IHttpContextAccessor,Frontend.Vanilla.Features.Cookies.ICookieHandler,Frontend.Vanilla.Core.Net.IInternalRequestEvaluator,Frontend.Vanilla.Core.Time.IClock)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.Core.Diagnostics.ITraceRecorder" /> for Vanilla web apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DomainSpecificActions.Configuration.IDsaConfiguration">
            <summary>
            Configuration of domain specific actions executed globally.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DomainSpecificActions.Configuration.DsaConfigurationDto">
            <summary>
            Config DTO which needs to get DSL placeholders replaced and action parameters deserialized.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DomainSpecificActions.Configuration.DsaConfigurationFactory">
            <summary>
            Creates <see cref="T:Frontend.Vanilla.Features.DomainSpecificActions.Configuration.IDsaConfiguration" /> from DTO from Dynacon.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DomainSpecificActions.Configuration.DsaConfigurationFactory.#ctor(System.Func{Frontend.Vanilla.DomainSpecificLanguage.IDslCompiler},Frontend.Vanilla.Features.DomainSpecificActions.Configuration.IDsaRegionSelector,Frontend.Vanilla.Features.DomainSpecificActions.Configuration.IDsaPlaceholderReplacer)">
            <summary>
            Creates <see cref="T:Frontend.Vanilla.Features.DomainSpecificActions.Configuration.IDsaConfiguration" /> from DTO from Dynacon.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DomainSpecificActions.Configuration.IDsaPlaceholderReplacer">
            <summary>
            Replaces configured placeholders in DSL action string.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DomainSpecificActions.Configuration.IDsaRegionSelector">
            <summary>
            Selects only request region from DSL action string and removes other regions.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DomainSpecificLanguage.IDslConfiguration">
            <summary>
            Configuration of domain specific actions executed globally.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.AppDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IAppDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.AppDslProvider.#ctor(Frontend.Vanilla.Core.Configuration.IEnvironmentProvider,Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.ICurrentProductResolver,Frontend.Vanilla.Features.Globalization.ILanguageService,Microsoft.AspNetCore.Http.IHttpContextAccessor,Frontend.Vanilla.Features.Theming.IThemeResolver,Frontend.Vanilla.ServiceClients.Services.Common.IPosApiCommonService)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IAppDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.AuthenticationDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IAuthenticationDslProvider" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.AuthenticationDslProvider.#ctor(Frontend.Vanilla.Features.Authentication.IWebAuthenticationService)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IAuthenticationDslProvider" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.BonusAwardDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IBonusAwardDslProvider" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.BonusAwardDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Services.Promohub.IPosApiPromohubServiceInternal,Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IBonusAwardDslProvider" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.ConnectedAccountsDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IConnectedAccountsDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.ConnectedAccountsDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor,Frontend.Vanilla.ServiceClients.Services.Account.IPosApiAccountServiceInternal)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IConnectedAccountsDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.CookiesDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ICookiesDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.CookiesDslProvider.#ctor(Frontend.Vanilla.Features.Cookies.ICookieHandler,Frontend.Vanilla.Features.Cookies.ICookieConfiguration,Microsoft.AspNetCore.Http.IHttpContextAccessor,Frontend.Vanilla.Features.DslProviders.Time.IDslTimeConverter,Frontend.Vanilla.Features.SuspiciousRequest.ISuspiciousRequestConfiguration,Frontend.Vanilla.Features.Cookies.IDynaConCookieConfiguration)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ICookiesDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.CounterDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ICounterDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.CounterDslProvider.#ctor(Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ICookiesDslProvider,Frontend.Vanilla.Features.DslProviders.Time.IDslTimeConverter,Frontend.Vanilla.Core.Time.IClock)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ICounterDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.CurfewStatusDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ICurfewStatusDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.CurfewStatusDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor,Frontend.Vanilla.ServiceClients.Services.Wallet.IPosApiWalletServiceInternal)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ICurfewStatusDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.GeoIpDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IGeoIPDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.GeoIpDslProvider.#ctor(Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IClaimsDslProvider,System.Func{Frontend.Vanilla.ServiceClients.Services.Common.Countries.ICountriesServiceClient})">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IGeoIPDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.LastKnownProductDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ILastKnownProductDslProvider" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.LastKnownProductDslProvider.#ctor(Frontend.Vanilla.Features.Cookies.ICookieHandler,System.Func{Frontend.Vanilla.Content.IContentService},Microsoft.Extensions.Logging.ILogger{Frontend.Vanilla.Features.DslProviders.LastKnownProductDslProvider})">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ILastKnownProductDslProvider" />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.DslProviders.LastKnownProduct.PlatformProductId">
            <summary>
            Remove nullable when everyone is on van11.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.DslProviders.LastKnownProduct.Previous">
            <summary>
            Remove nullable when everyone is on van11.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.ListDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IListDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.ListDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Services.Common.IPosApiCommonServiceInternal)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IListDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.NativeApplicationDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.INativeApplicationDslProvider" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.NativeApplicationDslProvider.#ctor(Frontend.Vanilla.Features.NativeApp.INativeAppService)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.INativeApplicationDslProvider" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.OfferDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IOfferDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.OfferDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Services.Notification.IPosApiNotificationServiceInternal,Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IOfferDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.QueryStringDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IQueryStringDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.QueryStringDslProvider.#ctor(Frontend.Vanilla.Features.WebUtilities.IBrowserUrlProvider)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IQueryStringDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.ReferredFriendsDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IReferredFriendsDslProvider" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.ReferredFriendsDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor,Frontend.Vanilla.ServiceClients.Services.Crm.IPosApiCrmServiceInternal)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IReferredFriendsDslProvider" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.RegistrationDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IRegistrationDslProvider" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.RegistrationDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor,Frontend.Vanilla.ServiceClients.Services.Account.IPosApiAccountServiceInternal,Frontend.Vanilla.Core.Time.IClock)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IRegistrationDslProvider" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.RequestDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IRequestDslProvider" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.RequestDslProvider.#ctor(Frontend.Vanilla.Features.WebUtilities.IBrowserUrlProvider,Frontend.Vanilla.Core.Net.IInternalRequestEvaluator,Frontend.Vanilla.Features.EntryWeb.Prerender.IPrerenderDetector,Frontend.Vanilla.Core.Net.IClientIPResolver,Frontend.Vanilla.Features.DslProviders.IRequestDslRedirector,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IRequestDslProvider" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.RequestHeadersDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IRequestHeadersDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.RequestHeadersDslProvider.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IRequestHeadersDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.ShopDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IShopDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.ShopDslProvider.#ctor(System.Func{Frontend.Vanilla.ServiceClients.Services.Common.IPosApiCommonServiceInternal},Frontend.Vanilla.Features.Cookies.ICookieHandler)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IShopDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.TerminalDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ITerminalDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.TerminalDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Services.Common.IPosApiCommonServiceInternal,Frontend.Vanilla.Features.Cookies.ICookieHandler,Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ITerminalDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.Time.IDslTimeConverter">
            <summary>
            Converts .NET DateTime and TimeSpan to DSL time which is UNIX time for easier comparisons.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.TourneyTokenBalanceDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ITourneyTokenBalanceDslProvider" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.TourneyTokenBalanceDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor,Frontend.Vanilla.ServiceClients.Services.Wallet.IPosApiWalletServiceInternal)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.ITourneyTokenBalanceDslProvider" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.UserDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IUserDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.UserDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor,Frontend.Vanilla.Features.Visitor.ILastVisitorCookie,Frontend.Vanilla.Features.Visitor.IVisitorSettingsManager,Frontend.Vanilla.ServiceClients.Services.Account.IPosApiAccountServiceInternal,Frontend.Vanilla.ServiceClients.Services.Crm.IPosApiCrmServiceInternal,Frontend.Vanilla.ServiceClients.Services.Authentication.IPosApiAuthenticationServiceInternal,Frontend.Vanilla.Features.Cookies.ICookieJsonHandler,Frontend.Vanilla.Features.TrackerId.ITrackerIdResolver,Frontend.Vanilla.Core.Time.IClock,Frontend.Vanilla.Features.Globalization.IDateTimeCultureBasedFormatter)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IUserDslProvider" /> for ASP.NET 4 apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.UserScrubDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IUserScrubDslProvider" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.UserScrubDslProvider.#ctor(Frontend.Vanilla.Features.UserScrub.IUserScrubService)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IUserScrubDslProvider" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DslProviders.UserSummaryDslProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IUserSummaryDslProvider" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DslProviders.UserSummaryDslProvider.#ctor(Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor,Frontend.Vanilla.ServiceClients.Services.Wallet.IPosApiWalletServiceInternal)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IUserSummaryDslProvider" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.DynaConVariationContextProviderAdapter">
            <summary>
            Executes common logic and parsing of DynaCon variation context value specific for web app.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.DynaConVariationContextProviderAdapter.#ctor(Frontend.Vanilla.Features.DynaConVariationContext.IWebDynaConVariationContextProvider,Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Logging.ILogger{Frontend.Vanilla.Features.DynaConVariationContext.DynaConVariationContextProviderAdapter})">
            <summary>
            Executes common logic and parsing of DynaCon variation context value specific for web app.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.IWebDynaConVariationContextProvider">
            <summary>
            Provides raw value for <see cref="T:Frontend.Vanilla.Configuration.DynaCon.Context.IDynaConVariationContextProvider" /> for web app.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.AppContextDynaConProvider">
            <summary>
            Provides app specific context data for config variation context.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.Providers.AppContextDynaConProvider.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Provides app specific context data for config variation context.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.CountryDynaConProvider">
            <summary>
            Provides country based on Geo IP claims for config variation context.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.Providers.CountryDynaConProvider.#ctor(Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IClaimsDslProvider)">
            <summary>
            Provides country based on Geo IP claims for config variation context.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.CultureDynaConProvider">
            <summary>
            Provides culture based on current thread for config variation context.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.DeviceTypeDynaConProvider">
            <summary>
            Provides device type from DeviceAtlas for config variation context.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.Providers.DeviceTypeDynaConProvider.#ctor(Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IDeviceDslProvider)">
            <summary>
            Provides device type from DeviceAtlas for config variation context.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.HeaderProductDynaconProvider">
            <summary>
            Provides information about product the request is originating from.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.Providers.HeaderProductDynaconProvider.#ctor(Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.IDynaConParameterExtractor,Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.ICurrentProductResolver)">
            <summary>
            Provides information about product the request is originating from.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.JurisdictionDynaConProvider">
            <summary>
            Provides user's jurisdiction for config variation context.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.Providers.JurisdictionDynaConProvider.#ctor(Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IClaimsDslProvider)">
            <summary>
            Provides user's jurisdiction for config variation context.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.NativeAppDynaConProvider">
            <summary>
            Provides native app name from cookie/query for config variation context.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.Providers.NativeAppDynaConProvider.#ctor(Frontend.Vanilla.Features.Cookies.ICookieHandler,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Provides native app name from cookie/query for config variation context.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.OperatingSystemDynaConProvider">
            <summary>
            Provides device OS name from DeviceAtlas for config variation context.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.Providers.OperatingSystemDynaConProvider.#ctor(Frontend.Vanilla.Features.DeviceAtlas.IDeviceAtlasService)">
            <summary>
            Provides device OS name from DeviceAtlas for config variation context.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.RequestDynaConProvider">
            <summary>
            Provides information if request is internal or external.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.Providers.RequestDynaConProvider.#ctor(Frontend.Vanilla.Core.Net.IInternalRequestEvaluator)">
            <summary>
            Provides information if request is internal or external.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.UserAgentDynaConProvider">
            <summary>
            Provides specific user agents from request for config variation context.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.Providers.UserAgentDynaConProvider.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Frontend.Vanilla.Features.DeviceAtlas.IDeviceAtlasService)">
            <summary>
            Provides specific user agents from request for config variation context.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.DynaConVariationContext.Providers.UserDynaConProvider">
            <summary>
            Provides user specific states for config variation context.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.DynaConVariationContext.Providers.UserDynaConProvider.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Frontend.Vanilla.Features.Visitor.ILastVisitorCookie)">
            <summary>
            Provides user specific states for config variation context.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.EntryWeb.DataLayer.TagManagers.ITagManager">
            <summary>
            Renders a Tag Manager (a script and optionally a configuration).
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration">
            <summary>
            The configuration model used for tracking.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.AbTestingIsEnabled">
            <summary>
            <value>True</value> if the A/B testing is enabled, else <value>false</value>.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.AbTestingScriptSource">
            <summary>
            The A/B testing script source.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.IsGoogleTagManagerEnabled">
            <summary>
            Gets the property for enabling Google Tag Manager tracking.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.GoogleTagManagerContainerId">
            <summary>
            Gets the Google Tag Manager Container id.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.DataLayerName">
            <summary>
            Gets the name of the Data layer. By convention, the 'dataLayer' value should be used but others are acceptable as well.
            </summary>
            <seealso href="https://developers.google.com/tag-manager/devguide#renaming"/>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.CrossDomainRegExG4">
            <summary>
            Gets the list of domains to apply cross domain tracking for Google Analytics 3 or 4 from navigation service.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.NotTrackedQueryStrings">
            <summary>
            Gets the list of query strings that must be excluded from tracking.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.EventCallbackTimeout">
            <summary>
            Gets the timeout used to wait for the callback called by a tag manager after an event was pushed.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.DataLayerUpdateTimeout">
            <summary>
            Gets the timeout used to delay updating of the data layer. Should be less than EventCallbackTimeout.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.PageViewDataProviderTimeout">
            <summary>
            Gets the timeout for page view data providers.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.UseClientInjection">
            <summary>
            Tag manager Scripts will be injected client side if supported by the <see cref="T:Frontend.Vanilla.Features.EntryWeb.DataLayer.TagManagers.ITagManager"/>.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.EntryWeb.DataLayer.ITrackingConfiguration.ClientInjectionExcludes">
            <summary>
            List of tag manager names to be excluded from client side injection
            so that consumers can implement custom loading behavior.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.EntryWeb.Prerender.IPrerenderConfiguration">
            <summary>
            Configuration for prerendering web pages for crawlers using Prerender.io service.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.EntryWeb.Prerender.IPrerenderDetector">
            <summary>
            See <see cref="P:Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IRequestDslProvider.IsPrerendered" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.EntryWeb.Prerender.PrerenderHealthCheck">
            <summary>
            Checks connectivity of <see cref="T:Frontend.Vanilla.Features.EntryWeb.Prerender.IPrerenderService" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.EntryWeb.Prerender.PrerenderHealthCheck.#ctor(Frontend.Vanilla.Features.EntryWeb.Prerender.IPrerenderService,System.Func{Frontend.Vanilla.Features.EntryWeb.Prerender.IPrerenderConfiguration},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Checks connectivity of <see cref="T:Frontend.Vanilla.Features.EntryWeb.Prerender.IPrerenderService" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.EntryWeb.Prerender.IPrerenderService">
            <summary>
                Represents Prerender.io web service usually hosted at <see href="https://service.prerender.io/" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Games.IGamesMetadataService">
            <summary>
            Provides games metadata information by fetching them from casino endpoint. TODO: get rid of this.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Games.IGamesMetadataService.GetCasinoGames(System.Collections.Generic.IEnumerable{System.String},Microsoft.AspNetCore.Http.IHeaderDictionary)">
            <summary>
            Provides games metadata information by fetching them from casino endpoint. TODO: get rid of this.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Geolocation.GeolocationPosition">
            <summary>Position resolved by Geolocation browser API including location mapped by platform (via PosAPI).</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Geolocation.GeolocationPosition.Timestamp">
            <summary>Gets the time when <see cref="P:Frontend.Vanilla.Features.Geolocation.GeolocationPosition.Coords" /> were obtained.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Geolocation.GeolocationPosition.Coords">
            <summary>Gets geolocation coordinates.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Geolocation.GeolocationPosition.MappedLocation">
            <summary>Gets location mapped to <see cref="P:Frontend.Vanilla.Features.Geolocation.GeolocationPosition.Coords" /> on the backend.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Geolocation.GeolocationPosition.#ctor(Frontend.Vanilla.Core.System.UtcDateTime,Frontend.Vanilla.ServiceClients.Services.GeoLocation.MappedLocations.GeolocationCoordinates,Frontend.Vanilla.ServiceClients.Services.GeoLocation.MappedLocations.MappedGeolocation)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Geolocation.IGeolocationService">
            <summary>Provides current geolocation position.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Geolocation.IGeolocationService.CurrentPosition">
            <summary>Gets current position. Returns <see langword="null" /> if not available yet or it's disabled by user in browser or the feature is disabled.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.Configuration.ICultureOverridesMerger">
            <summary>
            Merges different culture overrides (JSON objects) from a CultureInfo hierachy chain (e.g. "", "en", "en-US").
            It does it in a top-down way so that the most specific culture has the highest priority.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.Configuration.ICultureOverridesMerger.MergeOverridesChain(System.Globalization.CultureInfo,System.Collections.Generic.IReadOnlyDictionary{System.String,Newtonsoft.Json.Linq.JObject})">
            <summary>
            Returns merged culture overrides for a given culture.
            </summary>
            <param name="culture">The CultureInfo instance to use to lookup the culture overrides dictionary.</param>
            <param name="cultureOverrides">Dictionary of culture overrides per culture.</param>
            <returns>Merged culture overrides.</returns>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.Configuration.ICultureSerializer">
            <summary>
            The CultureInfo (de)serializer that populates deserialized culture override (JSON object) onto
            provided CultureInfo instance.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.Configuration.ICultureSerializer.DeserializeAndPopulateOverride(System.Globalization.CultureInfo,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Deserialize the culture override and populate its properties onto provided culture object.
            </summary>
            <param name="culture">The CultureInfo instance which the override will be applied to.</param>
            <param name="cultureOverride">JSON object containing culture override.</param>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.Configuration.CultureInfoMergingConverter">
            <summary>
            This class deserializes the JSON and then populates its properties onto the existing CultureInfo
            object instance provided in the constructor. The trick is to not let the Newtonsoft library
            to instantiate the CultureInfo by itself but rather inheriting from the CustomCreationConverter
            class that lets us provide our own (already existing) instance instead.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.Configuration.CultureInfoMergingConverter.#ctor(System.Globalization.CultureInfo)">
            <summary>
            This class deserializes the JSON and then populates its properties onto the existing CultureInfo
            object instance provided in the constructor. The trick is to not let the Newtonsoft library
            to instantiate the CultureInfo by itself but rather inheriting from the CustomCreationConverter
            class that lets us provide our own (already existing) instance instead.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.Configuration.IGlobalizationConfiguration">
            <summary>
            Globalization configuration for web application.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.Configuration.GlobalizationConfigurationDto.CultureOverrides">
            <summary>
            The collection of overrides of the CultureInfo as a dictionary of culture names and override JSONs.
            The override defined for a culture and all the overrides defined for its parents (if any) will be
            merged together with the most specific culture having the highest priority.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.Configuration.GlobalizationConfigurationFactory">
            <summary>
            Creates config from DTO and fully validates it.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.Configuration.GlobalizationConfigurationFactory.#ctor(Frontend.Vanilla.Features.Globalization.Configuration.ILanguageFactory)">
            <summary>
            Creates config from DTO and fully validates it.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.Configuration.ILanguageFactory">
            <summary>
            Creates and validates single language based on given culture name and culture mapping.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.Diagnostics.PosApiSupportedLanguagesHealthCheck">
            <summary>
            See Metadata.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.Diagnostics.PosApiSupportedLanguagesHealthCheck.#ctor(Frontend.Vanilla.ServiceClients.Services.Common.Languages.ILanguagesServiceClient,Frontend.Vanilla.Features.Globalization.Configuration.IGlobalizationConfiguration)">
            <summary>
            See Metadata.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.ILanguageService">
            <summary>
            Resolves allowed language from the configuration according to current context (HTTP request, user) and given criteria.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.ILanguageService.Current">
            <summary>Gets a language from <see cref="P:Frontend.Vanilla.Features.Globalization.ILanguageService.Allowed" /> corresponding to <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />. Throws if nothing found.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.ILanguageService.Default">
            <summary>Gets the default language for this web app.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.ILanguageService.UseBrowserLanguage">
            <summary>Gets whether to use browser language for this web app.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.ILanguageService.BrowserPreferredCulture">
            <summary>Gets the browser default culture for this web app without checking against Allowed languages.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.ILanguageService.Allowed">
            <summary>Gets allowed languages for current context (user, public/internal access).</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.ILanguageService.FindByName(System.String)">
            <summary>Finds a language from <see cref="P:Frontend.Vanilla.Features.Globalization.ILanguageService.Allowed" /> by its name.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.ILanguageService.FindByUserClaims">
            <summary>
            Finds the language corresponding to user's claims.
            Returns null and logs error if there is no/invalid claim or it doesn't correspond to allowed language.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.LanguageInfo">
            <summary>Contains language related data to run web application.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.LanguageInfo.Culture">
            <summary>Gets the .NET culture used to create this object.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.LanguageInfo.NativeName">
            <summary>Gets the native language name used in language switcher. It can't contain multiple subsequent white-spaces in order to be usable in HTML.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.LanguageInfo.RouteValue">
            <summary>Gets the token used for ASP.NET and Angular routing as a first segment in URLs. It can contain only lower-case letters, digits, or hyphens in order to produce nice URLs.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.LanguageInfo.SitecoreContentLanguage">
            <summary>Gets the token identifying particular Sitecore content translation.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.LanguageInfo.SitecoreContentDefaultLanguage">
            <summary>Gets the token identifying default/fallback Sitecore content translation.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.LanguageInfo.HtmlLangAttribute">
            <summary>Gets the value to be used for 'lang' attribute on &lt;html&gt; element.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Globalization.LanguageInfo.AngularLocale">
            <summary>Gets the value to be used as LOCALE_ID for angular on the frontend.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.LanguageInfo.#ctor(System.Globalization.CultureInfo,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.LanguageInfo.ToString">
            <summary>Returns <see cref="P:Frontend.Vanilla.Features.Globalization.LanguageInfo.Culture" /> name. This allows easy equality comparisons using <see cref="T:Frontend.Vanilla.Core.Patterns.ToStringEquatable`1" />.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.LanguageResolvers.IAllowedLanguagesResolver">
            <summary>
            Implements <see cref="P:Frontend.Vanilla.Features.Globalization.ILanguageService.Allowed" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.LanguageResolvers.IBrowserLanguageResolver">
            <summary>
            Tries to resolve allowed language corresponding to user's browser settings.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.LanguageResolvers.ICurrentLanguageResolver">
            <summary>
            Implementation of <see cref="P:Frontend.Vanilla.Features.Globalization.ILanguageService.Current" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.LanguageResolvers.IHiddenLanguagesResolver">
            <summary>
            Resolves languages that should be hidden for current user
            that means all configured hidden languages except language set in his claims.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.LanguageResolvers.IInternalLanguagesResolver">
            <summary>
            Resolves internal language for current context which means:
            returns all configured internal languages if the request is internal - made from comparny network.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.LanguageResolvers.ILanguageByNameResolver">
            <summary>
            Finds a language by name within given ones.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.LanguageResolvers.ILanguageByUserClaimsResolver">
            <summary>
            Implements <see cref="M:Frontend.Vanilla.Features.Globalization.ILanguageService.FindByUserClaims" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.LanguageResolvers.IRobotLanguageResolver">
            <summary>
            Tries to resolve Default language when request comes from a bot.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.LanguageResolvers.RobotLanguageResolver.Resolve">
            <summary>We want search engine (with configured lang) to index default lang asap when it comes freshly to root URL.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.LanguageResolvers.IVisitorSettingsLanguageResolver">
            <summary>
            Tries to resolve user's preferred language first from the cookies if he already visited our website. Then from his browser settings.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.Middlewares.DefaultLanguageMiddleware">
            <summary>
            Sets up default language before authentication. Then we evaluate culture for particular user (hidden languages are user-specific).
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.Middlewares.DefaultLanguageMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Frontend.Vanilla.Features.Globalization.Configuration.IGlobalizationConfiguration)">
            <summary>
            Sets up default language before authentication. Then we evaluate culture for particular user (hidden languages are user-specific).
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.Middlewares.LanguageResolutionMiddleware">
            <summary>
            Resolves language for the HTTP request and based on it either sets it up, rediretcs or responds with not-found.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.Middlewares.LanguageResolutionMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Frontend.Vanilla.Features.Globalization.Configuration.IGlobalizationConfiguration,Frontend.Vanilla.Features.Globalization.LanguageResolvers.ICultureUrlTokenResolver,Frontend.Vanilla.Features.Globalization.LanguageResolvers.IUserPreferredLanguageResolver,Frontend.Vanilla.Features.Globalization.LanguageResolvers.IAllowedLanguagesResolver,Frontend.Vanilla.Features.WebUtilities.IEndpointMetadata,Frontend.Vanilla.Core.Net.IInternalRequestEvaluator)">
            <summary>
            Resolves language for the HTTP request and based on it either sets it up, rediretcs or responds with not-found.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Globalization.Middlewares.VisitorSettingsCultureMiddleware">
            <summary>
            Sets up language for particular user (hidden languages are user-specific) based on HTTP request.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Globalization.Middlewares.VisitorSettingsCultureMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Frontend.Vanilla.Features.Visitor.IVisitorSettingsManager,Frontend.Vanilla.Features.WebUtilities.IEndpointMetadata,Frontend.Vanilla.Features.Cookies.ICookieHandler)">
            <summary>
            Sets up language for particular user (hidden languages are user-specific) based on HTTP request.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Hosting.IDataCenterResolver">
            <summary>Provides data center hosting details.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Hosting.IDataCenterResolver.Site">
            <summary>Site.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Hosting.IDataCenterResolver.Group">
            <summary>Group.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Hosting.HostingPlatform">
            <summary>Represents hosting platforms.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Hosting.HostingPlatform.Windows">
            <summary>Windows.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Hosting.HostingPlatform.EKS">
            <summary>Amazon Elastic Kubernetes Service.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Hosting.HostingPlatform.AKS">
            <summary>Azure Kubernetes Service.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Hosting.IHostingPlatformResolver">
            <summary>Provides information about hosting platform of running application.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Hosting.IHostingPlatformResolver.Current">
            <summary>Current value.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Inbox.Models.InboxMessagesRequest">
            <summary>
            Exposed only because it is used in inbox controller.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Inbox.Models.InboxMessagesRequest.Ids">
            <summary>
            Exposed only because it is used in inbox controller.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Inbox.Models.MessagesStatus">
            <summary>
            Exposed only because it is used in inbox controller.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Inbox.Models.MessagesStatus.Ids">
            <summary>
            Exposed only because it is used in inbox controller.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Inbox.Models.MessagesStatus.Status">
            <summary>
            Exposed only because it is used in inbox controller.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Inbox.Models.RemoveMessageModel">
            <summary>
            Exposed only because it is used in inbox controller.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Inbox.Models.RemoveMessageModel.Ids">
            <summary>
            Exposed only because it is used in inbox controller.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Inbox.Models.StatusType">
            <summary>
            Exposed only because it is used in inbox controller.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Inbox.Models.StatusType.NEW">
            <summary>
            Exposed only because it is used in inbox controller.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Inbox.Models.StatusType.ALL">
            <summary>
            Exposed only because it is used in inbox controller.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Ioc.IBootTaskExecutor">
            <summary>
            Manages the boot task execution step of the Web application bootstrap process,
            by executing all registered boot tasks.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Ioc.IBootTask">
            <summary>
            Represents tasks that should run as part of a Web application bootstrapping
            sequence (after the dependency injection container is constructed and populated,
            but before any application logic runs).
            For convenience see <see cref="T:Frontend.Vanilla.Features.Ioc.LambdaBootTask" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Ioc.IBootTask.ExecuteAsync">
            <summary>
            Executes the boot task as part of the application bootstrap sequence.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Ioc.LambdaBootTask">
            <summary>
            Convenient implementation of <see cref="T:Frontend.Vanilla.Features.Ioc.IBootTask" /> where you can directly provide lambda expression to be executed.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Ioc.LambdaBootTask.#ctor(System.Func{System.Threading.Tasks.Task})">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Ioc.ReferencedAssemblies">
            <summary>
            List of referenced assemblies.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Ioc.ReferencedAssemblies.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            List of referenced assemblies.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions">
            <summary>
            Provides extension methods for <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions.WithMessages(Microsoft.AspNetCore.Mvc.IActionResult,System.Collections.Generic.IEnumerable{Frontend.Vanilla.Features.Messages.ApiMessage})">
            <summary>
            Adds multiple messages to the response.
            </summary>
            <param name="actionResult"></param>
            <param name="messages"></param>
            <returns>Extended <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions.WithTechnicalErrorMessage(Microsoft.AspNetCore.Mvc.IActionResult,System.String)">
            <summary>
            Adds a technical error message to the response.
            </summary>
            <param name="actionResult">The result to be extended.</param>
            <param name="scope">Scope of the message.</param>
            <returns>Extended <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions.WithKeyValue(Microsoft.AspNetCore.Mvc.IActionResult,System.String,System.String)">
            <summary>
            Adds a key value message to the response.
            </summary>
            <param name="actionResult">The result to be extended.</param>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
            <returns>Extended <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions.WithValues(Microsoft.AspNetCore.Mvc.IActionResult,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Adds <c>values</c> property to the response.
            </summary>
            <param name="actionResult">The result to be extended.</param>
            <param name="values">The values.</param>
            <returns>Extended <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions.WithErrorMessage(Microsoft.AspNetCore.Mvc.IActionResult,System.String,Frontend.Vanilla.Features.Messages.ApiMessageLifetime,System.String)">
            <summary>
            Adds an error message to the response.
            </summary>
            <param name="actionResult">The result to be extended.</param>
            <param name="message">The error message.</param>
            <param name="lifetime">Lifetime of the error message.</param>
            <param name="scope">Scope of the message.</param>
            <returns>Extended <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions.WithMessage(Microsoft.AspNetCore.Mvc.IActionResult,Frontend.Vanilla.Features.Messages.MessageType,System.String,Frontend.Vanilla.Features.Messages.ApiMessageLifetime,System.String)">
            <summary>
            Adds an message to the response.
            </summary>
            <param name="actionResult">The result to be extended.</param>
            <param name="type">The message type.</param>
            <param name="message">The error message.</param>
            <param name="lifetime">Lifetime of the error message.</param>
            <param name="scope">Scope of the message.</param>
            <returns>Extended <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions.WithInfoMessage(Microsoft.AspNetCore.Mvc.IActionResult,System.String,Frontend.Vanilla.Features.Messages.ApiMessageLifetime,System.String)">
            <summary>
            Adds an info message to the response.
            </summary>
            <param name="actionResult">The result to be extended.</param>
            <param name="message">The info message.</param>
            <param name="lifetime">Lifetime of the error message.</param>
            <param name="scope">Scope of the message.</param>
            <returns>Extended <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions.WithWarningMessage(Microsoft.AspNetCore.Mvc.IActionResult,System.String,Frontend.Vanilla.Features.Messages.ApiMessageLifetime,System.String)">
            <summary>
            Adds an warning message to the response.
            </summary>
            <param name="actionResult">The result to be extended.</param>
            <param name="message">The warning message.</param>
            <param name="lifetime">Lifetime of the error message.</param>
            <param name="scope">Scope of the message.</param>
            <returns>Extended <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions.WithSuccessMessage(Microsoft.AspNetCore.Mvc.IActionResult,System.String,Frontend.Vanilla.Features.Messages.ApiMessageLifetime,System.String)">
            <summary>
            Adds an success message to the response.
            </summary>
            <param name="actionResult">The result to be extended.</param>
            <param name="message">The success message.</param>
            <param name="lifetime">Lifetime of the error message.</param>
            <param name="scope">Scope of the message.</param>
            <returns>Extended <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions.WithErrorCode(Microsoft.AspNetCore.Mvc.IActionResult,System.String)">
            <summary>
            Adds <c>errorCode</c> property to the response.
            </summary>
            <param name="actionResult">The result to be extended.</param>
            <param name="errorCode">The error code.</param>
            <returns>Extended <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.ActionResults.ErrorCodeResult">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> decorator that adds error code to the response.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Json.ActionResults.ErrorCodeResult.ErrorCode">
            <summary>
            The error code.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ErrorCodeResult.#ctor(Microsoft.AspNetCore.Mvc.IActionResult,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Frontend.Vanilla.Features.Json.ActionResults.ErrorCodeResult"/> class.
            </summary>
            <param name="innerResult">Current action result that will be wrapped and decorated by this class.</param>
            <param name="errorCode">The error code.</param>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ErrorCodeResult.CreateWriter(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.ActionResults.ExtendResultBase">
            <summary>
            Base class for extending <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>. Implementations of this class
            are meant to be used through extension methods <see cref="T:Frontend.Vanilla.Features.Json.ActionResults.ActionResultExtensions"/>.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Json.ActionResults.ExtendResultBase.InnerResult">
            <summary>
            The next <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that this class decorates.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ExtendResultBase.#ctor(Microsoft.AspNetCore.Mvc.IActionResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Frontend.Vanilla.Features.Json.ActionResults.ExtendResultBase"/> class.
            </summary>
            <param name="innerResult">Current action result that will be wrapped and decorated by this class.</param>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ExtendResultBase.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Executes the result operation of the action method asynchronously. This method is called by MVC to process
            the result of an action method.
            </summary>
            <param name="context">The context in which the result is executed. The context information includes
            information about the action that was executed and request information.</param>
            <returns>A task that represents the asynchronous execute operation.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ExtendResultBase.CreateWriter(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>Creates a writer to extend JSON result.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.ActionResults.KeyValueMessageResult">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> decorator that adds key value message for client to the response.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Json.ActionResults.KeyValueMessageResult.Key">
            <summary>Scope of the message.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Json.ActionResults.KeyValueMessageResult.Value">
            <summary>Value.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.KeyValueMessageResult.#ctor(Microsoft.AspNetCore.Mvc.IActionResult,System.String,System.String)">
            <summary>Initializes a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.KeyValueMessageResult.CreateWriter(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.ActionResults.MessageResult">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> decorator that adds messages for client to the response.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Json.ActionResults.MessageResult.Messages">
            <summary>List of messages to add.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.MessageResult.#ctor(Microsoft.AspNetCore.Mvc.IActionResult,System.Collections.Generic.List{Frontend.Vanilla.Features.Messages.ApiMessage})">
            <summary>Initializes a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.MessageResult.CreateWriter(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.ActionResults.TechnicalErrorMessageResult">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> decorator that adds technical error message for client to the response.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Json.ActionResults.TechnicalErrorMessageResult.Scope">
            <summary>Scope of the message.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.TechnicalErrorMessageResult.#ctor(Microsoft.AspNetCore.Mvc.IActionResult,System.String)">
            <summary>Initializes a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.TechnicalErrorMessageResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.ActionResults.ValuesResult">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> decorator that adds errorValues for client to the response.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Json.ActionResults.ValuesResult.Values">
            <summary>List of messages to add.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ValuesResult.#ctor(Microsoft.AspNetCore.Mvc.IActionResult,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>Initializes a new instance.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.ActionResults.ValuesResult.CreateWriter(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.ClientEvaluationResultJsonConverter">
            <summary>
            Converts <see cref="T:Frontend.Vanilla.DomainSpecificLanguage.ClientEvaluationResult`1"/> to JSON for the client.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.IJsonSerializerSettingsConfigurator">
            <summary>
            Vanilla will use this class to initialize <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> for use in WebApi
            and Html.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.IJsonSerializerSettingsConfigurator.Configure(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Initializes <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.IJsonResponseBodyExtensionWriter">
            <summary>
            An interface used to extend <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> responses.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.IJsonResponseBodyExtensionWriter.Write(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.JsonSerializer,System.Threading.CancellationToken)">
            <summary>
            Modifies JSON body of a response before it's sent.
            </summary>
            <param name="body">The payload to be modified.</param>
            <param name="serializer"><see cref="T:Newtonsoft.Json.JsonSerializer"/> that was used to serialize the original response.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.IJsonSerializerFactory">
            <summary>
            Factory for creating JSON serializer with custom settings and serializers.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.IJsonSerializerFactory.CreateSerializer">
            <summary>
            Creates a json serializer.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Json.VanillaJsonSerializerSettingsConfigurator">
            <summary>
            Default Vanilla configuration of settings for JSON serializer.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Json.VanillaJsonSerializerSettingsConfigurator.#ctor(System.Collections.Generic.IEnumerable{Newtonsoft.Json.JsonConverter})">
            <summary>
            Default Vanilla configuration of settings for JSON serializer.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.LabelResolution.LabelResolutionMode.HostnameEnd">
            <summary>Resolution mode that resolves label from hostname end, i.e. www.bwin.com -> bwin.com</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.LabelResolution.LabelResolutionMode.HostnameStart">
            <summary>Resolution mode that resolves label from hostname start i.e. ladbrokes.com.dev.k8s.env.works -> ladbrokes.com</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.LoginDuration.ILoginDurationConfiguration.SlotName">
            <summary>
            Specifies if and where the login duration should be displayed.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.LazyFeatures.IFeatureEnablementProvider">
            <summary>
            Represents a provider which determines if feature with specific Id is enabled.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.LazyFeatures.IFeatureEnablementProvider.Id">
            <summary>
            Feature Id.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.LazyFeatures.IFeatureEnablementProvider.Source">
            <summary>
            Feature Data Source.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.LazyFeatures.IFeatureEnablementProvider.IsEnabledAsync(System.Threading.CancellationToken)">
            <summary>
            Enablement DSL prepared for client evaluation.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.LicenseInfo.ILicenseInfoService">
            <summary>
            Provides licence compliance info.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.LicenseInfo.ILicenseInfoService.GetAvailableLicences(System.String)">
            <summary>
            Provides available licences.
            </summary>
            <param name="product"></param>
            <returns>Collection of available licences per product.</returns>
        </member>
        <member name="T:Frontend.Vanilla.Features.Logging.Enrichers.RequireConfigurationLogEnricher">
            <summary>
            Requires config to be resolved for current context before inner enricher is executed because it uses it.
            Otherwise there can be a stack-overflow: config failed to load -> error being logged -> enricher get config.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Logging.Enrichers.RequireConfigurationLogEnricher.#ctor(Serilog.Core.ILogEventEnricher,Frontend.Vanilla.Core.Ioc.ICurrentContextAccessor)">
            <summary>
            Requires config to be resolved for current context before inner enricher is executed because it uses it.
            Otherwise there can be a stack-overflow: config failed to load -> error being logged -> enricher get config.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Logging.Enrichers.ThreadLogEnricher">
            <summary>
            Adds info about current thread.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Logging.Enrichers.ThreadLogEnricher.#ctor(Frontend.Vanilla.Core.Abstractions.IThread)">
            <summary>
            Adds info about current thread.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Logging.Enrichers.VersionsLogEnricher">
            <summary>
            Adds version to log entries b/c bug fixes and code differs between versions and this helps to identify it quickly.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Logging.Enrichers.VersionsLogEnricher.#ctor(Frontend.Vanilla.Core.Reflection.VanillaVersion)">
            <summary>
            Adds vanilla version to log entries b/c bug fixes and code differs between versions and this helps to identify it quickly.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Logging.IInMemoryLog">
            <summary>
            Stores log entries in memory. Use fixed array and rotate it to be bloody fast and lock threads as least as possible.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Logging.SemanticLoggingConfigurator">
            <summary>
            Creates semantic logger based on the configuration mainly from web.config.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Logging.SemanticLoggingConfigurator.#ctor(Frontend.Vanilla.Features.Logging.ISemanticLoggingConfiguration,Serilog.Formatting.ITextFormatter)">
            <summary>
            Creates semantic logger based on the configuration mainly from web.config.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Logging.SemanticLoggingJsonFormatter">
            <summary>
            Converts log event to raw semantic JSON.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Login.IDeviceFingerprintEnricher">
            <summary>
            Enriches client side device fingerprint with server side details.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Login.IDeviceFingerprintEnricher.EnrichAsync(Frontend.Vanilla.ServiceClients.Services.Authentication.Login.DeviceFingerprint,Frontend.Vanilla.Core.System.ExecutionMode)">
            <summary>
            Enriches fingerprint.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Login.ILoginResultHandler">
            <summary>
            Used to login user.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Login.ILoginResultHandler.LoginAsync(Frontend.Vanilla.Features.Login.MobileLoginParameters,System.Threading.CancellationToken)">
            <summary>
            Used to login user.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Login.IRememberMeTokenStorage">
            <summary>
            Temporary storage of remember-me token because login or workflow operation on any product app can receive it
            but the cookie can be written only on configured app (usually www) at restricted path.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Login.ISuperCookie">
            <summary>
            Handler for super cookie.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Login.ISuperCookie.GetValue">
            <summary>
            Gets the value of the cookie.
            </summary>
            <returns>The value of the cookie.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.Login.ISuperCookie.SetValue(System.String)">
            <summary>
            Sets the value of the cookie.
            </summary>
            <param name="value">The value to be set.</param>
        </member>
        <member name="T:Frontend.Vanilla.Features.Messages.ApiMessage">
            <summary>
            Represent a message that is returned by an Api call to the client.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Messages.ApiMessage.#ctor(Frontend.Vanilla.Features.Messages.MessageType,System.String,Frontend.Vanilla.Features.Messages.ApiMessageLifetime,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Frontend.Vanilla.Features.Messages.ApiMessage"/> class.
            </summary>
            <param name="type">The message type.</param>
            <param name="content">The message content.</param>
            <param name="lifetime">The lifetime of the message.</param>
            <param name="scope">The scope of the message.</param>
        </member>
        <member name="P:Frontend.Vanilla.Features.Messages.ApiMessage.Content">
            <summary>
            Content of the message.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Messages.ApiMessage.Type">
            <summary>
            Type of the message.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Messages.ApiMessage.Lifetime">
            <summary>
            Lifetime of the message.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Messages.ApiMessage.Scope">
            <summary>
            Scope of the message.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Messages.ApiMessageLifetime">
            <summary>
            Represents lifetime of a message.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Messages.ApiMessageLifetime.Single">
            <summary>
            Indicates that the message should be cleared after any navigation event.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Messages.ApiMessageLifetime.TempData">
            <summary>
            Indicates that the message should persist exacly one navigation event.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Messages.MessageType">
            <summary>
            Declares the message type (severity level).
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Messages.MessageType.Information">
            <summary>
            Informational-level message.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Messages.MessageType.Warning">
            <summary>
            Warning-level message.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Messages.MessageType.Error">
            <summary>
            Error-level message.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Messages.MessageType.Success">
            <summary>
            Success-level message.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.MetaTags.IMetaTagsConfiguration">
            <summary>
            SEO configuration of meta tags (explicit overrides).
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.MetaTags.MetaTagsConfigurationDto">
            <summary>
            Data for creating <see cref="T:Frontend.Vanilla.Features.MetaTags.IMetaTagsConfiguration" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.MetaTags.MetaTagsConfigurationFactory">
            <summary>
            Custom creation logic for <see cref="T:Frontend.Vanilla.Features.MetaTags.IMetaTagsConfiguration" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.NativeApp.NativeAppDetails">
            <summary>
            Encapsulates all resolved details about native app.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.Unknown">
            <summary>
            Gets the instance if the request isn't made from native app.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance with all details specified.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.ApplicationName">
            <summary>
            Gets the name of the native application that current request comes from.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.Product">
            <summary>
            Gets the product ID mapped to the native application that current request comes from.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.NativeMode">
            <summary>
            Gets the native mode.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.IsNative">
            <summary>
            Indicates whether the current request comes in context of some app (native app, wrapper, terminal, download client etc).
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.IsNativeApp">
            <summary>
            Indicates whether the current request comes from Native Application.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.IsNativeWrapper">
            <summary>
            Indicates whether the current request comes from Native Wrapper.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.IsDownloadClient">
            <summary>
            Indicates whether the current request comes from download client.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.IsDownloadClientApp">
            <summary>
            Indicates whether the current request comes from download client.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.IsDownloadClientWrapper">
            <summary>
            Indicates whether the current request comes from download client.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.NativeApp.NativeAppDetails.IsTerminal">
            <summary>
            Indicates whether the current request comes from terminal.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.NativeApp.NativeAppMode">
            <summary>
            Defines mode of the native app.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.NativeApp.NativeAppMode.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.NativeApp.NativeAppMode.Native">
            <summary>
            Native app.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.NativeApp.NativeAppMode.Wrapper">
            <summary>
            Wrapper app.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.NativeApp.NativeAppMode.DownloadClient">
            <summary>
            Download client app.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.NativeApp.NativeAppMode.DownloadClientWrapper">
            <summary>
            Download client wrapper app.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.NativeApp.NativeAppMode.Terminal">
            <summary>
            Terminal app.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.NativeApp.INativeAppService">
            <summary>
            A service that determines if current request comes from native app and can resolve
            information about the app and product.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.NativeApp.INativeAppService.GetCurrentDetails">
            <summary>
            Resolves native app details about current request.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Ping.PingController">
            <summary>Prolong the session.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Ping.PingController.Get">
            <summary>Prolong the session.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.PlaceholderReplacers.IProductPlaceholderReplacer.ReplaceAsync(Frontend.Vanilla.Core.System.ExecutionMode,System.String)">
            <summary>
            Replaces product replacement values (i.e. {portal}) with actual product url (containing language) from sitecore.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.IAssessmentService">
            <summary>
            Send/Annotate assessments to reCAPTCHA Enterprise API.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.IEnablementService">
            <summary>
            Determines if reCAPTCHA should be enabled for particular context according to the configuration.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.IFailureCounter">
            <summary>
            Stores number of failed operation in distributed cache
            and based on it determines success for particular context.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaAssessment">
            <summary>Provides reCAPTCHA Enterprise assessment data. </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaAssessment.Event">
            <summary>The event being assessed.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaAssessment.Name">
            <summary>
            The resource name for the Assessment in the format "projects/{project_number}/assessments/{assessment_id}".
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaAssessment.RiskAnalysis">
            <summary>
            Recaptcha enterprise risk analysis.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaAssessment.TokenProperties">
            <summary>
            Properties of the provided event token.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent">
            <summary>
            Provides the event being assessed.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.RequestedUri">
            <summary>
            The URI resource the user requested that triggered an assessment.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.UserAgent">
            <summary>
            The user agent present in the request from the user's device related to this event.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.Ja3">
            <summary>
            Optional JA3 fingerprint for SSL clients.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.SiteKey">
            <summary>
            The site key that was used to invoke reCAPTCHA Enterprise on your site and generate the token.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.Token">
            <summary>
            The user response token provided by the reCAPTCHA Enterprise client-side integration on your site.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.HashedAccountId">
            <summary>
            Unique stable hashed user identifier for the request. The identifier must be hashed using hmac-sha256 with stable secret.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.WafTokenAssessment">
            <summary>
            Flag for running WAF token assessment. If enabled, the token must be specified, and have been created by a WAF-enabled key.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.ExpectedAction">
            <summary>
            The expected action for this type of event.
            This should be the same action provided at token generation time on client-side platforms already integrated with recaptcha enterprise.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.FirewallPolicyEvaluation">
            <summary>
            Flag for enabling firewall policy config assessment.
            If this flag is enabled, the firewall policy will be evaluated and a suggested firewall action will be returned in the response.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.Express">
            <summary>
            Flag for a reCAPTCHA express request for an assessment without a token. If enabled, `site_key` must reference a SCORE key with WAF feature set to EXPRESS.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.UserIpAddress">
            <summary>
            The IP address in the request from the user's device related to this event.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent.Headers">
            <summary>
            HTTP header information about the request.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.RiskAnalysis">
            <summary>
            Google Cloud Recaptcha enterprise risk analysis.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RiskAnalysis.Reasons">
            <summary>
            Reasons contributing to the risk analysis verdict.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RiskAnalysis.Score">
            <summary>Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic while 0.0 means very likely non-legitimate traffic).</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.RiskAnalysis.ExtendedVerdictReasons">
            <summary>
            Extended verdict reasons to be used for experimentation only. The set of possible reasons is subject to change.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.TokenProperties">
            <summary>
            Properties of the provided event token.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.TokenProperties.InvalidReason">
            <summary>
            Reason associated with the response when valid = false.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.TokenProperties.Valid">
            <summary>
            Whether the provided user response token is valid. When valid = false, the reason could be specified in invalidReason or it could also be due to a user failing to solve a challenge or a sitekey mismatch (i.e the sitekey used to generate the token was different than the one specified in the assessment).
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.TokenProperties.Action">
            <summary>
            Action name provided at token generation.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.TokenProperties.IosBundleId">
            <summary>
            The ID of the iOS bundle with which the token was generated (iOS keys only).
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.TokenProperties.CreateTime">
            <summary>
            The timestamp corresponding to the generation of the token.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.TokenProperties.Hostname">
            <summary>
            The hostname of the page on which the token was generated.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.TokenProperties.AndroidPackageName">
            <summary>
            The name of the Android package with which the token was generated (Android keys only).
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.InvalidReasons">
            <summary>Gets Recaptcha token invalid reasons.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.InvalidReasons.INVALID_REASON_UNSPECIFIED">
            <summary>
            Default unspecified type.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.InvalidReasons.UNKNOWN_INVALID_REASON">
            <summary>
            If the failure reason was not accounted for.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.InvalidReasons.MALFORMED">
            <summary>
            The provided user verification token was malformed.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.InvalidReasons.EXPIRED">
            <summary>
            The user verification token had expired.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.InvalidReasons.DUPE">
            <summary>
            The user verification had already been seen.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.InvalidReasons.MISSING">
            <summary>
            The user verification token was not present. It is a required input.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.InvalidReasons.BROWSER_ERROR">
            <summary>
            Browser error during verification.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.ClassificationReasons">
            <summary>Gets geolocation coordinates.</summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ClassificationReasons.CLASSIFICATION_REASON_UNSPECIFIED">
            <summary>Default unspecified type.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ClassificationReasons.AUTOMATION">
            <summary>
            Interactions matched the behavior of an automated agent.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ClassificationReasons.UNEXPECTED_ENVIRONMENT">
            <summary>
            The event originated from an illegitimate environment.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ClassificationReasons.TOO_MUCH_TRAFFIC">
            <summary>
            Traffic volume from the event source is higher than normal.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ClassificationReasons.UNEXPECTED_USAGE_PATTERNS">
            <summary>
            Interactions with the site were significantly different than expected patterns.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ClassificationReasons.LOW_CONFIDENCE_SCORE">
            <summary>
            Too little traffic has been received from this site thus far to generate quality risk analysis.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ClassificationReasons.SUSPECTED_CARDING">
            <summary>
            Suspected carding.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ClassificationReasons.SUSPECTED_CHARGEBACK">
            <summary>
            Suspected chargeback.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.AssessmentAnnotations">
            <summary>
            Represents the types of annotations.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.AssessmentAnnotations.ANNOTATION_UNSPECIFIED">
            <summary>
            Default unspecified type.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.AssessmentAnnotations.LEGITIMATE">
            <summary>
            Provides information that the event turned out to be legitimate.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.AssessmentAnnotations.FRAUDULENT">
            <summary>
            Provides information that the event turned out to be fraudulent.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.AssessmentAnnotations.PASSWORD_CORRECT">
            <summary>
            Provides information that the event was related to a login event in which the user typed the correct password.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.AssessmentAnnotations.PASSWORD_INCORRECT">
            <summary>
            Provides information that the event was related to a login event in which the user typed the incorrect password.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.IReCaptchaConfiguration">
            <summary>
            ReCAPTCHA configuration.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaConfigurationFactory">
            <summary>
            Additional validation: forbids usage of test keys on production.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaConfigurationFactory.#ctor(Frontend.Vanilla.Core.Configuration.IEnvironmentProvider)">
            <summary>
            Additional validation: forbids usage of test keys on production.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes">
            <summary>
            Possible reCAPTCHA error codes.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.MissingInputSecret">
            <summary>
            The secret parameter is missing.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.InvalidInputSecret">
            <summary>
            The secret parameter is invalid or malformed.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.MissingInputResponse">
            <summary>
            The response parameter is missing.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.InvalidInputResponse">
            <summary>
            The response parameter is invalid or malformed.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.BadRequest">
            <summary>
            The request is invalid or malformed.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.TimeoutOrDuplicate">
            <summary>
            User response token has timed out, or it was already verified before.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.MissingUserResponse">
            <summary>
            User response was not provided as an input.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.ActionMismatch">
            <summary>
            Response <c>action</c> did not match requested <c>area</c>.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.Disabled">
            <summary>
            reCAPTCHA is not enabled for this area.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.ScoreThresholdNotMet">
            <summary>
            The users score was below the specified threshold.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaErrorCodes.InvalidHostName">
            <summary>
            The hostname is not in the same domain as current label.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.IReCaptchaService">
            <summary>
            Facade with all logic related to reCAPTCHA.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ReCaptcha.IReCaptchaService.IsEnabledAsync(Frontend.Vanilla.Core.System.Text.TrimmedRequiredString,System.Threading.CancellationToken)">
            <summary>
            Determines if reCAPTCHA is enabled for particular area and current context thus widget should be rendered.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ReCaptcha.IReCaptchaService.VerifyUsersResponseAsync(Frontend.Vanilla.Core.System.Text.TrimmedRequiredString,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Verifies user's response from the specified version of reCAPTCHA against Google web service.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ReCaptcha.IReCaptchaService.CreateAssessmentAsync(Frontend.Vanilla.Features.ReCaptcha.RecaptchaEvent,System.Threading.CancellationToken)">
            <summary>
            Creates a new Assessment based on user's reCAPTCHA response.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ReCaptcha.IReCaptchaService.AnnotateAssessmentAsync(System.String,Frontend.Vanilla.Features.ReCaptcha.AssessmentAnnotations,System.Threading.CancellationToken)">
            <summary>
            Annotates a previously created Assessment to provide additional information on whether the event turned out to be authentic or fraudulent.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ReCaptcha.IReCaptchaService.ReportSuccessAsync(Frontend.Vanilla.Core.System.Text.TrimmedRequiredString,System.Threading.CancellationToken)">
            <summary>
            Reports success of operation where reCAPTCHA is used.
            This can change related counter to determine if reCAPTCHA should be enabled.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ReCaptcha.IReCaptchaService.ReportFailureAsync(Frontend.Vanilla.Core.System.Text.TrimmedRequiredString,System.Threading.CancellationToken)">
            <summary>
            Reports failure of operation where reCAPTCHA is used.
            This can change related counter to determine if reCAPTCHA should be enabled.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ReCaptcha.IReCaptchaService.GetVerificationMessageAsync(System.Threading.CancellationToken)">
            <summary>
            Resolves reCAPTCHA message which indicates verification failure because of invalid value or sudden enablement of reCAPTCHA protection.
            Throws if something goes wrong.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ReCaptcha.IReCaptchaService.GetVersionedVerificationMessageAsync(Frontend.Vanilla.Features.ReCaptcha.ReCaptchaVersion,System.Threading.CancellationToken)">
            <summary>
            Resolves reCAPTCHA message which indicates verification failure because of invalid value or sudden enablement of reCAPTCHA protection.
            Throws if something goes wrong.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaVerificationResult">
            <summary>
            Represents a response from google reCAPTCHA site verification endpoint.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaVerificationResult.#ctor(System.Boolean,System.Collections.Generic.IReadOnlyList{System.String},System.Double)">
            <summary>
            Creates an instance of <see cref="T:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaVerificationResult"/>.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaVerificationResult.Success">
            <summary>
            Gets whether this request was a valid reCAPTCHA token for your site.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaVerificationResult.Score">
            <summary>
            Gets the score for this request (0.0 - 1.0).
            NOTE: Only applicable to v3.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaVerificationResult.ErrorCodes">
            <summary>
            Gets a list of errors that occured during reCAPTCHA request and validation.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaVersion">
            <summary>
            Represents available reCAPTCHA modes.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.ReCaptcha.ReCaptchaVersion.Enterprise">
            <summary>
            reCAPTCHA Enterprise
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.IVerificationMessageProvider">
            <summary>
            Resolves reCAPTCHA message which indicates verification failure because of invalid value or sudden enablement of reCAPTCHA protection.
            Throws if the message is missing or invalid.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.ReCaptcha.IVerificationService">
            <summary>
            Verifies user's response to reCAPTCHA.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.RememberMe.IRememberMeTokenCookie">
            <summary>
            Encapsulates logic related to remember-me token cookie + other support cookies.
            All methods can be called only when HttpRequest to URL under login path!.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Routing.ICultureRouteConstraint">
            <summary>
            Limits <see cref="F:Frontend.Vanilla.Features.Routing.RouteValueKeys.Culture" /> route value to configured languages only.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Routing.RouteValueKeys">
            <summary>
            Constants for commonly-used route value keys.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Routing.RouteValueKeys.Controller">
            <summary>
            The controller part of the route.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Routing.RouteValueKeys.Action">
            <summary>
            The action part of the route.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Routing.RouteValueKeys.Culture">
            <summary>
            The culture part of the route.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Routing.RouteValueKeys.Path">
            <summary>
            The path part of the route.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Routing.RouteValueKeys.Id">
            <summary>
            The id part of the route.
            </summary>
        </member>
        <member name="F:Frontend.Vanilla.Features.Routing.RouteValueKeys.ApplicationId">
            <summary>
            The application id corresponding to the current route.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.RtmsConnection.RtmsClientConfigProvider">
            <summary>
            Outputs client-side config for RTMS connection.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.RtmsConnection.RtmsClientConfigProvider.#ctor(Frontend.Vanilla.Features.RtmsConnection.IRtmsConfiguration,Frontend.Vanilla.Core.Diagnostics.ITraceRecorder)">
            <summary>
            Outputs client-side config for RTMS connection.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.RtmsConnection.IRtmsConfiguration">
            <summary>
            Configures connection to Real-Time Messaging System.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.RtmsLayer.BonusTeaserContentProvider.GetBonusContent(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Gets Bonus Content from sitecore.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.RtmsLayer.BonusTeaserContentProvider.LoadAndParseBonusItem(System.String)">
            <summary>
            Load Bonus item from sitecore.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.RtmsLayer.BonusTeaserContentProvider.ParseBonusResult(Frontend.Vanilla.Content.Model.IPCImage,System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.Model.IPCText})">
            <summary>
            Parses Bonus Result.
            </summary>
            <param name="bonusItem"></param>
            <param name="bonusContent"></param>
            <returns></returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.RtmsLayer.BonusTeaserContentProvider.GetBonusItem(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.Model.IPCText},System.String)">
            <summary>
            Get Bonus item from IPCText array.
            </summary>
            <param name="bonusContent"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.SetOddsBootsAndRiskFreeBetReplacement(System.Boolean)">
            <summary>
            Fetch translations or set default values for odds boost and risk free bet league/sport/event names.
            </summary>
            <param name="shouldCallPosApi">Identify if should fetch translations from pos api or just set default values.</param>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.LoadAndReplaceStaticKeyValuePairs">
            <summary>
            Prepares Static Content.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.ApplyCulturalFormatOnMetaData(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Format Date and Amount Values as per Culture.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.GetTncContent(System.String,System.String)">
            <summary>
            Prepares Terms and Condition Content.
            </summary>
            <param name="templateId"></param>
            <param name="miscTemplateId"></param>
            <returns></returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.GetcampaignTncContent(System.String,System.String)">
            <summary>
            Prepares Terms and Condition Content.
            </summary>
            <param name="templateId"></param>
            <param name="miscTemplateId"></param>
            <returns></returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.LoadTncContentFromMiscellaneousPaths(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Load IPCText from specified list of miscellaneous paths.
            </summary>
            <param name="miscPath"></param>
            <returns>IEnumerable&lt;Content&lt;IPCText&gt;&gt;.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.RetrieveValidMiscellaneousPaths(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            It will ignore the miscellaneous paths which are invalid to avoid failing entire thing because of atleast one invalid path.
            </summary>
            <param name="miscPath"></param>
            <returns></returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.ParseTemplateAndReplacePlaceholders(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)">
            <summary>
             Parses string and updates placeholders.
            </summary>
            <param name="replaceableValues"></param>
            <param name="bonusTemplate"></param>
            <returns></returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.ParseTncResultTemplate(System.Collections.Generic.IEnumerable{Frontend.Vanilla.Content.Model.IPCText},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Parses Templates placeholders and replaces with values.
            </summary>
            <param name="templates"></param>
            <param name="replaceableValues"></param>
            <returns></returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.ParseResultTemplate(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)">
            <summary>
             Parses string and updates placeholders.
            </summary>
            <param name="replaceableValues"></param>
            <param name="bonusTemplate"></param>
            <returns></returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.TermsAndConditions.TermsAndConditionsContentProvider.LoadAndReplaceApplicableProductsKey">
            <summary>
            Prepares Product Keys Content.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Theming.IThemeResolver">
            <summary>
            Determines theme information.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Theming.IThemeResolver.GetTheme">
            <summary>
            Theme name.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.TrackerId.ISignUpBonusResolver">
            <summary>
            Gets trackerId from URL or cookie if it's associated with a valid bonus.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.TrackerId.ITrackerIdResolver">
            <summary>
            Resolves trackerId ether from <see cref="T:Frontend.Vanilla.Features.TrackerId.ITrackerIdQueryParameter" /> or from corresponding cookie.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.UserBalance.IBalanceConfiguration">
            <summary>
            DON'T REMOVE PROPERTIES. This is serialised to client by <see cref="T:Frontend.Vanilla.Features.UserBalance.BalanceSettingsConfigProvider" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.VanillaFeaturesApplicationBuilder">
            <summary>
            Common logic for  class for startups of Vanilla apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.VanillaFeaturesApplicationBuilder.UseVanillaFeaturesAsync(Microsoft.AspNetCore.Builder.WebApplication,System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder},System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder},System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder})">
            <summary>Used to add common vanilla features regardless of application type (api vs host).</summary>
            <param name="app"></param>
            <param name="configureAppBeforeRouting">Provides configuring of app before UseRouting() call.</param>
            <param name="configureApp">Provides configuring of app.</param>
            <param name="configureEndpoints">Provides ability to configure endpoints.</param>
        </member>
        <member name="T:Frontend.Vanilla.Features.VanillaFeaturesServices">
            <summary>
            Vanilla features.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.VanillaFeaturesServices.DiscoverAssembliesWithControllers">
            <summary>Discovers assemblies where are controllers to be mapped.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.VanillaFeaturesServices.AddVanillaFeatures(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds Vanilla features for common API web app.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.VanillaFeaturesWebApplicationBuilder">
            <summary>Adds and configures vanilla-specific <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder" /> features.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.VanillaFeaturesWebApplicationBuilder.WithVanillaFeatures(Microsoft.AspNetCore.Builder.WebApplicationBuilder,System.String,System.String,System.ValueTuple{System.String,System.String}[])">
            <summary>Adds and configures vanilla-specific <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder" /> features.</summary>
            <param name="builder">WebApplicationBuilder instance.</param>
            <param name="application">Application identifier/name.</param>
            <param name="logFolder">Defines placeholder's ${LOG_FOLDER} value.</param>
            <param name="customPlaceholders">Defines custom placeholders.</param>
        </member>
        <member name="T:Frontend.Vanilla.Features.Visitor.ILastVisitorCookie">
            <summary>
            Handler for cookie which stores the user name of the last visitor.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Visitor.ILastVisitorCookie.GetValue">
            <summary>Gets the value of the cookie.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.Visitor.ILastVisitorCookie.SetValue(Frontend.Vanilla.Core.System.Text.TrimmedRequiredString)">
            <summary>Sets the value of the cookie.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Visitor.VisitorSettings">
            <summary>
            Expose the visitor (user on particular device) settings for the current request. Manipulated by <see cref="T:Frontend.Vanilla.Features.Visitor.IVisitorSettingsManager" />.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Visitor.VisitorSettings.CultureName">
            <summary>Gets the name of the user's selected culture.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Visitor.VisitorSettings.VisitCount">
            <summary>Gets the number of user visits.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Visitor.VisitorSettings.SessionStartTime">
            <summary>Gets the time when current user's session has started.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Visitor.VisitorSettings.PreviousSessionStartTime">
            <summary>Gets the time of previous user's visit - session start. Can have default <c>DateTime</c> value in case of first visit.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.Visitor.IVisitorSettingsManager">
            <summary>
            Handles loading and saving of <see cref="T:Frontend.Vanilla.Features.Visitor.VisitorSettings" /> to/from corresponding cookie.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Visitor.IVisitorSettingsManager.Received">
            <summary>Gets settings as received in this request.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.Visitor.IVisitorSettingsManager.Current">
            <summary>Gets or sets current settings with all changes during this request.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebAbstractions.HttpContextAccessorExtensions">
            <summary>Extensions for <see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor" />.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpContextAccessorExtensions.GetRequiredHttpContext(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>Gets current <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />. If not available then a comprehensive exception is thrown.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpContextAccessorExtensions.GetOrAddScopedValue``2(Microsoft.AspNetCore.Http.IHttpContextAccessor,``0,System.Func{``0,``1})">
            <summary>Gets or adds scoped value items. Thread safe. Uses scoped <see cref="T:Frontend.Vanilla.Core.Caching.IRequestScopedValuesProvider"/>.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebAbstractions.HttpContextExtensions">
            <summary>
            Provides extensions on HttpContext.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpContextExtensions.WriteResponseAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <summary>
            Writes to HttpResponse.
            </summary>
            <param name="httpContext"></param>
            <param name="contentType"></param>
            <param name="text"></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpContextExtensions.GetRouteValue(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            Gets route value.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpContextExtensions.GetOrAddScopedValue``2(Microsoft.AspNetCore.Http.HttpContext,``0,System.Func{``0,``1})">
            <summary>Gets or adds scoped value items. Thread safe. Uses scoped <see cref="T:Frontend.Vanilla.Core.Caching.IRequestScopedValuesProvider"/>.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebAbstractions.HttpRequestExtensions">
            <summary>Useful extensions on <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpRequestExtensions.GetHostUrl(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>Gets full url.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpRequestExtensions.GetFullUrl(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>Gets full url.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpRequestExtensions.GetAppBaseUrl(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>Gets base url.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpRequestExtensions.GetAbsolutePath(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>Gets absolute path.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpRequestExtensions.GetRequired(Microsoft.AspNetCore.Http.IQueryCollection,System.String)">
            <summary>Gets required query param value.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebAbstractions.HttpResponseExtensions">
            <summary>NET Core HttpContext utility methods.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpResponseExtensions.DisableCache(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>Disables Response Cache.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.HttpResponseExtensions.Redirect(Microsoft.AspNetCore.Http.HttpResponse,System.String,System.Object,System.Boolean)">
            <summary>
            Redirects.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebAbstractions.Middleware">
            <summary>
            Base class for middlewares.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.WebAbstractions.Middleware.Next">
            <summary>
            Next delegate.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.Middleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Create new instance.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.Middleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Method to invoke.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebAbstractions.BeforeNextMiddleware">
            <summary>
            Convenient way to execute code before calling Next.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebAbstractions.BeforeNextMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Convenient way to execute code before calling Next.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.CurrentLabelTenantResolver">
            <summary>
            Resolves current label which is used as a tenant for the config engine.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.CurrentLabelTenantResolver.#ctor(Frontend.Vanilla.Core.Ioc.ICurrentContextAccessor,Frontend.Vanilla.Features.LabelResolution.ILabelResolver)">
            <summary>
            Resolves current label which is used as a tenant for the config engine.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.ICurrentProductResolver">
            <summary>
            Resolver current product based on host path and fallback to DynaCon product in case header absent.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.ICurrentProductResolver.ProductLegacy">
            <summary>
            Current hosting Product (legacy, should be deleted once single domain migration is done) specific for non single domain.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.ICurrentProductResolver.Product">
            <summary>
            Current hosting Product resolved correctly for single domain.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.DynaConEngineSettingsFactory">
            <summary>
            Creates <see cref="T:Frontend.Vanilla.Configuration.DynaCon.DynaConEngineSettings" /> based on the appsettings section and parameters provided in DI.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.DynaConEngineSettingsFactory.#ctor(Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.IDynaConConfiguration,Frontend.Vanilla.Features.WebIntegration.Core.IEnvironmentNameProvider,Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.IDynaConParameterReplacer,Frontend.Vanilla.Core.IO.IFileSystem,System.Collections.Generic.IEnumerable{Frontend.Vanilla.Core.Configuration.DynaConParameter})">
            <summary>
            Creates <see cref="T:Frontend.Vanilla.Configuration.DynaCon.DynaConEngineSettings" /> based on the appsettings section and parameters provided in DI.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.IDynaConParameterExtractor">
            <summary>
            Extracts DynaCon parameters from configuration.
            </summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.IDynaConParameterExtractor.Product">
            <summary>
            Indicates the current product.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.IDynaConParameterReplacer">
            <summary>
            Replaces DynaCon parameters usually in path of some configuration related file.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.MultitenantSettingsFactory">
            <summary>
            Creates settings for a tenant in multitenant web app.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.MultitenantSettingsFactory.#ctor(Frontend.Vanilla.Configuration.DynaCon.DynaConEngineSettings,Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.IDynaConParameterReplacer)">
            <summary>
            Creates settings for a tenant in multitenant web app.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.WebDynaConOverridesSessionIdentifier">
            <summary>
            Stores identifier of DynaCon overrides session in dedicated cookie.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Configuration.DynaCon.WebDynaConOverridesSessionIdentifier.#ctor(Frontend.Vanilla.Features.Cookies.ICookieHandler,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Stores identifier of DynaCon overrides session in dedicated cookie.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Content.SmartUrlReplacementResolver">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.Content.ISmartUrlReplacementResolver" /> for web applications.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Content.SmartUrlReplacementResolver.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Frontend.Vanilla.DomainSpecificLanguage.Providers.Contracts.IAppDslProvider)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.Content.ISmartUrlReplacementResolver" /> for web applications.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Content.WebEditorOverridesResolver">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.Content.IEditorOverridesResolver" /> for web applications.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Content.WebEditorOverridesResolver.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Frontend.Vanilla.Core.Net.IInternalRequestEvaluator,Frontend.Vanilla.Features.Cookies.ICookieHandler)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.Content.IEditorOverridesResolver" /> for web applications.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Content.WebSitecoreLanguageResolver">
            <summary>
            Resolves Sitecore language parameters according to configured languages for the web application.
            Result is cached because it's resolved too many times - for each content item but it doesn't change even if user changes.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Content.WebSitecoreLanguageResolver.#ctor(Frontend.Vanilla.Features.Globalization.ILanguageService,Frontend.Vanilla.Core.Ioc.ICurrentContextAccessor)">
            <summary>
            Resolves Sitecore language parameters according to configured languages for the web application.
            Result is cached because it's resolved too many times - for each content item but it doesn't change even if user changes.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Core.ClientIP.IIsInternalRequestAlgorithm">
            <summary>
            Evaluates if given request is internal which means it comes from the company network hences some internal features can be allowed.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Core.ClientIP.MockedClientIpResolutionAlgorithm">
            <summary>Resolves mocked IP from the cookie before regular resolution algorithm.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Core.ClientIP.MockedClientIpResolutionAlgorithm.#ctor(Frontend.Vanilla.Core.Net.IClientIpResolutionAlgorithm,Frontend.Vanilla.Core.Configuration.IEnvironmentProvider,Frontend.Vanilla.Features.Cookies.ICookieHandler)">
            <summary>Resolves mocked IP from the cookie before regular resolution algorithm.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Core.ClientIP.WebClientIpResolver">
            <summary>
            Integrates all client IP resolution logic.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Core.ClientIP.WebClientIpResolver.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Frontend.Vanilla.Core.Net.IClientIpResolutionAlgorithm,Frontend.Vanilla.Features.WebIntegration.Core.ClientIP.IIsInternalRequestAlgorithm,Frontend.Vanilla.Features.WebIntegration.Core.DynaconAppBoot.IDynaconAppBootRestClientService)">
            <summary>
            Integrates all client IP resolution logic.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Core.DynaconAppBoot.IDynaconAppBootRestClientService">
            <summary>
            Retrieves the Labels configuration from Dynacon using httpclient.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Core.IEnvironmentNameProvider">
            <summary>
            Determines environment name of the website.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Core.WebAppContextSwitchMiddleware">
            <summary>
            Executes <see cref="T:Frontend.Vanilla.Core.Ioc.ICurrentContextSwitchHandler" /> according to HTTP request handling.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Core.WebAppContextSwitchMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,System.Collections.Generic.IEnumerable{Frontend.Vanilla.Core.Ioc.ICurrentContextSwitchHandler},Frontend.Vanilla.Features.App.IAppConfiguration)">
            <summary>
            Executes <see cref="T:Frontend.Vanilla.Core.Ioc.ICurrentContextSwitchHandler" /> according to HTTP request handling.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Core.WebContextAccessor">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.Core.Ioc.ICurrentContextAccessor" /> for web applications.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Core.WebContextAccessor.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Logging.ILogger{Frontend.Vanilla.Features.WebIntegration.Core.WebContextAccessor})">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.Core.Ioc.ICurrentContextAccessor" /> for web applications.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.Core.WebEnvironmentProvider">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.Core.Configuration.IEnvironmentProvider" /> for web applications.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.Core.WebEnvironmentProvider.#ctor(Frontend.Vanilla.Configuration.DynaCon.Multitenancy.ICurrentTenantResolver,Frontend.Vanilla.Features.WebIntegration.Core.IEnvironmentNameProvider,Frontend.Vanilla.Features.WebIntegration.ISingleDomainAppConfiguration)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.Core.Configuration.IEnvironmentProvider" /> for web applications.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.ServiceClients.TracingCorrelationPosApiRestRequestBuilder">
            <summary>
            Posts tracing header to PosAPI to be able to correlate its execution with a request coming to Vanilla app.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.ServiceClients.TracingCorrelationPosApiRestRequestBuilder.#ctor(Frontend.Vanilla.Features.Diagnostics.Tracing.ITracingIdsProvider)">
            <summary>
            Posts tracing header to PosAPI to be able to correlate its execution with a request coming to Vanilla app.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.ServiceClients.WebClaimsCacheTime">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.ServiceClients.Security.Claims.IClaimsCacheTime" /> for web apps according to web authentication.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.ServiceClients.WebClaimsCacheTime.#ctor(Frontend.Vanilla.Features.Authentication.IAuthenticationConfiguration)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.ServiceClients.Security.Claims.IClaimsCacheTime" /> for web apps according to web authentication.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.ServiceClients.WebCurrentUserAccessor">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor" /> for web apps.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.ServiceClients.WebCurrentUserAccessor.#ctor(Frontend.Vanilla.Core.Abstractions.IThread,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Implementation of <see cref="T:Frontend.Vanilla.ServiceClients.Security.ICurrentUserAccessor" /> for web apps.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebIntegration.ServiceClients.WebPosApiCacheDiagnostics">
            <summary>
            Adds more info about HTTP request to <see cref="T:Frontend.Vanilla.ServiceClients.Infrastructure.Caching.IPosApiCacheDiagnostics" />.
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebIntegration.ServiceClients.WebPosApiCacheDiagnostics.#ctor(Frontend.Vanilla.ServiceClients.Infrastructure.Caching.IPosApiCacheDiagnostics,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Adds more info about HTTP request to <see cref="T:Frontend.Vanilla.ServiceClients.Infrastructure.Caching.IPosApiCacheDiagnostics" />.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebUtilities.IBrowserUrlProvider">
            <summary>
            Resolves URL that users sees in browser address bar.
            For SPAs, it has to be passed from client. For older apps, it equals to request URL.
            URL can be marked to be redirected. This is usually done by DSL actions. Then some common logic should pick it up and execute.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebUtilities.DisableAuthenticationAttribute">
            <summary>
            Indicates to disable authentication on controller.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebUtilities.DisableExpirationRenewalAttribute">
            <summary>
            Indicates to disable claim refresh.
            </summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebUtilities.IEndpointMetadata">
            <summary>
            Provides metadata of an endpoint (a controller) in a way that can be easily mocked and it's cross-platform (legacy ASP.NET and ASP.NET Core).
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebUtilities.IEndpointMetadata.GetOrdered``1">
            <summary>Gets the metadata items of type T in ascending order of precedence so the most specific is the last one.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebUtilities.ResponseCacheControlCoreAttribute">
            <summary>
            Custom attribute to add cache control headers configured on Dynacon to the requests.
            Config should have path (mandatory) and query params (optional).
            Query Params can contain Wildcard (*).
            </summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebUtilities.ResponseCacheControlCoreAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Called by the ASP.NET MVC framework after the action method executes.
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebUtilities.ServesHtmlDocumentAttribute">
            <summary>Indicates this controller action serves full HTML document so all related logic should be executed e.g. redirects, SEO, prerender.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebUtilities.ServesNotFoundAttribute">
            <summary>Indicates this controller action serves not found route.</summary>
        </member>
        <member name="T:Frontend.Vanilla.Features.WebUtilities.ServesPublicPagesAttribute">
            <summary>Indicates this controller action serves public page so all related logic should be executed e.g. 404 if page not found.</summary>
        </member>
        <member name="M:Frontend.Vanilla.Features.WebUtilities.ServesPublicPagesAttribute.#ctor(System.String)">
            <summary>Indicates this controller action serves public page so all related logic should be executed e.g. 404 if page not found.</summary>
        </member>
        <member name="P:Frontend.Vanilla.Features.WebUtilities.ServesPublicPagesAttribute.RootPath">
            <summary>
            Indicates the sitecore path for public page serving.
            </summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.PlaceholderRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the PlaceholderRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.PlaceholderRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.PlaceholderRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.PlaceholderRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.PlaceholderRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.PlaceholderRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.PlaceholderRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.PlaceholderRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.PlaceholderRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_indexOfString_0EB7C57F1E1613EE8D069A853AC87996AAC4AB66EE1DBD194489F3BEE08ED9A3">
            <summary>Supports searching for the string "${".</summary>
        </member>
    </members>
</doc>
