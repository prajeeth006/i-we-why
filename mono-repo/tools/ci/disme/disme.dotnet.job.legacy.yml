spec:
  inputs:
    project:
    when:
    backendProject:
    clientAppName:
    clientAppArtifactsPath:
    clientAppBuildConfig:
    dismeShortcut:
    dismeDocumentName:
    dismeEnvironment:
    dismeServers:
    dxPillar:
      default: ''
    dxDomain:
      default: ''
    dxSubDomain:
      default: ''
    dxTeam:
      default: ''
    zipDirectory:
    zipFileName:
---
start-$[[ inputs.project ]]:
  stage: start
  tags:
    - linux-shell-runner
  variables:
    GIT_STRATEGY: none
  extends:
    - .rules-$[[ inputs.when ]]
  script:
    - echo 'Started legacy disme job of $[[ inputs.project ]]'

build-server-$[[ inputs.project ]]:
  stage: build
  extends: .build-server
  needs: [ 'version', 'version-xml', 'start-$[[ inputs.project ]]' ]
  variables:
    PROJECT: $[[ inputs.backendProject ]]

build-client-$[[ inputs.project ]]:
  stage: build
  extends: .build-client
  needs: [ 'version', 'start-$[[ inputs.project ]]' ]
  variables:
    APP: $[[ inputs.clientAppName ]]
    APP_ARTIFACTS_PATH: $[[ inputs.clientAppArtifactsPath ]]/**
    APP_BUILD_CONFIG: $[[ inputs.clientAppBuildConfig ]]

disme-upload-$[[ inputs.project ]]:
  extends: .disme-upload-shared
  needs: [ 'version', 'build-server-$[[ inputs.project ]]', 'build-client-$[[ inputs.project ]]' ]
  variables:
    DISME_SHORTCUT: $[[ inputs.dismeShortcut ]]
    DISME_DOCUMENTNAME: $[[ inputs.dismeDocumentName ]]
    ZIP_DIRECTORY: $[[ inputs.zipDirectory ]]
    ZIP_FILE_NAME: $[[ inputs.zipFileName ]]
    ZIP_FILE_EXTENSION: .zip
    APP_ARTIFACTS_PATH: $[[ inputs.clientAppArtifactsPath ]]/
    DX_PILLAR: $[[ inputs.dxPillar ]]
    DX_DOMAIN: $[[ inputs.dxDomain ]]
    DX_SUBDOMAIN: $[[ inputs.dxSubDomain ]]
    DX_TEAM: $[[ inputs.dxTeam ]]

disme-deploy-$[[ inputs.project ]]:
  stage: deploy
  extends:
    - .disme-deploy
    - .rules-$[[ inputs.when ]]
  needs: [ 'disme-upload-$[[ inputs.project ]]' ]
  variables:
    DISME_SHORTCUT: $[[ inputs.dismeShortcut ]]
    DISME_DOCUMENTNAME: $[[ inputs.dismeDocumentName ]]
    DISME_ENVIRONMENT: $[[ inputs.dismeEnvironment ]]
    DISME_SERVER: $[[ inputs.dismeServers ]]
